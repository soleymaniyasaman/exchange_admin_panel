[{"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/index.js":"1","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/App.js":"2","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/reportWebVitals.js":"3","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/context/provider.js":"4","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/routerConstants.js":"5","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/utils.js":"6","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/messages/newMessage.js":"7","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/tickets/ticketDetail.js":"8","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/messages/index.js":"9","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/tickets/index.js":"10","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/layout/altLayout/index.js":"11","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/layout/index.js":"12","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/login/index.js":"13","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/orders/index.js":"14","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/commissions/index.js":"15","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/points/index.js":"16","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/levelManage/index.js":"17","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/orderHistory/index.js":"18","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/tradeHistory/index.js":"19","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/whithdrawHistory/index.js":"20","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/depositHistory/index.js":"21","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/historyAccountant/index.js":"22","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/rialAccountant/index.js":"23","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/cryptoAccountant/index.js":"24","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/constants.js":"25","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/hooks.js":"26","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/messages/messagesDatagrid.js":"27","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/tickets/ticketsDatagrid.js":"28","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/commissions/Inputs.js":"29","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/orders/ordersDatagrid.js":"30","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/levelManage/Inputs.js":"31","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/points/pointsDatagrid.js":"32","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/tradeHistory/tradesHistoryDatagrid.js":"33","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/historyAccountant/historyAccountantDatagrid.js":"34","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/orderHistory/ordersHistoryDatagrid.js":"35","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/rialAccountant/rialAccountantDatagrid.js":"36","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/cryptoAccountant/cryptoAccountantDatagrid.js":"37","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/api.js":"38","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/messages/cardSection/index.js":"39","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/tickets/cardSection/index.js":"40","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/layout/sideBar/index.js":"41","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/layout/topBar/index.js":"42","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/orders/cardSection/index.js":"43","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/points/cardSection/index.js":"44","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/levelManage/cardSection/index.js":"45","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/cardSection/index.js":"46","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/cardSection/index.js":"47","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/messages/filters.js":"48","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/tickets/filters.js":"49","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/orders/filters.js":"50","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/points/filters.js":"51","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/tradeHistory/filters.js":"52","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/depositHistory/filters.js":"53","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/historyAccountant/filters.js":"54","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/whithdrawHistory/filters.js":"55","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/orderHistory/filters.js":"56","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/rialAccountant/filters.js":"57","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/cryptoAccountant/filters.js":"58","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/popUp/index.js":"59","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/depositHistory/coinDeposisHistoryDatagrid.js":"60","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/depositHistory/rialDepositsHistoryDatagrid.js":"61","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/whithdrawHistory/withdrawsCoinHistoryDatagrid.js":"62","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/discriminant.js":"63","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/math-round.js":"64","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/copy-to-clipboard/index.js":"65","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/config-api.js":"66","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/policies.js":"67","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/help.js":"68","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/about_us.js":"69","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/whithdrawHistory/withdrawsRialHistoryDatagrid.js":"70","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/editor/index.js":"71","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/editor/constants.js":"72","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/classicEditor.js":"73","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/market-setting/index.js":"74","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/market-setting/MarketSettingDetail.js":"75","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/market-setting/add-network.js":"76","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/serviceWorkerRegistration.js":"77","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/index.js":"78","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/users/index.js":"79","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/users/reportsUsersData.js":"80","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/users/authenticationChart.js":"81","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/users/numOfUsers.js":"82","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/users/signUpUsers.js":"83","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/users/activeUsers.js":"84","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/index.js":"85","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/reportsTradeData.js":"86","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/reportsOrdersData.js":"87","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/cardSectionOrder/index.js":"88","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/cardSectionTrade/index.js":"89","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/wallet.js":"90","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/orderProgressDonutChart.js":"91","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/orderDonutChart.js":"92","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/orderBarChart.js":"93","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/numOfOrders.js":"94","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/filtersProgress.js":"95","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/filtersArea.js":"96","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/filtersBars.js":"97","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/tradeProgressDonutChart.js":"98","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/tradeDonutChart.js":"99","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/numOfTrades.js":"100","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/tradeBarChart.js":"101","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/filtersProgress.js":"102","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/filtersBars.js":"103","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/filtersArea.js":"104","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/index.js":"105","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/cardSection/index.js":"106","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userDatagrid/index.js":"107","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userDatagrid/filters.js":"108","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/usersForm/selectedForm/index.js":"109","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userDeposits/index.js":"110","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/usersForm/index.js":"111","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userDeposits/dataGrid.js":"112","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/usersForm/Wizard.js":"113","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/usersForm/userInfoForm/index.js":"114","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userOrders/index.js":"115","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userTransactionHistory/index.js":"116","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userTrades/index.js":"117","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userWithdraws/index.js":"118","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userWallets/index.js":"119","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userLoginActivity/index.js":"120","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userTrades/filters.js":"121","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userOrders/filters.js":"122","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userLoginActivity/filters.js":"123","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userWithdraws/filters.js":"124","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userTransactionHistory/filters.js":"125","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userWallets/walletChart.js":"126","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/admins/index.js":"127","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/admins/userDatagrid/index.js":"128","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/admins/userDatagrid/filters.js":"129","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/admins/usersForm/selectedForm/index.js":"130","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/admins/usersForm/index.js":"131","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/robots/index.js":"132","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/robots/userRobotsDatagrid/index.js":"133","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/robots/userRobotsDatagrid/filters.js":"134","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/robots/usersForm/selectedForm/index.js":"135","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/robots/usersForm/index.js":"136","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/roleManage/roleDetail/index.js":"137","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/roleManage/index.js":"138","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/roleManage/roleDataGrid/index.js":"139","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/roleManage/roleDataGrid/filters.js":"140","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/roleManage/roleDetail/filters.js":"141","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/roleManage/roleAdd/index.js":"142"},{"size":1329,"mtime":1641997258278,"results":"143","hashOfConfig":"144"},{"size":6958,"mtime":1650182129190,"results":"145","hashOfConfig":"144"},{"size":362,"mtime":1635184773078,"results":"146","hashOfConfig":"144"},{"size":2984,"mtime":1648537618463,"results":"147","hashOfConfig":"144"},{"size":1826,"mtime":1650182129213,"results":"148","hashOfConfig":"144"},{"size":2623,"mtime":1640669612087,"results":"149","hashOfConfig":"144"},{"size":13523,"mtime":1641997258243,"results":"150","hashOfConfig":"144"},{"size":7424,"mtime":1641997258255,"results":"151","hashOfConfig":"144"},{"size":412,"mtime":1640669612060,"results":"152","hashOfConfig":"144"},{"size":408,"mtime":1640669612066,"results":"153","hashOfConfig":"144"},{"size":240,"mtime":1636972048605,"results":"154","hashOfConfig":"144"},{"size":526,"mtime":1635184898806,"results":"155","hashOfConfig":"144"},{"size":7285,"mtime":1671013857948,"results":"156","hashOfConfig":"144"},{"size":413,"mtime":1640669612063,"results":"157","hashOfConfig":"144"},{"size":6438,"mtime":1649775332492,"results":"158","hashOfConfig":"144"},{"size":294,"mtime":1650182129193,"results":"159","hashOfConfig":"144"},{"size":6527,"mtime":1649775332495,"results":"160","hashOfConfig":"144"},{"size":455,"mtime":1640669612042,"results":"161","hashOfConfig":"144"},{"size":452,"mtime":1640669612043,"results":"162","hashOfConfig":"144"},{"size":1940,"mtime":1640669612043,"results":"163","hashOfConfig":"144"},{"size":1786,"mtime":1640669612040,"results":"164","hashOfConfig":"144"},{"size":478,"mtime":1640669612037,"results":"165","hashOfConfig":"144"},{"size":461,"mtime":1640669612038,"results":"166","hashOfConfig":"144"},{"size":469,"mtime":1640669612036,"results":"167","hashOfConfig":"144"},{"size":3890,"mtime":1651403422611,"results":"168","hashOfConfig":"144"},{"size":2588,"mtime":1635321779487,"results":"169","hashOfConfig":"144"},{"size":8790,"mtime":1641997258243,"results":"170","hashOfConfig":"144"},{"size":6381,"mtime":1641997258255,"results":"171","hashOfConfig":"144"},{"size":6088,"mtime":1649775332490,"results":"172","hashOfConfig":"144"},{"size":10045,"mtime":1641997258245,"results":"173","hashOfConfig":"144"},{"size":7010,"mtime":1649147923975,"results":"174","hashOfConfig":"144"},{"size":5626,"mtime":1641997258246,"results":"175","hashOfConfig":"144"},{"size":10781,"mtime":1641997258229,"results":"176","hashOfConfig":"144"},{"size":9236,"mtime":1641997258220,"results":"177","hashOfConfig":"144"},{"size":8417,"mtime":1641997258228,"results":"178","hashOfConfig":"144"},{"size":13225,"mtime":1641997258221,"results":"179","hashOfConfig":"144"},{"size":12667,"mtime":1641997258216,"results":"180","hashOfConfig":"144"},{"size":9468,"mtime":1641997258280,"results":"181","hashOfConfig":"144"},{"size":3103,"mtime":1641997258242,"results":"182","hashOfConfig":"144"},{"size":3103,"mtime":1641997258254,"results":"183","hashOfConfig":"144"},{"size":12000,"mtime":1650182129192,"results":"184","hashOfConfig":"144"},{"size":3465,"mtime":1641997258233,"results":"185","hashOfConfig":"144"},{"size":3103,"mtime":1641997258244,"results":"186","hashOfConfig":"144"},{"size":3103,"mtime":1641997258245,"results":"187","hashOfConfig":"144"},{"size":2833,"mtime":1635184898807,"results":"188","hashOfConfig":"144"},{"size":3103,"mtime":1641997258222,"results":"189","hashOfConfig":"144"},{"size":3103,"mtime":1641997258212,"results":"190","hashOfConfig":"144"},{"size":3670,"mtime":1641997258242,"results":"191","hashOfConfig":"144"},{"size":3636,"mtime":1641997258254,"results":"192","hashOfConfig":"144"},{"size":5774,"mtime":1641997258244,"results":"193","hashOfConfig":"144"},{"size":3519,"mtime":1641997258246,"results":"194","hashOfConfig":"144"},{"size":6655,"mtime":1641997258228,"results":"195","hashOfConfig":"144"},{"size":6817,"mtime":1641997258224,"results":"196","hashOfConfig":"144"},{"size":3181,"mtime":1637589934714,"results":"197","hashOfConfig":"144"},{"size":5765,"mtime":1641997258230,"results":"198","hashOfConfig":"144"},{"size":6536,"mtime":1641997258227,"results":"199","hashOfConfig":"144"},{"size":2331,"mtime":1637589934715,"results":"200","hashOfConfig":"144"},{"size":3206,"mtime":1641997258217,"results":"201","hashOfConfig":"144"},{"size":1952,"mtime":1641997258247,"results":"202","hashOfConfig":"144"},{"size":8361,"mtime":1641997258223,"results":"203","hashOfConfig":"144"},{"size":8881,"mtime":1641997258226,"results":"204","hashOfConfig":"144"},{"size":9094,"mtime":1641997258230,"results":"205","hashOfConfig":"144"},{"size":1038,"mtime":1640669612080,"results":"206","hashOfConfig":"144"},{"size":227,"mtime":1636972048645,"results":"207","hashOfConfig":"144"},{"size":932,"mtime":1636972048641,"results":"208","hashOfConfig":"144"},{"size":1247,"mtime":1638283852982,"results":"209","hashOfConfig":"144"},{"size":3415,"mtime":1641997258236,"results":"210","hashOfConfig":"144"},{"size":3401,"mtime":1641997258236,"results":"211","hashOfConfig":"144"},{"size":3412,"mtime":1641997258235,"results":"212","hashOfConfig":"144"},{"size":9116,"mtime":1641997258231,"results":"213","hashOfConfig":"144"},{"size":1639,"mtime":1638966884193,"results":"214","hashOfConfig":"144"},{"size":901,"mtime":1639286632594,"results":"215","hashOfConfig":"144"},{"size":2084,"mtime":1640669612054,"results":"216","hashOfConfig":"144"},{"size":2266,"mtime":1641997258241,"results":"217","hashOfConfig":"144"},{"size":16840,"mtime":1648537618433,"results":"218","hashOfConfig":"144"},{"size":9522,"mtime":1641997258239,"results":"219","hashOfConfig":"144"},{"size":5064,"mtime":1641997258279,"results":"220","hashOfConfig":"144"},{"size":398,"mtime":1648537618440,"results":"221","hashOfConfig":"144"},{"size":401,"mtime":1650182129196,"results":"222","hashOfConfig":"144"},{"size":2714,"mtime":1651405161363,"results":"223","hashOfConfig":"144"},{"size":1974,"mtime":1651405654307,"results":"224","hashOfConfig":"144"},{"size":2091,"mtime":1651403586427,"results":"225","hashOfConfig":"144"},{"size":3515,"mtime":1651407818841,"results":"226","hashOfConfig":"144"},{"size":1914,"mtime":1651405087426,"results":"227","hashOfConfig":"144"},{"size":395,"mtime":1648537618452,"results":"228","hashOfConfig":"144"},{"size":2483,"mtime":1648537618453,"results":"229","hashOfConfig":"144"},{"size":4132,"mtime":1651391554337,"results":"230","hashOfConfig":"144"},{"size":4292,"mtime":1648537618435,"results":"231","hashOfConfig":"144"},{"size":4220,"mtime":1648537618448,"results":"232","hashOfConfig":"144"},{"size":3734,"mtime":1648537618469,"results":"233","hashOfConfig":"144"},{"size":1457,"mtime":1648537618446,"results":"234","hashOfConfig":"144"},{"size":1423,"mtime":1648537618444,"results":"235","hashOfConfig":"144"},{"size":2558,"mtime":1648537618441,"results":"236","hashOfConfig":"144"},{"size":4590,"mtime":1651392375885,"results":"237","hashOfConfig":"144"},{"size":3152,"mtime":1648537618439,"results":"238","hashOfConfig":"144"},{"size":5028,"mtime":1648537618436,"results":"239","hashOfConfig":"144"},{"size":3830,"mtime":1648537618438,"results":"240","hashOfConfig":"144"},{"size":1457,"mtime":1648537618458,"results":"241","hashOfConfig":"144"},{"size":1423,"mtime":1648537618457,"results":"242","hashOfConfig":"144"},{"size":4299,"mtime":1648537618452,"results":"243","hashOfConfig":"144"},{"size":2558,"mtime":1648537618456,"results":"244","hashOfConfig":"144"},{"size":3152,"mtime":1648537618450,"results":"245","hashOfConfig":"144"},{"size":3809,"mtime":1648537618449,"results":"246","hashOfConfig":"144"},{"size":4392,"mtime":1648537618449,"results":"247","hashOfConfig":"144"},{"size":434,"mtime":1649775332526,"results":"248","hashOfConfig":"144"},{"size":4566,"mtime":1649775332523,"results":"249","hashOfConfig":"144"},{"size":5088,"mtime":1649775332535,"results":"250","hashOfConfig":"144"},{"size":3956,"mtime":1649775332530,"results":"251","hashOfConfig":"144"},{"size":3498,"mtime":1649775332887,"results":"252","hashOfConfig":"144"},{"size":4970,"mtime":1649775332539,"results":"253","hashOfConfig":"144"},{"size":15058,"mtime":1649775332579,"results":"254","hashOfConfig":"144"},{"size":6420,"mtime":1649775332538,"results":"255","hashOfConfig":"144"},{"size":6418,"mtime":1649775332572,"results":"256","hashOfConfig":"144"},{"size":16663,"mtime":1649775332897,"results":"257","hashOfConfig":"144"},{"size":7696,"mtime":1649775332549,"results":"258","hashOfConfig":"144"},{"size":7041,"mtime":1649775332565,"results":"259","hashOfConfig":"144"},{"size":12966,"mtime":1649775332563,"results":"260","hashOfConfig":"144"},{"size":8143,"mtime":1649775332570,"results":"261","hashOfConfig":"144"},{"size":8922,"mtime":1649775332567,"results":"262","hashOfConfig":"144"},{"size":7875,"mtime":1649775332543,"results":"263","hashOfConfig":"144"},{"size":809,"mtime":1649775332561,"results":"264","hashOfConfig":"144"},{"size":1077,"mtime":1649775332545,"results":"265","hashOfConfig":"144"},{"size":1077,"mtime":1649775332541,"results":"266","hashOfConfig":"144"},{"size":800,"mtime":1649775332569,"results":"267","hashOfConfig":"144"},{"size":1103,"mtime":1649775332564,"results":"268","hashOfConfig":"144"},{"size":1921,"mtime":1649775332569,"results":"269","hashOfConfig":"144"},{"size":419,"mtime":1649775332500,"results":"270","hashOfConfig":"144"},{"size":5409,"mtime":1649775332505,"results":"271","hashOfConfig":"144"},{"size":3470,"mtime":1649775332503,"results":"272","hashOfConfig":"144"},{"size":351,"mtime":1649775332511,"results":"273","hashOfConfig":"144"},{"size":6473,"mtime":1649775332509,"results":"274","hashOfConfig":"144"},{"size":449,"mtime":1649775332512,"results":"275","hashOfConfig":"144"},{"size":4475,"mtime":1649775332514,"results":"276","hashOfConfig":"144"},{"size":3468,"mtime":1649775332514,"results":"277","hashOfConfig":"144"},{"size":351,"mtime":1649775332520,"results":"278","hashOfConfig":"144"},{"size":6156,"mtime":1649775332517,"results":"279","hashOfConfig":"144"},{"size":5112,"mtime":1650182129206,"results":"280","hashOfConfig":"144"},{"size":295,"mtime":1650182129197,"results":"281","hashOfConfig":"144"},{"size":6363,"mtime":1650182129204,"results":"282","hashOfConfig":"144"},{"size":3519,"mtime":1650182129203,"results":"283","hashOfConfig":"144"},{"size":2459,"mtime":1650182129205,"results":"284","hashOfConfig":"144"},{"size":7775,"mtime":1650182129199,"results":"285","hashOfConfig":"144"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},"ue9una",{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"288"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"288"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"288"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"288"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"288"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"288"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"288"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"288"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"288"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"288"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"288"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"288"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"288"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"288"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":3,"source":"355","usedDeprecatedRules":"288"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"288"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"288"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"288"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"288"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"288"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"288"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"288"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"288"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"288"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"288"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"288"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"288"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"288"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"288"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"288"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"288"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"404"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"288"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"288"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"288"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"288"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"288"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"288"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"288"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"288"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"288"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"288"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"288"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"288"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"288"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"288"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"288"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"288"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"288"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"288"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"475"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"288"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"288"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"288"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"288"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"288"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"288"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"288"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"288"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"288"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"288"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"288"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"288"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"288"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"288"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"288"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"288"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"288"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"288"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"288"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"288"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"288"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"288"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"288"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"288"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"288"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"288"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"288"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"288"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"288"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"288"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"288"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"288"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"288"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"288"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"288"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"288"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"288"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"288"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"288"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"288"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"288"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"288"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"288"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"288"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"288"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667","usedDeprecatedRules":"288"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670","usedDeprecatedRules":"288"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"288"},"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/index.js",[],["674","675"],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/App.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/reportWebVitals.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/context/provider.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/routerConstants.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/utils.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/messages/newMessage.js",["676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692"],"import React from 'react';\n\nimport { Link , useHistory } from \"react-router-dom\";\n\nimport { Field, Formik, Form } from \"formik\";\n\nimport { Grid, CircularProgress, Button, Checkbox, FormControlLabel, Select , MenuItem, withStyles, OutlinedInput } from '@material-ui/core';\n\nimport InputBase from '@material-ui/core/InputBase';\n\nimport { USERS_LIST , IAM_APP ,USER_SEND_MESSAGES} from \"../../utils/constants\"\n\nimport { useFetchApi } from '../../utils/hooks';\n\nimport { UrlQuery } from '../../utils/utils';\n\nimport { useTheme } from '@material-ui/styles';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\nfunction NewMessage(props) {\n\n\n\n    let loginLoading = false\n\n    const history = useHistory()\n\n    const [checked, setChecked] = React.useState(false)\n\n    const [selectUserName, setSelectUserName] = React.useState([])\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n            width: \"inherit !important\",\n\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'initial',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            direction: \"rtl !important\",\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n            },\n\n        },\n\n    }))(InputBase);\n\n    const theme = useTheme();\n    const [personName, setPersonName] = React.useState([]);\n  \n    const handleChange = (event) => {\n        // console.log(\"value ==>\",event)\n      const {\n        target: { value },\n      } = event;\n      setPersonName(\n        //   event.target.value\n        // On autofill we get a the stringified value.\n        typeof value === 'string' ? value.split(',') : value,\n      );\n    };\n  \n    console.log(\"peron name is ==>\",personName)\n    \n    const [params, setParams] = React.useState({})\n    \n    const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    const [{ data:submitMessage, isLoading:submitMessageIsLoading, hasError:submitMessageHasError }, doFetchSubmit] = useFetchApi(undefined, [])\n    \n\n\n    const handleSubmit= (values) => {\n\n        console.log(\"name\",values.toggle)\n\n        loginLoading = true\n\n        let usersId = []\n\n        if (values.toggle) {\n            \n            data?.items?.map((item,index) => {\n            \n                usersId.push(item.id)\n    \n            })\n\n        }\n\n        let payload = {\n            \"message\": {\n              \"title\": values.title,\n              \"body\": values.body,\n              \"target_type\": values.toggle ? \"all\" : personName.length === 1 ? \"person\" : \"multi_person\"\n            },\n            \"users\": personName\n          }\n        \n\n        doFetchSubmit(\"POST\", IAM_APP , USER_SEND_MESSAGES, payload )\n        \n        setTimeout(() => {\n            history.push(\"/messages\")\n            \n        }, 1000);\n        // .then(resp => history.push(\"/messages\"))\n    }\n  \n\n    // const handleSelectUsers = () => {\n\n\n    // }\n  \n    React.useEffect(() => {\n  \n      doFetch(\"GET\", IAM_APP , UrlQuery(USERS_LIST, {...params}) )\n  \n    }, [params])\n\n\n    return (\n\n        <div className=\"content mt-5 p-4\">\n\n            <div className=\"d-flex justify-content-between\">\n\n                <div className=\"d-flex w-25\">\n\n                    <img src=\"/assets/drawer/Polygon.svg\" />\n\n                    <p className=\"font_title_name me-1\">ارسال پیام </p>\n\n                </div>\n\n                <Link className=\"text-decoration-none\" style={{ color: \"#10D078\" }} to={'/messages'} >بازگشت به تاریخچه پیام‌ها {`->`} </Link>\n\n            </div>\n\n            <div className=\"mt-4\">\n\n                <Formik\n\n                    initialValues={{ account_number: '', title: '' ,toggle: false}}\n\n                    enableReinitialize={true}\n\n                // validate={this.validate}\n\n                onSubmit={values => handleSubmit(values)}\n\n                >\n\n                    <Form>\n\n                        <div style={{ flexGrow: 1 }} >\n\n                            <Grid container spacing={3} justify=\"space-between\" className=\"p-3\">\n\n                                <Grid item md={5}>\n\n                                    <div className=\"d-flex w-100\" style={{ maxHeight: \"34px\" }}>\n\n                                        <label className=\"text-end text-white ms-4\" style={{ minWidth: \"90px\" }} htmlFor=\"account_number\">کاربر</label>\n\n                                        {/* <Field\n\n                                            type=\"text\"\n\n                                            name=\"account_number\"\n\n                                            placeholder=\"\"\n\n                                            required\n\n                                            className=\"form-control bg_input input_text\"\n\n                                        /> */}\n\n                                        {/* <Select \n                                        name=\"account_number\" \n                                        value={selectUserName} \n                                        input={<BootstrapInput />} \n                                        renderValue={(selected) => {\n                                            if (selected.length === 0) {\n                                            return <em>Placeholder</em>;\n                                            }\n                                            console.log(\"selected ==>\",selected)\n                                            return selected.join(', ');\n                                        }}\n                                        displayEmpty \n                                        MenuProps={MenuProps}\n                                        inputProps={{ 'aria-label': 'Without label' }}\n                                        onChange={e =>  setSelectUserName([e.target.value]) } select size=\"small\">\n\n                                            {data?.items?.map((item,index) => {\n\n                                                return <MenuItem \n                                                key={item.id}\n                                                value={item.id}>{item.credentials.first_name} {item.credentials.last_name}</MenuItem>\n\n                                            })}\n\n                                        </Select> */}\n\n                                        <Select\n                                            multiple\n                                            // displayEmpty\n                                            className=\"w-100 text-dark bg-light\"\n                                            value={personName}\n                                            onChange={handleChange}\n                                            input={<OutlinedInput />}\n                                            // renderValue={(selected) => {\n                                            //     if (selected.length === 0) {\n                                            //     return <em>Placeholder</em>;\n                                            //     }\n                                            //     console.log(\"selected ==>\",selected)\n                                            //     return selected.join(', ');\n                                            // }}\n                                            \n                                            MenuProps={MenuProps}\n                                            inputProps={{ 'aria-label': 'Without label' }}\n                                            >\n                                            <MenuItem disabled value=\"\">\n                                                <em>Placeholder</em>\n                                            </MenuItem>\n                                            {data?.items?.map((name) => (\n                                                <MenuItem\n                                                key={name.id}\n                                                value={name.id}\n                                                style={getStyles(name, personName, theme)}\n                                                >\n                                                {name.credentials.first_name} {name.credentials.last_name}\n                                                </MenuItem>\n                                            ))}\n                                            </Select>\n\n                                    </div>\n\n                                </Grid>\n\n                            </Grid>\n\n                            <Grid container >\n\n                                <Grid item md={1}></Grid>\n\n                                <Grid item md={5} className=\"\">\n\n                                    {/* <Checkbox label=\"انتخاب همه کاربران\" value={checked} size=\"small\" color=\"primary\" onClick={ _ => setChecked( state => !state) } /> */}\n\n                                    {/* <FormControlLabel\n\n                                        control={<Checkbox checked={checked} color=\"primary\" onChange={_ => {setChecked(state => !state)}} name=\"checkedA\" />}\n\n                                        label=\"انتخاب همه کاربران\"\n\n                                        className=\"text-white me-0\"\n\n                                    /> */}\n                                            <label>   \n                                                <Field type=\"checkbox\" name=\"toggle\" className=\"ms-2\" />\n\n                                                <label className=\"text-white me-0\" htmlFor=\"toggle\">انتخاب همه کاربران</label>\n                                                {/* {`${props.values.toggle}`} */}\n                                            </label>\n\n                                </Grid>\n\n                            </Grid>\n\n                            <Grid container spacing={3} justify=\"space-between\" className=\"p-3\">\n\n                                <Grid item md={5}>\n\n                                    <div className=\"d-flex w-100\" style={{ maxHeight: \"34px\" }}>\n\n                                        <label className=\"text-end text-white fs-6 ms-4\" style={{ minWidth: \"90px\" }} htmlFor=\"title\">عنوان پیام</label>\n\n                                        <Field\n\n                                            type=\"text\"\n\n                                            name=\"title\"\n\n                                            placeholder=\"\"\n\n                                            required\n\n                                            className=\"form-control bg_input input_text\"\n\n                                        />\n\n                                    </div>\n\n                                </Grid>\n\n                            </Grid>\n\n                            <Grid container spacing={3} justify=\"space-between\" className=\"p-3\">\n\n                                <Grid item md>\n\n                                    <div className=\"d-flex w-100\">\n\n                                        <label className=\"text-end text-white fs-6 ms-4\" style={{ minWidth: \"90px\" }} htmlFor=\"amount\">متن پیام</label>\n\n                                        <Field\n\n                                            as=\"textarea\"\n\n                                            name=\"body\"\n\n                                            placeholder=\"متن پیام را بنویسید\"\n\n                                            required\n\n                                            className=\"form-control bg_input input_text\"\n\n                                        />\n\n                                    </div>\n\n                                </Grid>\n\n                            </Grid>\n\n                            {/* { Boolean(hasError) && <p className=\"text-danger\">{hasError}</p> } */}\n\n                            <div className=\"mt-4 pt-3 ms-5 ps-2 d-flex justify-content-end\">\n\n                                <Button disabled={loginLoading} variant=\"contained\" type=\"submit\" color=\"primary\" >\n\n                                    ارسال پیام\n\n                                    {loginLoading && <CircularProgress size={24} className=\"position-absolute\" />}\n\n                                </Button>\n\n                            </div>\n\n                        </div>\n\n                    </Form>\n\n                </Formik>\n\n            </div>\n\n        </div>\n\n    )\n\n}\n\n\n\nexport default NewMessage\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/tickets/ticketDetail.js",["693","694","695","696","697","698","699","700"],"import React from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport { Field, Formik, Form } from \"formik\";\nimport { Grid, CircularProgress, Button, Checkbox, FormControlLabel, Divider } from '@material-ui/core';\nimport {NotificationImportant} from '@material-ui/icons';\nimport { useFetchApi } from '../../utils/hooks';\nimport { IAM_APP, REPLY_TICKET, TICKET_DETAIL , USERS_LIST} from '../../utils/constants';\nimport { timeToStr, UrlQuery } from '../../utils/utils';\n\n\nconst MessageBox = (props) => {\n    let border = props.isAdmin ? \"20px 0 20px 20px\" : \"0 20px 20px 20px\";\n    let direction = props.isAdmin ? \"row\" : \"row-reverse\"\n    return (\n        <Grid container spacing={3} direction={direction} justify=\"space-between\" className=\"px-3 pb-2\">\n            <Grid item md={5}>\n                <div className=\"border border-light px-3 py-2 text-white\" style={{borderRadius: border, backgroundColor: \"#181C1F\"}}>\n                    <div className=\"d-flex justify-content-between\">\n                        <span>{props.writer?.items?props.writer?.items?.map(item => item.id === props.item?.user?.id ? `${item.credentials.first_name} ${item.credentials.last_name}` : null):props.writer}</span>\n                        <span>{ timeToStr(props.item?.created_at, \"HH:mm  -   jYYYY/jMM/jDD\") }</span>\n                    </div>\n                    <p className=\"py-1 px-2\">\n                        {props.item?.body}\n                    </p>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n\n\nfunction TicketDetail(props) {\n\n    const {id} = useParams();\n    \n    const [{ data: user, isLoading: userLoading },doFetch] = useFetchApi(undefined, [])\n    const [{ data: ticket, isLoading: ticketLoading }, getTicket] = useFetchApi(undefined, {})\n    const [{ data: ticketsReply, isLoading: ticketsReplyLoading }, getTicketsReply] = useFetchApi(undefined, [])\n    const [{ data: newReply, isLoading: newReplyLoading, hasError }, createReply] = useFetchApi(undefined, {})\n\n    React.useEffect( () => {\n        if (id){\n            doFetch(\"GET\", IAM_APP, UrlQuery(USERS_LIST))\n            getTicket(\"GET\", IAM_APP, TICKET_DETAIL(id))\n            getTicketsReply(\"GET\", IAM_APP, REPLY_TICKET(id))\n        }\n    }, [])\n\n    React.useEffect( () => {\n        if (!newReplyLoading && Object.keys(newReply).length){\n            getTicketsReply(\"GET\", IAM_APP, REPLY_TICKET(id))\n        }\n    }, [newReplyLoading])\n\n    const handleSubmit = (values) => {\n        const payload = {\n            \"body\": values?.body,\n            \"media_id\": ticket?.media_id\n          \n        }\n        if (values.body !== ''){\n            createReply(\"POST\", IAM_APP, REPLY_TICKET(id), payload)\n        }\n    }\n\n    return (\n        <div className=\"content mt-5 p-4\">\n            <div className=\"d-flex justify-content-between\">\n                <div className=\"d-flex w-25\">\n                    <img src=\"/assets/drawer/Polygon.svg\" />\n                    <p className=\"font_title_name me-1\">{user?.items?.map(item => item.id === ticket?.user?.id ? `${item.credentials.first_name} ${item.credentials.last_name}` : null)} / {ticket?.category?.title}</p>\n                </div>\n                <Link className=\"text-decoration-none\" style={{color: \"#10D078\"}} to={'/tickets'} >بازگشت به لیست تیکت‌ها {`->`} </Link>\n            </div>\n            {console.log(\"ticket data\",ticketsReply,ticket)}\n            <div className=\"mt-4\">\n                { !ticketLoading && Boolean(Object.keys(ticket)) && <MessageBox item={ticket} writer={user} isAdmin={false}/>}\n                {\n                    !ticketsReplyLoading && Boolean(ticketsReply?.items?.length) &&\n                    // ticketsReply.items.map( (item, index) => <MessageBox key={index} item={item} isAdmin={ item?.user?.id !== ticket?.user?.id } /> )\n                        ticketsReply.items.map( (item, index) => <MessageBox key={index} writer={item.id} item={item} isAdmin={ true} /> )\n                }\n            </div>\n            <Divider className=\"my-3\" />\n            <div className=\"mt-4\">\n                <Formik\n                    initialValues={{ body: '' }}\n                    enableReinitialize={true}\n                    // validate={this.validate}\n                    onSubmit={ values => handleSubmit(values) }\n                >\n                    <Form>\n                        <div style={{flexGrow: 1}} >\n                            <Grid container spacing={3} justify=\"space-between\" className=\"p-3\">\n                                <Grid item md>\n                                    <div className=\"d-flex flex-column w-100\">\n                                        <label className=\"text-end text-white fs-6 mb-2 ms-4\" style={{minWidth: \"90px\"}} htmlFor=\"amount\">متن پاسخ</label>\n                                        <Field\n                                            as=\"textarea\"\n                                            name=\"body\"\n                                            placeholder=\"\"\n                                            required\n                                            className=\"form-control bg_input input_text\"\n                                        />\n                                    </div>\n                                </Grid>\n                            </Grid>\n                            <Grid container spacing={3} justify=\"space-between\" className=\"p-3\">\n                                <Grid item md>\n                                    {/* <div className=\"d-flex w-100\">\n                                        <input\n                                            accept=\"image/*\"\n                                            className=\"d-none\"\n                                            id=\"contained-button-file\"\n                                            multiple\n                                            type=\"file\"\n                                        />\n                                        <label htmlFor=\"contained-button-file\">\n                                            <Button variant=\"contained\" color=\"secondary\" component=\"span\">\n                                                انتخاب فایل ضمیمه\n                                            </Button>\n                                        </label>\n                                    </div>\n                                    <div className=\"mt-2 text-white\" style={{fontSize: \"0.8rem\"}} > <span><NotificationImportant size=\"small\" className=\"text-danger\" /></span> فرمت های مجاز فایل ضمیمه شامل jpg , png , zip, rar, pdf می باشند</div> */}\n                                </Grid>\n                            </Grid>\n                            {/* { Boolean(hasError) && <p className=\"text-danger\">{hasError}</p> } */}\n                            <div className=\"my-4 ms-5 ps-2 d-flex justify-content-end\">\n                                <Button disabled={newReplyLoading} variant=\"contained\" type=\"submit\" color=\"primary\" >\n                                    ارسال پاسخ\n                                    { newReplyLoading && <CircularProgress size={24} className=\"position-absolute\" />}\n                                </Button>\n                            </div>\n                        </div>\n                    </Form>\n                </Formik>\n            </div>\n        </div>\n    )\n}\n\nexport default TicketDetail\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/messages/index.js",["701"],"import React from 'react';\nimport CardSection from './cardSection';\n// import UserTable from './userTable/table';\nimport MessagesDatagrid from './messagesDatagrid';\n\nconst Messages = () => {\n    return (\n        <div className=\"\">\n            <p className=\"text-white pe-4\">پیام‌ها</p>\n            {/* <CardSection /> */}\n            <MessagesDatagrid />\n        </div>\n    );\n}\n\nexport default Messages;","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/tickets/index.js",["702"],"import React from 'react';\nimport CardSection from './cardSection';\n// import UserTable from './userTable/table';\nimport TicketsDatagrid from './ticketsDatagrid';\n\nconst Tickets = () => {\n    return (\n        <div className=\"\">\n            <p className=\"text-white pe-4\">پشتیبانی</p>\n            {/* <CardSection /> */}\n            <TicketsDatagrid />\n        </div>\n    );\n}\n\nexport default Tickets;","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/layout/altLayout/index.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/layout/index.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/login/index.js",["703"],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/orders/index.js",["704"],"import React from 'react';\nimport CardSection from './cardSection';\n// import UserTable from './userTable/table';\nimport OrdersDatagrid from './ordersDatagrid';\n\nconst Orders = () => {\n    return (\n        <div className=\"\">\n            <p className=\"text-white pe-4\">سفارش‌های باز</p>\n            {/* <CardSection /> */}\n            <OrdersDatagrid />\n        </div>\n    );\n}\n\nexport default Orders;","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/commissions/index.js",["705","706","707"],"import React from 'react';\nimport { Nav } from \"react-bootstrap\";\nimport { CircularProgress, Backdrop } from '@material-ui/core';\nimport { useFetchApi } from '../../utils/hooks';\nimport { LEVELS_LIST, LEVEL_DETAIL, TRADING_APP } from '../../utils/constants';\nimport FormComp from \"./Inputs\";\nimport \"./style.css\";\n\n\nfunction Commissions(props) {\n\n    const [{ data: levelList, isLoading: levelLoading }, getLevelList] = useFetchApi(undefined, []);\n    const [{ data: updateLevelData, isLoading: updateLevelLoading }, updateLevel] = useFetchApi(undefined, {});\n\n    const [level1, setLevel1] = React.useState(\"market\")\n    const [level2, setLevel2] = React.useState(\"market\")\n    const [level3, setLevel3] = React.useState(\"market\")\n    const [level4, setLevel4] = React.useState(\"market\")\n\n    const handleSubmitLevel = (values, id) => {\n        console.log(\"value\", values)\n        updateLevel(\"PUT\", TRADING_APP, LEVEL_DETAIL(id), values)\n    }\n\n    React.useEffect(() => {\n        getLevelList(\"GET\", TRADING_APP, LEVELS_LIST)\n    }, [])\n\n    React.useEffect(() => {\n        if (!updateLevelLoading && Object.keys(updateLevelData).length) {\n            getLevelList(\"GET\", TRADING_APP, LEVELS_LIST)\n        }\n    }, [updateLevelLoading])\n    console.log(\"level 1\", level1)\n    return (\n        <div className=\"mt-3\">\n            <span className=\"text-white pe-2\">مدیریت کارمزد</span>\n            <div className=\"content mt-3 \">\n                <div className=\"d-flex mb-2\">\n                    <img src=\"/assets/drawer/Polygon.svg\" />\n                    <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>کارمزد خرید و فروش </p>\n                </div>\n                <Backdrop className=\"backdrop-loading\" open={levelLoading} >\n                    <CircularProgress color=\"primary\" />\n                </Backdrop>\n                <div className=\"content-dark mb-3\">\n                    <div className=\"position-relative\">\n                        <span className=\"text-green\">سطح ۱</span>\n                        <div className=\"switch\">\n                            <Nav variant=\"pills\"\n                                activeKey={level1}\n                                onSelect={(selectedKey) => setLevel1(selectedKey)}\n                            >\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"market\">ثبت سفارش</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"limit\"> سفارش سریع</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </div>\n                    </div>\n                    <div className=\"mt-3\">\n                        <FormComp handleSubmitLevel={handleSubmitLevel} level={level1} item={levelList.length >= 1 ? levelList[0] : {}} />\n                    </div>\n                </div>\n                <div className=\"content-dark mb-3\">\n                    <div className=\"position-relative\">\n                        <span className=\"text-green\">سطح ۲</span>\n                        <div className=\"switch\">\n                            <Nav variant=\"pills\"\n                                activeKey={level2}\n                                onSelect={(selectedKey) => setLevel2(selectedKey)}\n                            >\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"market\">ثبت سفارش</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"limit\"> سفارش سریع</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </div>\n                    </div>\n                    <div className=\"mt-3\">\n                        <FormComp handleSubmitLevel={handleSubmitLevel} level={level2} item={levelList.length >= 2 ? levelList[1] : {}} />\n                    </div>\n                </div>\n                <div className=\"content-dark mb-3\">\n                    <div className=\"position-relative\">\n                        <span className=\"text-green\">سطح ۳</span>\n                        <div className=\"switch\">\n                            <Nav variant=\"pills\"\n                                activeKey={level3}\n                                onSelect={(selectedKey) => setLevel3(selectedKey)}\n                            >\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"market\">ثبت سفارش</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"limit\"> سفارش سریع</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </div>\n                    </div>\n                    <div className=\"mt-3\">\n                        <FormComp handleSubmitLevel={handleSubmitLevel} level={level3} item={levelList.length >= 3 ? levelList[2] : {}} />\n                    </div>\n                </div>\n                <div className=\"content-dark mb-3\">\n                    <div className=\"position-relative\">\n                        <span className=\"text-green\">سطح ۴</span>\n                        <div className=\"switch\">\n                            <Nav variant=\"pills\"\n                                activeKey={level4}\n                                onSelect={(selectedKey) => setLevel4(selectedKey)}\n                            >\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"market\">ثبت سفارش</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"limit\"> سفارش سریع</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </div>\n                    </div>\n                    <div className=\"mt-3\">\n                        <FormComp handleSubmitLevel={handleSubmitLevel} level={level4} item={levelList.length >= 4 ? levelList[3] : {}} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Commissions\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/points/index.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/levelManage/index.js",["708","709","710","711","712","713","714","715","716","717"],"import React from 'react';\nimport { CircularProgress, Backdrop } from '@material-ui/core';\nimport FormComp from \"./Inputs\";\nimport CardSection from './cardSection';\nimport \"./style.css\";\nimport { useFetchApi } from '../../utils/hooks';\nimport { LEVELS_LIST, LEVEL_DETAIL, TRADING_APP } from '../../utils/constants';\nimport { numDiscriminantInput } from '../../utils/discriminant';\n\n\nfunction LevelManage(props) {\n\n    const [{ data: levelList, isLoading: levelLoading }, getLevelList] = useFetchApi(undefined, []);\n    const [{ data: createLevelData, isLoading: createLevelLoading }, createLevel] = useFetchApi(undefined, {});\n    const [{ data: updateLevelData, isLoading: updateLevelLoading }, updateLevel] = useFetchApi(undefined, {});\n\n    const [minValue1, setMinValue1] = React.useState(0);\n    const [minValue2, setMinValue2] = React.useState(0);\n    const [minValue3, setMinValue3] = React.useState(0);\n    const [minValue4, setMinValue4] = React.useState(0);\n\n    const maxNumber = Math.pow(10, 1000); // max positive number\n\n    console.log(\"item\", levelList)\n    const handleSubmitLevel = (isEditting, values, id) => {\n        if (isEditting) {\n            console.log(\"values\", id)\n            updateLevel(\"PUT\", TRADING_APP, LEVEL_DETAIL(id), values)\n        } else {\n            console.log(\"else\", id)\n            createLevel(\"POST\", TRADING_APP, LEVELS_LIST, values)\n        }\n    }\n\n    const setMinValue = (value, index) => {\n        let fname = `setMinValue${index + 2}`\n        index < 3 && eval(fname)(value)\n    }\n\n    React.useEffect(() => {\n        getLevelList(\"GET\", TRADING_APP, LEVELS_LIST)\n    }, [])\n\n    React.useEffect(() => {\n        if (!createLevelLoading && Object.keys(createLevelData).length) {\n            getLevelList(\"GET\", TRADING_APP, LEVELS_LIST)\n        }\n        if (!updateLevelLoading && Object.keys(updateLevelData).length) {\n            getLevelList(\"GET\", TRADING_APP, LEVELS_LIST)\n        }\n    }, [createLevelLoading, updateLevelLoading])\n\n    return (\n        <div className=\"mt-3\">\n            <span className=\"text-white pe-2\">مدیریت سطوح</span>\n            {/* <CardSection /> */}\n            <Backdrop className=\"backdrop-loading\" open={levelLoading} >\n                <CircularProgress color=\"primary\" />\n            </Backdrop>\n            <div className=\"content mt-3 \">\n                <div className=\"d-flex mb-2\">\n                    <img src=\"/assets/drawer/Polygon.svg\" />\n                    <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>مدیریت سطوح </p>\n                </div>\n                <div className=\"content-dark my-3\">\n                    <div className=\"d-flex pe-3\" style={{ maxWidth: \"580px\" }}>\n                        <label className=\"text-end text-white ms-1\" style={{ minWidth: \"150px\" }} htmlFor=\"account_number\">مدت گردش حساب</label>\n                        <select name=\"color\" disabled value=\"green\" className=\"form-control bg_input input_text\">\n                            <option value=\"red\">۱ماه</option>\n                            <option value=\"green\">۳ماه</option>\n                            <option value=\"blue\">۶ ماه</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"content-dark mb-3\">\n                    <div className=\"position-relative\">\n                        <span className=\"text-green\">سطح ۱</span>\n                    </div>\n                    <div className=\"mt-3\">\n                        <FormComp\n                            index={0}\n                            item={levelList.length >= 2 ? levelList[1] : {}}\n                            isEditting={levelList.length >= 2}\n                            minValue={numDiscriminantInput(minValue1)}\n                            setMinValue={setMinValue}\n                            handleSubmitLevel={handleSubmitLevel}\n                            maxValueStyle={'d-flex'}\n                        />\n                    </div>\n                </div>\n                <div className=\"content-dark mb-3\">\n                    <div className=\"position-relative\">\n                        <span className=\"text-green\">سطح ۲</span>\n                    </div>\n                    <div className=\"mt-3\">\n                        <FormComp\n                            index={1}\n                            item={levelList.length >= 3 ? levelList[2] : {}}\n                            isEditting={levelList.length >= 3}\n                            minValue={numDiscriminantInput(minValue2)}\n                            setMinValue={setMinValue}\n                            handleSubmitLevel={handleSubmitLevel}\n                            maxValueStyle={'d-flex'}\n                        />\n                    </div>\n                </div>\n                <div className=\"content-dark mb-3\">\n                    <div className=\"position-relative\">\n                        <span className=\"text-green\">سطح ۳</span>\n                    </div>\n                    <div className=\"mt-3\">\n                        <FormComp\n                            index={2}\n                            item={levelList.length >= 4 ? levelList[3] : {}}\n                            isEditting={levelList.length >= 4}\n                            minValue={numDiscriminantInput(minValue3)}\n                            setMinValue={setMinValue}\n                            handleSubmitLevel={handleSubmitLevel}\n                            maxValueStyle={'d-flex'}\n                        />\n                    </div>\n                </div>\n                <div className=\"content-dark mb-3\">\n                    <div className=\"position-relative\">\n                        <span className=\"text-green\">سطح ۴</span>\n                    </div>\n                    <div className=\"mt-3\">\n                        <FormComp\n                            index={3}\n                            item={levelList.length >= 5 ? levelList[4] : {}}\n                            isEditting={levelList.length >= 5}\n                            minValue={numDiscriminantInput(minValue4)}\n                            setMinValue={setMinValue}\n                            handleSubmitLevel={handleSubmitLevel}\n                            maxValueStyle={'d-none'}\n                            defaultValue={9999999999999999}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LevelManage\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/orderHistory/index.js",["718"],"import React from 'react';\nimport CardSection from '../cardSection';\n// import UserTable from './userTable/table';\nimport OrdersHistoryDatagrid from './ordersHistoryDatagrid';\n\nconst OrdersHistory = () => {\n    return (\n        <div className=\"\">\n            <p className=\"text-white pe-4\">تاریخچه سفارش‌ها</p>\n            {/* <CardSection /> */}\n            <OrdersHistoryDatagrid />\n        </div>\n    );\n}\n\nexport default OrdersHistory;","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/tradeHistory/index.js",["719"],"import React from 'react';\nimport CardSection from '../cardSection';\n// import UserTable from './userTable/table';\nimport TradesHistoryDatagrid from './tradesHistoryDatagrid';\n\nconst TradesHistory = () => {\n    return (\n        <div className=\"\">\n            <p className=\"text-white pe-4\">تاریخچه معاملات</p>\n            {/* <CardSection /> */}\n            <TradesHistoryDatagrid />\n        </div>\n    );\n}\n\nexport default TradesHistory;","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/whithdrawHistory/index.js",["720"],"import React from 'react';\nimport { Nav, Tab } from 'react-bootstrap';\nimport { UserContext } from '../../../context/provider';\nimport CardSection from '../cardSection';\nimport WithdrawsCoinHistoryDatagrid from './withdrawsCoinHistoryDatagrid';\n// import UserTable from './userTable/table';\n// import WithdrawsHistoryDatagrid from './withdrawsCoinHistoryDatagrid';\nimport WithdrawsRialHistoryDatagrid from './withdrawsRialHistoryDatagrid';\n\nconst WithdrawHistory = () => {\n\n    const contextData = React.useContext(UserContext);\n\n    return (\n\n        <div className=\"\">\n\n            <p className=\"text-white pe-4\">تاریخچه برداشت‌ها</p>\n\n            {/* <CardSection /> */}\n\n            <div className=\"d-flex position-relative\">\n\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"rial\">\n\n                    <Nav variant=\"pills\" >\n\n                        <Nav.Item>\n\n                            <Nav.Link role=\"button\" eventKey=\"rial\" onClick={() => contextData.setWithdrawFilter(\"irr\")}>تومانی</Nav.Link>\n\n                        </Nav.Item>\n\n                        <Nav.Item>\n\n                            <Nav.Link role=\"button\" eventKey=\"coin\" onClick={() => contextData.setWithdrawFilter(\"coin\")}>رمز ارزها</Nav.Link>\n\n                        </Nav.Item>\n\n                    </Nav>\n\n                    <Tab.Content className=\"mt-lg-3 mt-sm-0 mt-xl-0 w-100\">\n\n                        <Tab.Pane eventKey=\"rial\">\n\n                            <WithdrawsRialHistoryDatagrid />\n\n                        </Tab.Pane>\n\n                        <Tab.Pane eventKey=\"coin\">\n\n                            {/* <CoinDepositsHistoryDatagrid /> */}\n                            <WithdrawsCoinHistoryDatagrid />\n\n                        </Tab.Pane>\n\n                    </Tab.Content>\n\n                </Tab.Container>\n\n            </div>\n\n\n        </div>\n\n    );\n\n}\n\nexport default WithdrawHistory;","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/depositHistory/index.js",["721"],"import React from 'react';\n\nimport { Nav, Tab } from 'react-bootstrap';\nimport { UserContext } from '../../../context/provider';\n\nimport CardSection from '../cardSection';\n\nimport CoinDepositsHistoryDatagrid from './coinDeposisHistoryDatagrid';\n\nimport RialDepositsHistoryDatagrid from './rialDepositsHistoryDatagrid';\n\n\nconst DepositHistory = () => {\n\n    const contextData = React.useContext(UserContext);\n\n\n    return (\n\n        <div className=\"\">\n\n            <p className=\"text-white pe-4\">تاریخچه واریزها</p>\n\n            {/* <CardSection /> */}\n\n            <div className=\"d-flex position-relative\">\n\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"rial\">\n\n                    <Nav variant=\"pills\" >\n\n                        <Nav.Item>\n\n                            <Nav.Link role=\"button\" eventKey=\"rial\" onClick={() => contextData.setDepositFilter(\"irr\")}>تومانی</Nav.Link>\n\n                        </Nav.Item>\n\n                        <Nav.Item>\n\n                            <Nav.Link role=\"button\" eventKey=\"coin\" onClick={() => contextData.setDepositFilter(\"coin\")}>رمز ارزها</Nav.Link>\n\n                        </Nav.Item>\n\n                    </Nav>\n\n                    <Tab.Content className=\"mt-lg-3 mt-sm-0 mt-xl-0 w-100\">\n\n                        <Tab.Pane eventKey=\"rial\">\n\n                            <RialDepositsHistoryDatagrid />\n\n                        </Tab.Pane>\n\n                        <Tab.Pane eventKey=\"coin\">\n\n                            <CoinDepositsHistoryDatagrid />\n\n                        </Tab.Pane>\n\n                    </Tab.Content>\n\n                </Tab.Container>\n\n            </div>\n            {/* <DepositsHistoryDatagrid /> */}\n        </div>\n    );\n}\n\nexport default DepositHistory;","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/historyAccountant/index.js",["722"],"import React from 'react';\nimport CardSection from '../cardSection';\n// import UserTable from './userTable/table';\nimport HistoryAccountantDatagrid from './historyAccountantDatagrid';\n\nconst HistoryAccountant = () => {\n    return (\n        <div className=\"\">\n            <p className=\"text-white pe-4\">تاریخچه تراکنش‌ها</p>\n            {/* <CardSection /> */}\n            <HistoryAccountantDatagrid />\n        </div>\n    );\n}\n\nexport default HistoryAccountant;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/rialAccountant/index.js",["723"],"import React from 'react';\nimport CardSection from '../cardSection';\n// import UserTable from './userTable/table';\nimport RialAccountantDatagrid from './rialAccountantDatagrid';\n\nconst RialAccountant = () => {\n    return (\n        <div className=\"\">\n            <p className=\"text-white pe-4\">تایید برداشت ریال</p>\n            {/* <CardSection /> */}\n            <RialAccountantDatagrid />\n        </div>\n    );\n}\n\nexport default RialAccountant;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/cryptoAccountant/index.js",["724"],"import React from 'react';\nimport CardSection from '../cardSection';\n// import UserTable from './userTable/table';\nimport CryptoAccountantDatagrid from './cryptoAccountantDatagrid';\n\nconst CryptoAccountant = () => {\n    return (\n        <div className=\"\">\n            <p className=\"text-white pe-4\">تایید برداشت ارز</p>\n            {/* <CardSection /> */}\n            <CryptoAccountantDatagrid />\n        </div>\n    );\n}\n\nexport default CryptoAccountant;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/constants.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/hooks.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/messages/messagesDatagrid.js",["725","726","727","728","729","730","731","732","733","734","735"],"import React , {useState} from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Button, Dialog, DialogTitle, DialogActions, DialogContent } from '@material-ui/core';\n\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../utils/hooks\";\n\nimport { USERS_LIST ,USER_MESSAGES ,IAM_APP ,MESSAGE_DETAIL} from '../../utils/constants';\n\nimport { timeToStr, UrlQuery } from '../../utils/utils';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { Mail } from \"@material-ui/icons\";\n\nimport Filters from './filters';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\n\n\n\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\n\n\nfunction CustomPagination() {\n\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n\n\n  return (\n\n    <Pagination\n\n      className={classes.root}\n\n      shape=\"rounded\"\n\n      color=\"primary\"\n\n      // variant=\"contained\"\n\n      count={state.pagination.pageCount}\n\n      page={state.pagination.page + 1}\n\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n\n    />\n\n  );\n\n}\n\n\n\n\nfunction MessagesDatagrid(props) {\n  \n  // const [rowId, setRowId] = useState();\n  \n  const [{ data:messageDetail, isLoading:messageIsLoading }, callMessage] = useFetchApi(undefined, [])\n\n  \n  \n  const history = useHistory()\n  \n  \n  const MessageModal = (props) => {\n  \n  \n  \n    return <Dialog\n  \n      maxWidth=\"md\"\n  \n      fullWidth\n  \n      //   onEntering={handleEntering}\n  \n      aria-labelledby=\"confirmation-dialog-title\"\n  \n      open={props.modalOpen}\n  \n    >\n  \n      <DialogTitle className=\"\">\n  \n        <div className=\"d-flex justify-content-end\">\n  \n          <p className=\"font_title_name me-1\" >مشاهده پیام</p>\n  \n          <img src=\"/assets/drawer/Polygon.svg\" />\n  \n        </div>\n  \n      </DialogTitle>\n  \n      <DialogContent >\n  \n        <div className=\"border border-light rounded p-3\">\n  \n          <div className=\"d-flex justify-content-between px-3 text-muted\">\n  \n            <span>{timeToStr(messageDetail?.created_at, \" jYYYY/jMM/jDD  -   HH:mm\")}</span>\n  \n            <span>{messageDetail?.title}</span>\n  \n          </div>\n  \n          <p className=\"text-end p-3\">\n              \n            {messageDetail?.body}\n            \n          </p>\n  \n        </div>\n  \n      </DialogContent>\n  \n      <DialogActions className=\"justify-content-start px-4 py-2\">\n  \n        <div>\n  \n          <Button autoFocus onClick={() => props.setModalOpen(false)} variant=\"contained\" color=\"primary\">\n  \n            بستن\n  \n          </Button>\n  \n        </div>\n  \n      </DialogActions>\n  \n    </Dialog>\n  \n  }\n\n  const handleAction = (id) => {\n\n    callMessage(\"GET\", IAM_APP, MESSAGE_DETAIL(id))\n\n  }\n\n  const columns = [\n\n    {\n\n      field: 'id',\n\n      headerName: 'شماره',\n\n      flex: 1,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.id}`\n\n    },\n\n    {\n\n      field: 'owner_id',\n\n      headerName: 'عنوان پیام',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.title}`\n\n\n    },\n\n    {\n\n      field: 'receiver_user',\n\n      headerName: 'دریافت کننده',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => {\n        let renderTooltip = (props) => (\n\n          <Tooltip id=\"button-tooltip\" {...props}>\n\n{values ? values.value.map(item => {\n            let userItem = user?.items?.filter(itm => itm.id === item.id)\n            console.log(\"userItem\",userItem) \n            return `${userItem && userItem[0]?.credentials?.first_name} ${userItem && userItem[0]?.credentials?.last_name} `\n          }) : \"_\"}\n\n          </Tooltip>\n\n        );\n        return(<div className=\"d-flex\">\n          <OverlayTrigger\n\n            placement=\"top\"\n\n            delay={{ show: 250, hide: 400 }}\n\n            overlay={renderTooltip}\n\n            >\n        {/* referralData.map((item) => {\n            let userIncomeData = null\n            let userIncomeLink = null\n            if (userIncome) {\n                userIncomeData = userIncome.filter(itm => itm.referral_code_id == item.id)\n                setRefuseTurn(!refuseTurn)\n            }\n            return (item.referralIncome = userIncomeData,item.referralLink = `https://mojex.amnmoj.ir${configUrl}${item.code}`)\n        }) */}\n                      <Button>\n\n          {values ? values.value.map(item => {\n            let userItem = user?.items?.filter(itm => itm.id === item.id)\n            console.log(\"userItem\",userItem) \n            return `${userItem && userItem[0]?.credentials?.first_name} ${userItem && userItem[0]?.credentials?.last_name} `\n          }) : \"_\"}\n          </Button>\n        </OverlayTrigger>\n        </div>)\n\n        }\n\n    },\n\n    {\n\n      field: 'sender',\n\n      headerName: 'ارسال کننده',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => (\n\n        <div className=\"d-flex\">\n\n             {values.credentials?.first_name?values.credentials?.first_name:'_'}\n             {values.credentials?.last_name?values.credentials?.last_name:'_'}\n\n        </div>\n\n      )\n\n    },\n\n    {\n\n      field: 'date',\n\n      headerName: 'تاریخ',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${timeToStr(values.row?.created_at, \"HH:mm  -   jYYYY/jMM/jDD\")}`\n\n\n    },\n\n    {\n\n      field: 'status',\n\n      headerName: 'عملیات',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.75,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => <Button variant=\"contained\" color=\"primary\" \n\n      onClick={() => {\n\n        setModalOpen(true)\n\n        handleAction(values.row.id)}} \n\n        className=\"ms-2\">مشاهده پیام</Button>\n\n    }\n\n  ];\n\n\n\n  const [modalOpen, setModalOpen] = React.useState(false);\n\n  const [params, setParams] = React.useState({size: 10, page: 1 })\n\n  const [{ data:data, isLoading:isLoading, hasError:hasError }, doFetch] = useFetchApi(undefined, [])\n\n  const [{ data: user, isLoading: userLoading },doFetchUsers] = useFetchApi(undefined, {})\n\n\n\n  React.useEffect(() => {\n\n    doFetchUsers(\"GET\", IAM_APP, UrlQuery(USERS_LIST))\n\n    doFetch(\"GET\", IAM_APP , UrlQuery(USER_MESSAGES, {...params}) )\n\n  }, [params])\n\nconsole.log(\"message\",data)\n\n  return (\n\n    <div className=\"content\">\n\n      <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تاریخچه پیام‌ها</p>\n\n        </div>\n\n        <Filters params={params} setParams={setParams} />\n\n        <Button\n\n          variant=\"contained\"\n\n          className=\"ms-4\"\n\n          style={{ minWidth: \"160px\" }}\n\n          onClick={() => history.push(\"/messages/new\")}\n\n          color=\"secondary\"\n\n          startIcon={<Mail className=\"ms-2\" />}\n\n        > ارسال پیام جدید</Button>\n\n      </div>\n\n      <MessageModal modalOpen={modalOpen} setModalOpen={setModalOpen} />\n\n      <div className=\"d-flex px-3\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n\n          <DataGrid\n\n            style={{ border: 0 }}\n\n            autoHeight\n\n            // rows={data?.items ?? []}\n\n            rows={data?.items ?? []}\n\n            loading={isLoading}\n\n            columns={columns}\n\n            getRowClassName={\n\n              params => 'grid-content'\n\n            }\n\n            headerHeight={50}\n\n            rowHeight={52}\n\n            isRowSelectable={false}\n\n            components={{\n\n              Pagination: CustomPagination\n\n            }}\n\n            pageSize={10}\n\n            rowCount={data?.total}\n\n            paginationMode=\"server\"\n\n            onPageChange={(param) => doFetch(\"GET\", IAM_APP , UrlQuery(USER_MESSAGES, {...params, page: param + 1}) )}\n\n            disableSelectionOnClick\n\n            disableColumnMenu\n\n          />\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default MessagesDatagrid\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/tickets/ticketsDatagrid.js",["736","737","738","739","740","741"],"import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\nimport {Pagination} from '@material-ui/lab';\nimport {useFetchApi} from \"../../utils/hooks\";\nimport { IAM_APP, TICKETS_LIST, USERS_ORDERS } from '../../utils/constants';\nimport { timeToStr, UrlQuery } from '../../utils/utils';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Filters from './filters';\n\n\nconst useStyles = makeStyles({\n  root: {\n    // display: 'flex',\n    margin: '0 auto',\n  },\n});\n\nfunction CustomPagination() {\n  const { state, apiRef } = useGridSlotComponentProps();\n  const classes = useStyles();\n\n  return (\n    <Pagination\n      className={classes.root}\n      shape=\"rounded\"\n      color=\"primary\"\n      // variant=\"contained\"\n      count={state.pagination.pageCount}\n      page={state.pagination.page + 1}\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    />\n  );\n}\n\nconst rows = [\n  {\n    id :1,\n    tracking_code: \"412515\",\n    owner_id: \"پیام سری ۲\",\n    national_code: \"55457575\",\n    origin_wallet: \"btc\",\n    quantity: \"2.3\",\n    dest_wallet: \"تست تستیانی\",\n    action: \"approve\",\n    status: \"in_progress\",\n  },\n  {\n    id :2,\n    tracking_code: \"412515\",\n    owner_id: \"پیام سری\",\n    national_code: \"55457575\",\n    origin_wallet: \"تست تستیانی\",\n    date: \"2.3\",\n    dest_wallet: \"علی تستی\",\n    action: \"approve\",\n    status: \"in_progress\",\n  },\n  {\n    id :3,\n    tracking_code: \"412515\",\n    owner_id: \"fjasfkljas\",\n    national_code: \"55457575\",\n    origin_wallet: \"btc\",\n    quantity: \"2.3\",\n    dest_wallet: \"\",\n    action: \"approve\",\n    status: \"in_progress\",\n  },\n]\n\n\nfunction TicketsDatagrid(props) {\n\n  const history = useHistory()\n\n  const columns = [\n    {\n      field: 'id',\n      headerName: 'شماره',\n      flex:1,\n      type: 'string',\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      // renderCell: (values) => `${values.row?.tracking_code.slice(0, 8)}`\n    },\n    {\n      field: 'title',\n      headerName: 'موضوع',\n      flex:1,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      // renderCell: (values) => (\n      //   <div className=\"d-flex\">\n      //        <span>{values.row?.origin_wallet} - {values.row?.dest_wallet}</span>\n      //   </div>\n      // )\n    },\n    {\n      field: 'user',\n      headerName: 'فرستنده',\n      flex: 1,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (values) => (\n        <div className=\"d-flex\">\n            <span className=\"\">{values?.value?.credentials?.first_name} {values?.value?.credentials?.last_name}</span>\n        </div>\n      )\n    },\n    {\n      field: 'priority',\n      headerName: 'اولویت',\n      flex:1,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (values) => (\n        <div className=\"d-flex\">\n             {values.row?.priority === \"high\" ? \"بالا\" : (values.row?.priority === \"medium\" ? \"متوسط\" : \"پایین\") }\n        </div>\n      )\n    },\n    {\n      field: 'state',\n      headerName: 'وضعیت',\n      flex:1,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (values) => (\n        <div className=\"d-flex\">\n             {values.row?.state === \"open\" ? \"باز\" : ( values.row?.state === \"close\" ? \"بسته\" : \"در انتظار\" )}\n        </div>\n      )\n    },\n    {\n      field: 'created_at',\n      headerName: 'تاریخ',\n      flex:1,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n    },\n    {\n      field: 'status',\n      headerName: 'عملیات',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 0.75,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (values) => (\n        <Button variant=\"contained\" color=\"primary\" onClick={ () => history.push(`/tickets/detail/${values?.row?.id}`) } className=\"ms-2\">مشاهده تیکت</Button>\n      )\n    }\n  ];\n\n  const [params, setParams] = React.useState({ size: 10, page: 1})\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    React.useEffect( () => {\n        doFetch(\"GET\", IAM_APP, UrlQuery(TICKETS_LIST, {...params}) )\n    }, [params])\n\n    return (\n        <div className=\"content\">\n            <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n              <div className=\"d-flex\">\n                <img src=\"/assets/drawer/Polygon.svg\" />\n                <p className=\"font_title_name me-1\" style={{minWidth: \"150px\"}}>لیست تیکت‌ها</p>\n              </div>\n              <Filters params={params} setParams={setParams} />\n            </div>\n            <div className=\"d-flex px-3\">\n                <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\"}}>\n                <DataGrid\n                    style={{border: 0}}\n                    autoHeight\n                    rows={data?.items ?? []}\n                    loading={isLoading}\n                    columns={columns}\n                    getRowClassName={\n                        params => 'grid-content'\n                    }\n                    headerHeight={50}\n                    rowHeight={52}\n                    isRowSelectable={false}\n                    components={{\n                      Pagination: CustomPagination\n                    }}\n                    pageSize={10}\n                    rowCount={data?.total}\n                    paginationMode=\"server\"\n                    onPageChange={ (param) => doFetch(\"GET\", IAM_APP, UrlQuery(TICKETS_LIST, {...params, page: param + 1}) )}\n                    disableSelectionOnClick\n                    disableColumnMenu\n                />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TicketsDatagrid\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/commissions/Inputs.js",["742"],"import React from 'react'\nimport { useFormik } from \"formik\";\nimport { Grid, Button } from '@material-ui/core';\n\n\nfunction FormComp(props) {\n\n    const formikProps = useFormik({\n        initialValues: {},\n        enableReinitialize: true,\n        // validate={this.validate}\n        onSubmit: values => handleSubmit(values),\n    })\n\n    const handleSubmit = (values) => {\n        if (Object.keys(props.item).length) {\n            values.title = props.item.title\n            values.trade_type = props.level\n            props.handleSubmitLevel(values, props?.item?.id)\n        }\n    }\n\n    React.useEffect(() => {\n        if (Object.keys(props.item).length) {\n            formikProps.setFieldValue(\"rial_buying_commission\", props.item?.rial_buying_commission)\n            formikProps.setFieldValue(\"rial_selling_commission\", props.item?.rial_selling_commission)\n            formikProps.setFieldValue(\"tether_buying_commission\", props.item?.tether_buying_commission)\n            formikProps.setFieldValue(\"tether_selling_commission\", props.item?.tether_selling_commission)\n        }\n    }, [props.item])\n\n    return (\n        <div>\n            <div>\n                <form onSubmit={formikProps.handleSubmit}>\n                    <div style={{ flexGrow: 1 }} >\n                        <Grid container spacing={3} justify=\"space-between\" className=\"p-3\">\n                            <Grid item md={5}>\n                                <div className=\"d-flex w-100\" style={{ maxHeight: \"34px\" }}>\n                                    <label className=\"text-end text-white ms-4\" style={{ minWidth: \"90px\" }} htmlFor=\"rial_buying_commission\">خرید ریالی</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"rial_buying_commission\"\n                                        placeholder=\"\"\n                                        value={formikProps.values.rial_buying_commission}\n                                        required\n                                        onChange={formikProps.handleChange}\n                                        className=\"form-control bg_input input_text\"\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item md={5} className=\"ms-5\">\n                                <div className=\"d-flex w-100\" style={{ maxHeight: \"34px\" }}>\n                                    <label className=\"text-end text-white fs-6 ms-4\" style={{ minWidth: \"90px\" }} htmlFor=\"rial_selling_commission\">فروش ریالی</label>\n                                    <input\n                                        label=\"dasfdas\"\n                                        type=\"text\"\n                                        name=\"rial_selling_commission\"\n                                        placeholder=\"\"\n                                        value={formikProps.values.rial_selling_commission}\n                                        required\n                                        onChange={formikProps.handleChange}\n                                        className=\"form-control bg_input input_text\"\n                                    />\n                                </div>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={3} justify=\"space-between\" className=\"p-3\">\n                            <Grid item md={5}>\n                                <div className=\"d-flex w-100\" style={{ maxHeight: \"34px\" }}>\n                                    <label className=\"text-end text-white ms-4\" style={{ minWidth: \"90px\" }} htmlFor=\"tether_buying_commission\">خرید تتری</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"tether_buying_commission\"\n                                        placeholder=\"\"\n                                        value={formikProps.values.tether_buying_commission}\n                                        required\n                                        onChange={formikProps.handleChange}\n                                        className=\"form-control bg_input input_text\"\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item md={5} className=\"ms-5\">\n                                <div className=\"d-flex w-100\" style={{ maxHeight: \"34px\" }}>\n                                    <label className=\"text-end text-white fs-6 ms-4\" style={{ minWidth: \"90px\" }} htmlFor=\"tether_selling_commission\">فروش تتری</label>\n                                    <input\n                                        label=\"dasfdas\"\n                                        type=\"text\"\n                                        name=\"tether_selling_commission\"\n                                        placeholder=\"\"\n                                        value={formikProps.values.tether_selling_commission}\n                                        required\n                                        onChange={formikProps.handleChange}\n                                        className=\"form-control bg_input input_text\"\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid container spacing={3} justify=\"space-between\" className=\"p-3\" >\n                                <Grid item md={12} className=\"ms-5\">\n                                    <div className=\"d-flex justify-content-end\" style={{ maxHeight: \"34px\" }}>\n                                        <Button type=\"submit\" color=\"primary\" variant=\"contained\"  >ذخیره</Button>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default FormComp\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/orders/ordersDatagrid.js",["743","744","745","746","747","748","749","750"],"import React , {useState} from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\nimport {Pagination} from '@material-ui/lab';\nimport {useFetchApi} from \"../../utils/hooks\";\nimport { CANCEL_ORDERS, TRADING_APP, USERS_ORDERS } from '../../utils/constants';\nimport { timeToStr, UrlQuery } from '../../utils/utils';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Filters from './filters';\nimport { numDiscriminant } from '../../utils/discriminant';\nimport { round_ten_thousand } from '../../utils/math-round';\n\n\nconst useStyles = makeStyles({\n  root: {\n    // display: 'flex',\n    margin: '0 auto',\n  },\n});\n\n\nfunction CustomPagination() {\n  const { state, apiRef } = useGridSlotComponentProps();\n  const classes = useStyles();\n  \n  return (\n    <Pagination\n    className={classes.root}\n    shape=\"rounded\"\n    color=\"primary\"\n    // variant=\"contained\"\n    count={state.pagination.pageCount}\n    page={state.pagination.page + 1}\n    onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    />\n    );\n  }\n  \n  const ConfirmModal = (props) => {\n  console.log(\"prop\",props)\n    return <Dialog\n      maxWidth=\"xs\"\n      //   onEntering={handleEntering}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={props.modalOpen}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">آیا از لغو سفارش مطمئن هستید؟</DialogTitle>\n      <DialogContent >\n  \n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={() => props.setModalOpen(false)} variant=\"outlined\" color=\"secondary\">\n          خیر\n        </Button>\n        <Button onClick={() => {\n          props.handleUserApprove(props.approve)\n          setTimeout(() => { props.setModalOpen(false) }, 2000)\n        }} variant=\"contained\" color=\"primary\">\n          بله\n        </Button>\n      </DialogActions>\n    </Dialog>\n  }\n  function OrdersDatagrid(props) {\n    \n    const [modalOpen, setModalOpen] = useState(false);\n    \n    const [userState, setUserState] = useState('');\n    \n    const history = useHistory()\n    \n\n  const columns = [\n    {\n      field: 'tracking_code',\n      headerName: 'شناسه',\n      flex:1,\n      type: 'string',\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (values) => `${values.row?.tracking_code.slice(0, 8)}`\n    },\n    {\n      field: 'origin_wallet',\n      headerName: 'بازار',\n      flex:1,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (values) => (\n        <div className=\"d-flex\">\n             <span>{values.row?.origin_wallet} - {values.row?.dest_wallet}</span>\n        </div>\n      )\n    },\n    {\n      field: 'type',\n      headerName: 'سمت',\n      flex: 0.75,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (values) => (\n        <div className=\"d-flex\">\n             {values.row?.type === \"sell\" ? <span className=\"text-danger\">فروش</span> : <span className=\"text-success\">خرید</span>}\n        </div>\n      )\n    },\n    {\n      field: 'trade_type',\n      headerName: 'نوع سفارش',\n      flex:1,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (values) => (\n        <div className=\"d-flex\">\n             {values.row?.trade_type === \"limit\" ? \"محدود\" : \"سریع\"}\n        </div>\n      )\n    },\n    {\n      field: 'owner_id',\n      headerName: 'نام کاربر',\n      flex:1,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (values) => `${values.row?.user[0]?.credentials.first_name} ${values.row?.user[0]?.credentials.last_name}`\n    },\n    {\n      field: 'unit_price',\n      headerName: 'قیمت سفارش',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (values) => numDiscriminant(values.row?.unit_price)\n    },\n    {\n      field: 'quantity',\n      headerName: 'مقدار',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 0.5,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (values) => numDiscriminant(values.row?.quantity)\n    },\n    {\n      field: 'commission_percentage',\n      headerName: 'کارمزد فعلی',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 0.5,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n    },\n    {\n      field: 'total',\n      headerName: 'مبلغ کل',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (values) => numDiscriminant(parseInt(values?.row?.unit_price) * parseInt(values?.row?.quantity))\n    },\n    {\n      field: 'progress',\n      headerName: 'پرشده',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 0.5,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (values) => {\n        let fill = values.value / values.row.quantity\n        return <>\n        {(round_ten_thousand(fill === Infinity ? 1 : fill) * 100)}%\n        </>\n      }\n    },\n    {\n      field: 'created_at',\n      headerName: 'تاریخ',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n    },\n    {\n      field: 'status',\n      headerName: 'وضعیت',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (values) => <div className=\"d-flex justify-content-end w-100\">\n        {\n\n        values?.value === \"in_progress\" ? (<Button variant=\"outlined\" onClick={() => {setUserState(values?.row?.id);setModalOpen(true)}} className=\"ms-2 border-danger text-danger\">لغو سفارش</Button>)\n\n          : (\n\n            values?.value === \"success\" ? 'انجام شده' : \n            values?.value === \"cancel_by_user\" ? 'توسط کاربر لغو شده' : \n            values?.value === \"failed\" ? 'ناموفق' : \n            values?.value === \"pending\" ? 'درحال انتظار':'' \n            \n\n          )\n\n        }\n      </div>\n    }\n  ];\n\n  const [params, setParams] = React.useState({order: \"-updated_at\", status__in: \"in_progress\", size: 10, page: 0});\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, []);\n  const [{ data: cancelData ,isLoading: cancelLoading }, cancelOrder] = useFetchApi(undefined, {});\n\n  const handleAction = (approve) => {\n\n    console.log(\"id\",approve)\n    \n    cancelOrder(\"DELETE\", TRADING_APP, CANCEL_ORDERS(approve))\n    setTimeout( () => doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_ORDERS, {...params}) ), 1500)\n\n  }\n  const handleCancel = id => {\n    if (id){\n      // cancelOrder(\"DELETE\", TRADING_APP, CANCEL_ORDERS(id))\n      // setTimeout( () => doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_ORDERS, {...params}) ), 1500)\n      return \n    }\n  }\n  const updateData = () => {\n\n    data?.results?.map((item, index) => {\n\n      let update = data?.users_info?.filter((itm, idx) => idx === index)\n\n      return item.user = update\n\n    })\n\n  }\n\n    React.useEffect( () => {\n        doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_ORDERS, {...params}) )\n    }, [params])\n\n    React.useEffect(() => {\n\n      updateData()\n  \n    }, [data])\n\n    return (\n        <div className=\"content\">\n          <ConfirmModal modalOpen={modalOpen} setModalOpen={setModalOpen} handleUserApprove={handleAction} approve={userState} />\n            <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n              <div className=\"d-flex\">\n                <img src=\"/assets/drawer/Polygon.svg\" />\n                <p className=\"font_title_name me-1\" style={{minWidth: \"150px\"}}>سفارش‌های باز </p>\n              </div>\n            </div>\n              <Filters params={params} setParams={setParams} />\n            <div className=\"d-flex px-3\">\n                <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\"}}>\n                <DataGrid\n                    style={{border: 0}}\n                    autoHeight\n                    rows={data?.results ?? []}\n                    loading={isLoading}\n                    columns={columns}\n                    getRowClassName={\n                        params => 'grid-content'\n                    }\n                    headerHeight={50}\n                    rowHeight={52}\n                    isRowSelectable={false}\n                    components={{\n                      Pagination: CustomPagination\n                    }}\n                    pageSize={10}\n                    rowCount={data?.total}\n                    paginationMode=\"server\"\n                    onPageChange={ (param) => doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_ORDERS, {...params, page: param}) )}\n                    disableSelectionOnClick\n                    disableColumnMenu\n                />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default OrdersDatagrid\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/levelManage/Inputs.js",["751","752"],"import React from 'react'\nimport { useFormik } from \"formik\";\nimport { Grid, Button } from '@material-ui/core';\nimport { clearDiscriminant, numberRegex, numDiscriminantInput } from '../../utils/discriminant';\nimport * as Yup from 'yup';\n\n\nfunction FormComp(props) {\n\n    //validation\n    const validationSchema = Yup.object().shape({\n        // threshold: Yup.string().matches(numberRegex, \"اعداد را به لاتین وارد کنید\").required('لطفا مقدار را وارد کنید'),\n    });\n\n    const handleSubmit = (values) => {\n        let defaultValues = {\n            trade_type: 'limit',\n            rial_buying_commission: 0,\n            rial_selling_commission: 0,\n            tether_buying_commission: 0,\n            tether_selling_commission: 0\n        }\n        if (props.isEditting) {\n            values[\"trade_type\"] = \"limit\"\n            values[\"rial_buying_commission\"] = props.item.rial_buying_commission\n            values[\"rial_selling_commission\"] = props.item.rial_selling_commission\n            values[\"tether_buying_commission\"] = props.item.tether_buying_commission\n            values[\"tether_selling_commission\"] = props.item.tether_selling_commission\n            values[\"threshold\"] = clearDiscriminant(formikProps.values.threshold)\n        } else {\n            values = { ...values, ...defaultValues }\n        }\n        props.handleSubmitLevel(props.isEditting, values, props?.item?.id)\n    }\n\n    const formikProps = useFormik({\n        initialValues: { title: '', threshold: props.defaultValue ? props.defaultValue : null },\n        enableReinitialize: true,\n        validationSchema: validationSchema,\n        onSubmit: values => handleSubmit(values),\n    })\n\n    React.useEffect(() => {\n        if (Object.keys(props.item).length) {\n            formikProps.setFieldValue(\"threshold\", props.item?.threshold)\n            formikProps.setFieldValue(\"title\", props.item?.title)\n            props.setMinValue(props.item.threshold, props.index)\n        }\n    }, [props.item])\n\n    return (\n        <div>\n            <form onSubmit={formikProps.handleSubmit}>\n                <div style={{ flexGrow: 1 }} >\n                    <Grid container spacing={3} justify=\"space-between\" className=\"p-3\">\n                        <Grid item md={5}>\n                            <div className=\"d-flex w-100\" style={{ maxHeight: \"34px\" }}>\n                                <label className=\"text-end text-white \" style={{ minWidth: \"150px\" }} htmlFor=\"title\">نام سطح</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"title\"\n                                    placeholder=\"\"\n                                    value={formikProps.values.title}\n                                    required\n                                    onChange={formikProps.handleChange}\n                                    className=\"form-control bg_input input_text\"\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={3} justify=\"space-between\" className=\"p-3\">\n                        <Grid item md={5}>\n                            <div className=\"d-flex w-100\" style={{ maxHeight: \"34px\" }}>\n                                <label className=\"text-end text-white \" style={{ minWidth: \"150px\" }} htmlFor=\"floor\">حداقل گردش حساب</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"floor\"\n                                    placeholder=\"\"\n                                    required\n                                    disabled\n                                    value={props.minValue}\n                                    className=\"form-control bg_input input_text\"\n                                />\n                            </div>\n                        </Grid>\n                        <Grid item md={5} className=\"ms-5\">\n                            <div className={`${props.maxValueStyle} w-100`} style={{ maxHeight: \"34px\" }}>\n                                <label className=\"text-end text-white fs-6\" style={{ minWidth: \"150px\" }} htmlFor=\"threshold\">حداکثر گردش حساب</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"threshold\"\n                                    placeholder=\"\"\n                                    required\n                                    value={numDiscriminantInput(formikProps.values.threshold)}\n                                    onChange={e => { props.setMinValue(e.target.value, props.index); formikProps.handleChange(e) }}\n                                    className=\"form-control bg_input input_text\"\n                                />\n                                {/* {formikProps.errors.threshold && formikProps.touched.threshold ? <strong className=\"error mt-md-n2 small\" >{formikProps.errors.threshold}</strong> : null} */}\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={3} justify=\"space-between\" className=\"p-3\">\n                        <Grid item md={5}>\n                            <input\n                                accept=\"image/*\"\n                                className=\"d-none\"\n                                id=\"contained-button-file\"\n                                multiple\n                                type=\"file\"\n                            />\n                            <label className=\"text-end text-white ms-1\" style={{ minWidth: \"150px\" }} htmlFor=\"contained-button-file\">\n                                آپلود عکس سطح\n                                <Button className=\"me-5\" variant=\"contained\" component=\"span\">\n                                    انتخاب فایل ضمیمه\n                                </Button>\n                            </label>\n                        </Grid>\n                        <Grid item md={5} className=\"ms-5\">\n                            <div className=\"d-flex justify-content-end\" style={{ maxHeight: \"34px\" }}>\n                                <Button disabled variant=\"contained\"  > لیست کاربران</Button>\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={3} justify=\"space-between\" className=\"p-3\" >\n                        <Grid item md={12} className=\"ms-5\">\n                            <div className=\"d-flex justify-content-end\" style={{ maxHeight: \"34px\" }}>\n                                <Button type=\"submit\" color=\"primary\" variant=\"contained\"  >ذخیره</Button>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default FormComp\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/points/pointsDatagrid.js",["753","754","755","756","757"],"import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button, IconButton} from '@material-ui/core';\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\nimport {Pagination} from '@material-ui/lab';\nimport {Edit, Delete} from '@material-ui/icons';\nimport {useFetchApi} from \"../../utils/hooks\";\nimport { USERS_TRANSACTION_HISTORY } from '../../utils/constants';\nimport { UrlQuery } from '../../utils/utils';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Filters from './filters';\n\n\nconst useStyles = makeStyles({\n  root: {\n    // display: 'flex',\n    margin: '0 auto',\n  },\n});\n\nfunction CustomPagination() {\n  const { state, apiRef } = useGridSlotComponentProps();\n  const classes = useStyles();\n\n  return (\n    <Pagination\n      className={classes.root}\n      shape=\"rounded\"\n      color=\"primary\"\n      // variant=\"contained\"\n      count={state.pagination.pageCount}\n      page={state.pagination.page + 1}\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    />\n  );\n}\n\nconst rows = [\n  {\n    id :1,\n    tracking_code: \"412515\",\n    owner_id: \"fjasfkljas\",\n    national_code: \"55457575\",\n    origin_wallet: \"btc\",\n    quantity: \"2.3\",\n    dest_wallet: \"\",\n    action: \"approve\",\n    status: \"in_progress\",\n  },\n  {\n    id :2,\n    tracking_code: \"412515\",\n    owner_id: \"fjasfkljas\",\n    national_code: \"55457575\",\n    origin_wallet: \"btc\",\n    quantity: \"2.3\",\n    dest_wallet: \"\",\n    action: \"approve\",\n    status: \"in_progress\",\n  },\n  {\n    id :3,\n    tracking_code: \"412515\",\n    owner_id: \"fjasfkljas\",\n    national_code: \"55457575\",\n    origin_wallet: \"btc\",\n    quantity: \"2.3\",\n    dest_wallet: \"\",\n    action: \"approve\",\n    status: \"in_progress\",\n  },\n]\n\nfunction PointsDatagrid(props) {\n\n  const history = useHistory()\n\n  const columns = [\n    {\n      field: 'id',\n      headerName: 'شماره',\n      flex:1,\n      type: 'string',\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      // renderCell: (values) => `${values.row?.tracking_code.slice(0, 8)}`\n    },\n    {\n      field: 'owner_id',\n      headerName: 'عنوان امتیاز',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      editable: true,\n    },\n    {\n      field: 'quantity',\n      headerName: 'مقدار امتیاز',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 2,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      editable: true,\n      valueGetter : values => values.value + \"  امتیاز  \"\n    },\n    {\n      field: 'created_at',\n      headerName: 'ویرایش',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1.5,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (values) => (\n          <IconButton variant=\"outlined\" size=\"small\" color=\"secondary\" onClick={ () => {}} small className=\"ms-4 bg-white\"><Edit /></IconButton>\n      )\n    },\n    {\n      field: 'status',\n      headerName: 'حذف',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (values) => <IconButton variant=\"outlined\" size=\"small\"  onClick={ () => {}} className=\"ms-2 text-danger bg-white\"><Delete  /></IconButton>\n    }\n  ];\n\n  const [params, setParams] = React.useState({order: \"-updated_at\", size: 10, page: 0})\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    React.useEffect( () => {\n        // doFetch(\"GET\", UrlQuery(USERS_TRANSACTION_HISTORY, {...params}) )\n    }, [params])\n\n    return (\n        <div className=\"content\">\n            <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n              <div className=\"d-flex\">\n                <img src=\"/assets/drawer/Polygon.svg\" />\n                <p className=\"font_title_name me-1\" style={{minWidth: \"150px\"}}>مدیریت امتیازها</p>\n              </div>\n              <Filters params={params} setParams={setParams} />\n            </div>\n            <div className=\"d-flex px-3\">\n                <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\"}}>\n                <DataGrid\n                    style={{border: 0}}\n                    autoHeight\n                    // rows={data?.items ?? []}\n                    rows={rows}\n                    loading={isLoading}\n                    columns={columns}\n                    getRowClassName={\n                        params => 'grid-content'\n                    }\n                    headerHeight={50}\n                    rowHeight={52}\n                    isRowSelectable={false}\n                    components={{\n                      Pagination: CustomPagination\n                    }}\n                    pageSize={10}\n                    rowCount={data?.total}\n                    paginationMode=\"server\"\n                    onPageChange={ (param) => doFetch(\"GET\", UrlQuery(USERS_TRANSACTION_HISTORY, {...params, page: param}) )}\n                    disableSelectionOnClick\n                    disableColumnMenu\n                />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PointsDatagrid\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/tradeHistory/tradesHistoryDatagrid.js",["758","759","760","761","762","763","764","765","766","767","768","769","770","771"],"import React from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Button } from '@material-ui/core';\n\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../../utils/hooks\";\n\nimport { ADMIN_BASE_URL, IAM_APP, TRADING_APP, USERS_LIST, USERS_TRADES } from '../../../utils/constants';\n\nimport { timeToStr, UrlQuery } from '../../../utils/utils';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Filters from './filters';\n\nimport { round, round_hundred_thousand } from '../../../utils/math-round'\n\nimport { numDiscriminant } from '../../../utils/discriminant'\n\n\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\n\n\nfunction CustomPagination() {\n\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n\n\n  return (\n\n    <Pagination\n\n      className={classes.root}\n\n      shape=\"rounded\"\n\n      color=\"primary\"\n\n      // variant=\"contained\"\n\n      count={state.pagination.pageCount}\n\n      page={state.pagination.page + 1}\n\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n\n    />\n\n  );\n\n}\n\n\n\nfunction TradesHistoryDatagrid(props) {\n\n\n\n  const history = useHistory()\n\n\n\n  const columns = [\n\n    {\n\n      field: 'tracking_code',\n\n      headerName: 'شناسه سفارش',\n\n      flex: 1,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (params) => `${params.row?.tracking_code.slice(0, 8)}`\n\n    },\n\n    {\n\n      field: 'market',\n\n      headerName: 'بازار',\n\n      flex: 0.5,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (params) => `${params.row?.buy_order.dest_wallet}-${params.row?.buy_order.origin_wallet}`\n\n    },\n\n    {\n\n      field: 'type',\n\n      headerName: 'سمت',\n\n      flex: 0.5,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (params) => (\n\n        <div className=\"d-flex\">\n\n          {console.log(\"params\", params)}\n\n          {params.row?.type === \"sell\" ? <span className=\"text-danger\">فروش</span> : <span className=\"text-success\">خرید</span>}\n\n        </div>\n\n      )\n\n    },\n\n    {\n\n      field: 'dest_wallet',\n\n      headerName: 'نوع سفارش',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (params) => `${params.row?.match_type === \"limit\" ? \"محدود\" : \"سریع\"}`\n\n    },\n\n    {\n\n      field: 'user_name',\n\n      headerName: 'نام کاربر',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.user[0]?.credentials.first_name} ${values.row?.user[0]?.credentials.last_name}`\n\n\n\n    },\n\n    {\n\n      field: 'user_nationalcode',\n\n      headerName: 'کد ملی',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.user[0]?.credentials.national_code}`\n\n\n\n    },\n\n    {\n\n      field: 'amount',\n\n      headerName: 'قیمت سفارش',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) => `${numDiscriminant(round(params.row?.amount))} ${params.row?.buy_order.origin_wallet === \"irr\" ? \"تومان\" : \"تتر\"}`\n\n\n\n    },\n\n    {\n\n      field: 'quantity',\n\n      headerName: 'مقدار',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) => `${numDiscriminant(params.row?.quantity)}`\n\n\n\n    },\n\n    {\n\n      field: 'total',\n\n      headerName: 'مبلغ کل(تومان)',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) => `${(params?.row?.amount) * (params?.row?.quantity) == \"0\" ? \"0\" : numDiscriminant(round((params?.row?.amount) * (params?.row?.quantity)))}`\n\n    },\n\n    {\n\n      field: 'commission',\n\n      headerName: 'کارمزد',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) => {\n\n        let commission = params.row?.type === \"buy\" ? params.row?.buy_order.commission_percentage : params.row?.sell_order.commission_percentage\n\n        let destWalletName = params.row?.type === \"buy\" ? params.row?.buy_order.dest_wallet : params.row?.sell_order.dest_wallet\n\n        let originWallet = params.row?.buy_order.origin_wallet === \"btc\" ? \" بیتکوین\" : params.row?.buy_order.origin_wallet === \"usdt\" ? \"تتر\" : params.row?.buy_order.origin_wallet === \"irr\" ? \"تومان\" : params.row?.buy_order.origin_wallet === \"eth\" ? \"اتریوم\" : params.row?.buy_order.origin_wallet === \"trx\" ? \"ترون\" : params.row?.buy_order.origin_wallet === \"eos\" ? \"ایاس\" : params.row?.buy_order.origin_wallet === \"ada\" ? \"آدا\" : params.row?.buy_order.origin_wallet === \"xlm\" ? \"استلار\" : params.row?.buy_order.origin_wallet === \"ltc\" ? \"لایت کوین\" : params.row?.buy_order.origin_wallet === \"bnb\" ? \"بایننس کوین\" : params.row?.buy_order.origin_wallet === \"doge\" ? \"دوج\" : params.row?.buy_order.origin_wallet === \"bch\" ? \"بیتکوین کش\" : null\n\n        return `${(commission * params.row?.quantity ) == \"0\" || (commission * (params?.row?.amount) * (params?.row?.quantity)) == \"0\" ? \"0\" : params.row?.type === \"buy\"? numDiscriminant(round_hundred_thousand(commission * params.row?.quantity)) : numDiscriminant(round_hundred_thousand(commission * (params?.row?.amount) * (params?.row?.quantity)))} ${ params.row?.type === \"buy\"? destWalletName : originWallet}`\n\n      }\n\n    },\n\n    {\n\n      field: 'income',\n\n      headerName: 'دریافتی',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) => {\n\n        let commission = params.row?.type === \"buy\" ? params.row?.buy_order.commission_percentage : params.row?.sell_order.commission_percentage\n\n        let destWalletName = params.row?.type === \"buy\" ? params.row?.buy_order.dest_wallet : params.row?.sell_order.dest_wallet\n\n        let originWallet = params.row?.buy_order.origin_wallet === \"btc\" ? \" بیتکوین\" : params.row?.buy_order.origin_wallet === \"usdt\" ? \"تتر\" : params.row?.buy_order.origin_wallet === \"irr\" ? \"تومان\" : params.row?.buy_order.origin_wallet === \"eth\" ? \"اتریوم\" : params.row?.buy_order.origin_wallet === \"trx\" ? \"ترون\" : params.row?.buy_order.origin_wallet === \"eos\" ? \"ایاس\" : params.row?.buy_order.origin_wallet === \"ada\" ? \"آدا\" : params.row?.buy_order.origin_wallet === \"xlm\" ? \"استلار\" : params.row?.buy_order.origin_wallet === \"ltc\" ? \"لایت کوین\" : params.row?.buy_order.origin_wallet === \"bnb\" ? \"بایننس کوین\" : params.row?.buy_order.origin_wallet === \"doge\" ? \"دوج\" : params.row?.buy_order.origin_wallet === \"bch\" ? \"بیتکوین کش\" : null\n\n        return params.row?.type === \"buy\" ? `${numDiscriminant(round_hundred_thousand(params.row?.quantity - (commission * params.row?.quantity)))} ${destWalletName}` : `${numDiscriminant(round(((params?.row?.amount) * (params?.row?.quantity)) - commission))} ${originWallet}`\n\n        // {type === \"buy\" ? `${numDiscriminant(round_hundred_thousand(item.quantity - (commission * item.quantity)))} ${destWalletName}` : `${numDiscriminant(round_hundred_thousand(item.amount - (commission * item.amount)))} ${originWallet}`}\n\n      }\n\n    },\n\n    {\n\n      field: 'created_at',\n\n      headerName: 'تاریخ',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n\n    },\n\n  ];\n\n\n\n  const [params, setParams] = React.useState({ order: \"-updated_at\", size: 10, page: 0 })\n\n  const [{ data, isLoading , hasError }, doFetch] = useFetchApi(undefined, [])\n\n\n  const updateData = () => {\n\n    data?.results?.map((item, index) => {\n\n      let update = data?.users_info?.filter((itm, idx) => idx === index)\n\n      return item.user = update\n\n    })\n\n  }\n\n  React.useEffect(() => {\n\n    doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_TRADES, { ...params }))\n\n  }, [params])\n\n\n  React.useEffect(() => {\n\n    updateData()\n\n  }, [data])\n\n\n  return (\n\n    <div className=\"content\">\n\n      <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تاریخچه معاملات </p>\n\n        </div>\n\n      </div>\n\n        <Filters params={params} setParams={setParams} />\n\n      <div className=\"d-flex px-0\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n\n          <DataGrid\n\n            style={{ border: 0 }}\n\n            autoHeight\n\n            rows={data?.results ?? []}\n\n            loading={isLoading}\n\n            columns={columns}\n\n            getRowClassName={\n\n              params => 'grid-content'\n\n            }\n\n            headerHeight={50}\n\n            rowHeight={52}\n\n            isRowSelectable={false}\n\n            components={{\n\n              Pagination: CustomPagination\n\n            }}\n\n            pageSize={10}\n\n            rowCount={data?.total}\n\n            paginationMode=\"server\"\n\n            onPageChange={(param) =>  doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_TRADES, { ...params, page: param }))}\n\n            disableSelectionOnClick\n\n            disableColumnMenu\n\n          />\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default TradesHistoryDatagrid\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/historyAccountant/historyAccountantDatagrid.js",["772","773","774","775","776","777","778","779","780","781","782","783","784","785"],"import React from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Button } from '@material-ui/core';\n\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../../utils/hooks\";\n\nimport { ACCOUNTING_APP, ADMIN_BASE_URL, USERS_TRANSACTION_HISTORY } from '../../../utils/constants';\n\nimport { timeToStr, UrlQuery } from '../../../utils/utils';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Filters from './filters';\n\n\n\n\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\n\n\nfunction CustomPagination() {\n\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n\n\n  return (\n\n    <Pagination\n\n      className={classes.root}\n\n      shape=\"rounded\"\n\n      color=\"primary\"\n\n      // variant=\"contained\"\n\n      count={state.pagination.pageCount}\n\n      page={state.pagination.page + 1}\n\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n\n    />\n\n  );\n\n}\n\n\n\nfunction HistoryAccountantDatagrid(props) {\n\n\n\n  const history = useHistory()\n\n\n\n  const columns = [\n\n    {\n\n      field: 'tracking_code',\n\n      headerName: 'شناسه تراکنش',\n\n      flex: 1,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.tracking_code?.slice(0, 8)}`\n\n    },\n\n    {\n\n      field: 'created_at',\n\n      headerName: 'تاریخ و ساعت',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n\n    },\n\n    {\n\n      field: 'type',\n\n      headerName: 'نوع عملیات',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => {\n\n        let className = ''\n\n        let text = ''\n\n        switch (values.row?.order_type) {\n\n          case \"trade\":\n\n            switch (values.row?.type) {\n              \n              case \"increase\":\n\n                className = \"text-success\"\n    \n                text = \"خرید\"\n    \n                break;\n    \n              case \"decrease\":\n    \n                className = \"text-danger\"\n    \n                text = \"فروش\"\n    \n                break;\n            }\n\n            break;\n\n            case \"withdraw\":\n\n              className = \"text-danger\"\n\n              text = \"برداشت\"\n  \n            break;\n\n            case \"deposit\":\n\n              className = \"text-success\"\n\n              text = \"واریز\"\n  \n            break;\n\n            case \"payment_gateway\":\n\n              switch (values.row?.type) {\n              \n                case \"increase\":\n  \n                  className = \"text-success\"\n      \n                  text = \"واریز\"\n      \n                  break;\n      \n                case \"decrease\":\n      \n                  className = \"text-danger\"\n      \n                  text = \"برداشت\"\n      \n                  break;\n              }\n  \n            break;\n        \n          default:\n\n            break;\n\n        }\n\n        return <div className=\"d-flex\">\n\n          <span className={className}>{text}</span>\n\n        </div>\n\n      }\n\n    },\n\n    {\n\n      field: 'owner_id',\n\n      headerName: 'نام کاربر',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.user[0]?.credentials.first_name} ${values.row?.user[0]?.credentials.last_name}`\n\n    },\n\n    {\n\n      field: 'quantity_with_fee',\n\n      headerName: 'مبلغ تراکنش(تومان)',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${values.row?.quantity_with_fee}`\n\n\n    },\n\n    {\n\n      field: 'commission_id',\n\n      headerName: 'کارمزد(تومان)',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${values.row?.commission}`\n      \n      \n    },\n    \n    {\n      \n      field: 'track_code',\n      \n      headerName: 'کد پیگیری',\n      \n      // description: 'This column has a value getter and is not sortable.',\n      \n      sortable: false,\n      \n      align: 'center',\n      \n      flex: 1,\n      \n      headerClassName: 'grid-header',\n      \n      headerAlign: 'center',\n      \n      renderCell: (values) => `${values.row?.tracking_code}`\n\n    },\n    {\n\n      field: 'description',\n\n      headerName: 'توضیحات',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => {\n\n        let className = ''\n\n        let text = ''\n\n        switch (values.row?.order_type) {\n\n          case \"trade\":\n\n            switch (values.row?.type) {\n              \n              case \"increase\":\n\n\n                text = \"خرید\"\n    \n                break;\n    \n              case \"decrease\":\n    \n\n                text = \"فروش\"\n    \n                break;\n            }\n\n            break;\n\n            case \"withdraw\":\n              \n              text = \"برداشت از کیف پول\"\n  \n            break;\n\n            case \"deposit\":\n\n              text = \"شارژ کیف پول\"\n  \n            break;\n\n            case \"payment_gateway\":\n\n              switch (values.row?.type) {\n              \n                case \"increase\":\n  \n  \n                  text = \"شارژ کیف پول\"\n      \n                  break;\n      \n                case \"decrease\":\n      \n  \n                  text = \"برداشت از کیف پول\"\n      \n                  break;\n              }\n  \n            break;\n        \n          default:\n\n            break;\n\n        }\n\n        return <div className=\"d-flex\">\n\n          <span>{text}</span>\n\n        </div>\n\n      }\n\n    },\n\n\n    {\n\n      field: 'status',\n\n      headerName: 'وضعیت',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => {\n\n        let text = values.row?.status === \"success\" ? \"موفق\" : \"ناموفق\"\n\n        let pic = values.row?.status === \"success\" ? \"/assets/drawer/check_circle-24px.svg\" : \"/assets/drawer/cancel-24px (1).svg\"\n\n        return <div className=\"d-flex justify-content-center w-100\">\n\n          <img src={pic} />\n\n          {text}\n\n        </div>\n\n      }\n\n    },\n\n  ];\n\n\n\n  const [params, setParams] = React.useState({ size: 10, page: 0 })\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n  const updateData = () => {\n\n    data?.results?.map((item, index) => {\n\n      let update = data?.users_info?.filter((itm, idx) => idx === index)\n\n      console.log(\"update\", update);\n\n      return item.user = update\n\n    })\n\n  }\n\n\n\n  React.useEffect(() => {\n\n    doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(USERS_TRANSACTION_HISTORY, { ...params }))\n\n  }, [params])\n\n\n  React.useEffect(() => {\n\n    updateData()\n\n  }, [data])\n\n\n  return (\n\n    <div className=\"content\">\n\n      <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تاریخچه تراکنش‌ها </p>\n\n        </div>\n\n        <Filters params={params} setParams={setParams} />\n\n      </div>\n\n      <div className=\"d-flex px-3\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n\n          <DataGrid\n\n            style={{ border: 0 }}\n\n            autoHeight\n\n            rows={data?.results ?? []}\n\n            loading={isLoading}\n\n            columns={columns}\n\n            getRowClassName={\n\n              params => 'grid-content'\n\n            }\n\n            headerHeight={50}\n\n            rowHeight={52}\n\n            isRowSelectable={false}\n\n            components={{\n\n              Pagination: CustomPagination\n\n            }}\n\n            pageSize={10}\n\n            rowCount={data?.results?.length}\n\n            paginationMode=\"server\"\n\n            onPageChange={(param) => doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(USERS_TRANSACTION_HISTORY, { ...params, page: param }))}\n\n            disableSelectionOnClick\n\n            disableColumnMenu\n\n          />\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default HistoryAccountantDatagrid\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/orderHistory/ordersHistoryDatagrid.js",["786","787","788","789","790"],"import React from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Button } from '@material-ui/core';\n\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../../utils/hooks\";\n\nimport { TRADING_APP, USERS_ORDERS } from '../../../utils/constants';\n\nimport { timeToStr, UrlQuery } from '../../../utils/utils';\n\nimport { useHistory } from 'react-router-dom';\n\nimport Filters from './filters';\nimport { numDiscriminant } from '../../../utils/discriminant';\nimport { round, round_ten_thousand } from '../../../utils/math-round';\n\n\n\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\n\n\nfunction CustomPagination() {\n\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n\n\n  return (\n\n    <Pagination\n\n      className={classes.root}\n\n      shape=\"rounded\"\n\n      color=\"primary\"\n\n      // variant=\"contained\"\n\n      count={state.pagination.pageCount}\n\n      page={state.pagination.page + 1}\n\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n\n    />\n\n  );\n\n}\n\n\n\nfunction OrdersHistoryDatagrid(props) {\n\n\n\n  const history = useHistory()\n\n\n\n  const columns = [\n\n    {\n\n      field: 'tracking_code',\n\n      headerName: 'شناسه',\n\n      flex: 1,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.tracking_code.slice(0, 8)}`\n\n    },\n\n    {\n\n      field: 'origin_wallet',\n\n      headerName: 'بازار',\n\n      flex: 0.75,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => (\n\n        <div className=\"d-flex\">\n\n          <span>{values.row?.origin_wallet} - {values.row?.dest_wallet}</span>\n\n        </div>\n\n      )\n\n    },\n\n    {\n\n      field: 'type',\n\n      headerName: 'سمت',\n\n      flex: 0.5,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => (\n\n        <div className=\"d-flex\">\n          {console.log(\"value\",values.value)}\n          {values.value === \"sell\" ? <span className=\"text-danger\">فروش</span> : <span className=\"text-success\">خرید</span>}\n\n        </div>\n\n      )\n\n    },\n\n    {\n\n      field: 'trade_type',\n\n      headerName: 'نوع سفارش',\n\n      flex: 0.75,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => (\n\n        <div className=\"d-flex\">\n\n          {values.row?.trade_type === \"limit\" ? \"محدود\" : \"سریع\"}\n\n        </div>\n\n      )\n\n    },\n\n    {\n\n      field: 'owner_id',\n\n      headerName: 'نام کاربر',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.user[0]?.credentials.first_name} ${values.row?.user[0]?.credentials.last_name}`\n\n\n    },\n\n    {\n\n      field: 'unit_price',\n\n      headerName: 'قیمت سفارش',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => numDiscriminant(values.row?.unit_price)\n\n    },\n\n    {\n\n      field: 'quantity',\n\n      headerName: 'مقدار',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => numDiscriminant(values.row?.quantity)\n\n    },\n\n    {\n\n      field: 'commission_percentage',\n\n      headerName: 'کارمزد فعلی',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n    },\n\n    {\n\n      field: 'total',\n\n      headerName: 'مبلغ کل',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => numDiscriminant(parseInt(values?.row?.unit_price) * parseInt(values?.row?.quantity))\n\n    },\n\n    {\n\n      field: 'progress',\n\n      headerName: 'پرشده',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => {\n        let fill = values.value / values.row.quantity\n        return <>\n        {(round_ten_thousand(fill === Infinity ? 1 : fill) * 100)}%\n        </>\n        // numDiscriminant(round_ten_thousand(values?.value))\n      }\n\n\n    },\n\n    {\n\n      field: 'created_at',\n\n      headerName: 'تاریخ',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n\n    },\n\n    {\n\n      field: 'status',\n\n      headerName: 'وضعیت',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => <div className=\"d-flex justify-content-center w-100\">\n\n        {\n\n          values?.value === \"in_progress\" ? (<Button variant=\"outlined\" onClick={() => { }} className=\"ms-2 border-danger text-danger\">لغو سفارش</Button>)\n\n            : (\n\n              values?.value === \"success\" ? 'انجام شده' : \n              values?.value === \"cancel_by_user\" ? 'توسط کاربر لغو شده' : \n              values?.value === \"failed\" ? 'لغو شده' : \n              values?.value === \"pending\" ? 'درحال انتظار':'' \n              \n\n            )\n\n        }\n\n      </div>\n\n    }\n\n  ];\n\n\n\n  const [params, setParams] = React.useState({ order: \"-updated_at\", status__in: \"success,failed,pending,cancel_by_user\", size: 10, page: 0 })\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n\n  const updateData = () => {\n\n    data?.results?.map((item, index) => {\n\n      let update = data?.users_info?.filter((itm, idx) => idx === index)\n\n      return item.user = update\n\n    })\n\n  }\n\n  React.useEffect(() => {\n\n    doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_ORDERS, { ...params }))\n\n  }, [params])\n\n  React.useEffect(() => {\n\n    updateData()\n\n  }, [data])\n\n  return (\n\n    <div className=\"content\">\n\n      <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تاریخچه سفارش‌ها </p>\n\n        </div>\n\n      </div>\n\n        <Filters params={params} setParams={setParams} />\n\n      <div className=\"d-flex px-3\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n\n          <DataGrid\n\n            style={{ border: 0 }}\n\n            autoHeight\n\n            rows={data?.results ?? []}\n\n            loading={isLoading}\n\n            columns={columns}\n\n            getRowClassName={\n\n              params => 'grid-content'\n\n            }\n\n            headerHeight={50}\n\n            rowHeight={52}\n\n            isRowSelectable={false}\n\n            components={{\n\n              Pagination: CustomPagination\n\n            }}\n\n            pageSize={10}\n\n            rowCount={data?.total}\n\n            paginationMode=\"server\"\n\n            onPageChange={(param) => doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_ORDERS, { ...params, page: param }))}\n\n            disableSelectionOnClick\n\n            disableColumnMenu\n\n          />\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default OrdersHistoryDatagrid\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/rialAccountant/rialAccountantDatagrid.js",["791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808"],"import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../../utils/hooks\";\n\nimport { ACCOUNTING_APP, BASE_URL, USERS_TRANSACTION_HISTORY, WITHDRAWS_LIST, WITHDRAW_DETAIL } from '../../../utils/constants';\n\nimport { timeToStr, UrlQuery } from '../../../utils/utils';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Filters from './filters';\n\nimport { numDiscriminant } from '../../../utils/discriminant';\n\nimport { CircularProgress, Backdrop, Button, Snackbar, Dialog, DialogTitle, DialogActions, DialogContent } from '@material-ui/core';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport CopyToClipboard from '../../../utils/copy-to-clipboard';\nimport copy from '../../../assets/content_copy-24px.svg'\n\n\n\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\nconst ConfirmModal = (props) => {\n\n  return <Dialog\n\n    maxWidth=\"xs\"\n\n    //   onEntering={handleEntering}\n\n    aria-labelledby=\"confirmation-dialog-title\"\n\n    open={props.modalOpen}\n\n  >\n\n    <DialogTitle id=\"confirmation-dialog-title\">آیا از تغییر وضعیت برداشت مطمئن هستید؟</DialogTitle>\n\n    <DialogContent >\n\n    </DialogContent>\n\n    <DialogActions>\n\n      <Button autoFocus onClick={() => props.setModalOpen(false)} variant=\"outlined\" color=\"secondary\">\n\n        خیر\n\n      </Button>\n\n      <Button onClick={() => {\n\n        props.handleUserApprove(props.approve.action,props.approve.withdrawId)\n\n        setTimeout(() => { props.setModalOpen(false) }, 2000)\n\n      }} variant=\"contained\" color=\"primary\">\n\n        بله\n\n      </Button>\n\n    </DialogActions>\n\n  </Dialog>\n\n}\n\n\nfunction CustomPagination() {\n\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n\n\n  return (\n\n    <Pagination\n\n      className={classes.root}\n\n      shape=\"rounded\"\n\n      color=\"primary\"\n\n      // variant=\"contained\"\n\n      count={state.pagination.pageCount}\n\n      page={state.pagination.page + 1}\n\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n\n    />\n\n  );\n\n}\n\n\n\n\nfunction RialAccountantDatagrid(props) {\n\n\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const [userState, setUserState] = useState('');\n\n  const [showToolTip, setShowToolTip] = useState(false);\n\n  const history = useHistory()\n\n  const renderToolTipSuccess = <Tooltip id=\"copied\">Copied!</Tooltip>\n\n  const renderNothing = <div />\n\n  const columns = [\n\n    {\n\n      field: 'tracking_code',\n\n      headerName: 'شناسه سفارش',\n\n      flex: 1,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.tracking_code?.slice(0, 8)}`\n\n    },\n\n    {\n\n      field: 'owner_id',\n\n      headerName: 'نام کاربر',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.user[0]?.credentials.first_name} ${values.row?.user[0]?.credentials.last_name}`\n\n\n    },\n\n    {\n\n      field: 'national_code',\n\n      headerName: 'کدملی',\n\n      flex: 0.75,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.user ? values.row?.user[0]?.credentials.national_code : null}`\n\n\n    },\n\n    {\n\n      field: 'amount',\n\n      headerName: 'مبلغ برداشت(تومان)',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => numDiscriminant(values.row?.amount)\n\n    },\n    {\n\n      field: 'withdraw_fee',\n\n      headerName: 'کارمزد برداشت',\n\n      flex: 0.75,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n    },\n    {\n\n      field: 'user',\n\n      headerName: 'شماره شبا واریز',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'baseline',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => {\n        let sheba\n        values.value && values.value[0].cards?.map(item => {\n          if (item.id === values.row?.bank_account_id) {\n            return sheba = item.sheba_number\n          }\n        })\n        let renderTooltip = (props) => (\n\n          <Tooltip id=\"button-tooltip\" {...props}>\n\n            {sheba && sheba}\n\n          </Tooltip>\n\n        );\n\n          console.log(\"sheba\",sheba)\n\n        return (\n\n          <>\n\n            <OverlayTrigger\n\n              placement=\"top\"\n\n              delay={{ show: 250, hide: 400 }}\n\n              overlay={renderTooltip}\n\n            >\n\n              <Button>\n\n                {sheba?.slice(-5)}...\n\n              </Button>\n\n            </OverlayTrigger>\n\n            <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={showToolTip ? renderToolTipSuccess : renderNothing} rootClose>\n\n              <span id=\"basic-addon3\"\n\n                onClick={() => {\n\n                  CopyToClipboard(values.row?.dest_address)\n\n\n                  setShowToolTip(true)\n\n                  setTimeout(() => { setShowToolTip(false) }, 2000);\n\n                }}\n\n              >\n\n                <img alt=\"\" src={copy} class=\"w-50\" />\n\n              </span>\n\n            </OverlayTrigger>\n\n          </>\n\n        )\n      }\n    },\n    {\n\n      field: 'created_at',\n\n      headerName: 'زمان درخواست',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n\n    },\n    {\n\n      field: 'updated_at',\n\n      headerName: 'زمان تایید',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n\n    },\n    {\n\n      field: 'approver_admin',\n\n      headerName: 'تایید کننده',\n\n      flex: 0.75,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n    },\n    // {\n\n    //   field: 'description',\n\n    //   headerName: 'جزییات',\n\n    //   flex: 1,\n\n    //   sortable: false,\n\n    //   headerClassName: 'grid-header',\n\n    //   headerAlign: 'center',\n\n    //   align: 'center',\n\n    //   renderCell: (values) => values.row?.description ? <Button variant=\"outlined\" size=\"small\"\n\n    //     smaller onClick={() => window.open(values.row?.description, '_blank')}>جزییات</Button> : \"-\"\n\n    // },\n    {\n\n      field: 'action',\n\n      headerName: 'تایید یا لغو برداشت',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => {\n\n        if (values?.row.status === \"in_progress\") {\n\n          return (\n\n            <>\n              {/* <Button variant=\"contained\" color=\"secondary\" onClick={() => handleAction(\"success\", values.row.id)} small className=\"ms-4\">تایید برداشت</Button> */}\n\n              <Button\n\n                variant=\"contained\"\n\n                color=\"secondary\"\n\n                onClick={() => {\n\n                  setUserState({action:\"success\",withdrawId:values.row.id})\n\n                  setModalOpen(true)\n                }}\n\n                small\n\n                className=\"ms-1\">تایید برداشت</Button>\n\n              <Button\n\n                variant=\"contained\"\n\n                onClick={() => {\n\n                  setUserState({action:\"rejected\",withdrawId:values.row.id})\n\n                  setModalOpen(true)\n                }}\n\n                small\n\n                className=\"bg-danger text-white\">لغو</Button>\n\n            </>\n\n          )\n\n        } else if (values?.row.status === \"success\") {\n\n          return (\n\n            <div className=\"d-flex justify-content-center w-100\">\n\n              <img src=\"/assets/drawer/check_circle-24px.svg\" />\n\n              تایید شده\n\n            </div>\n\n          )\n\n        } else if (values?.row?.status === \"rejected\") {\n\n          return (\n\n            <div className=\"d-flex justify-content-center w-100\">\n\n              <img src=\"/assets/drawer/cancel-24px (1).svg\" />\n\n              لغو شده\n\n            </div>\n\n          )\n\n        } else {\n\n          return null\n\n        }\n\n      }\n\n    },\n\n    {\n\n      field: 'status',\n\n      headerName: 'وضعیت تسویه',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => {\n\n        if (values?.row.status === \"in_progress\" || values?.row.status === \"pending\") {\n\n          return (\n\n            <Button \n\n            variant=\"contained\" \n\n            color=\"primary\" \n\n            onClick={() => {\n\n              setUserState({action:\"success\",withdrawId:values.row.id})\n\n              setModalOpen(true)\n            }}\n            \n            className=\"ms-2\">تایید نهایی</Button>\n\n          )\n\n        } else if (values?.row.status === \"success\") {\n\n          return (\n\n            <div className=\"d-flex justify-content-center w-100\">\n\n              <img src=\"/assets/drawer/check_circle-24px.svg\" />\n\n              تسویه شده\n\n            </div>\n\n          )\n\n        } else if (values?.row?.status === \"rejected\") {\n\n          return (\n\n            <div className=\"d-flex justify-content-center w-100\">\n\n              <img src=\"/assets/drawer/cancel-24px (1).svg\" />\n\n              لغو شده\n\n            </div>\n\n          )\n\n        } else {\n\n          return \"\"\n\n        }\n\n      }\n\n    }\n\n  ];\n\n\n\n  const [params, setParams] = React.useState({ order: \"-updated_at\", crypto_type: 'irr', size: 10, page: 0 })\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, {});\n\n  const [{ data: withdrawData, isLoading: withdrawLoading }, updateWithdraw] = useFetchApi(undefined, {});\n\n\n\n  const updateData = () => {\n\n    data?.results?.map((item, index) => {\n\n      let update = data?.users_info?.filter((itm, idx) => idx === index)\n\n      console.log(\"updateeeeee\", update);\n\n      return item.user = update\n\n    })\n\n  }\n\n  const handleAction = (action, withdrawId) => {\n\n    console.log(\"attention ====>\",action, withdrawId);\n\n    if ([\"success\", \"rejected\", \"in_progress\"].includes(action)) {\n\n\n      updateWithdraw(\"PUT\", ACCOUNTING_APP, WITHDRAW_DETAIL(withdrawId), { status: action })\n\n      setTimeout(() => doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(WITHDRAWS_LIST, { ...params })), 1500)\n\n    }\n\n  }\n\n\n  React.useEffect(() => {\n\n    doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(WITHDRAWS_LIST, { ...params }))\n\n  }, [params])\n\n\n\n  React.useEffect(() => {\n\n    updateData()\n\n  }, [data])\n\n  console.log(\"data\", data)\n\n\n  return (\n\n    <div className=\"content\">\n\n      <ConfirmModal modalOpen={modalOpen} setModalOpen={setModalOpen} handleUserApprove={handleAction} approve={userState} />\n\n      <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تایید برداشت ریال</p>\n\n        </div>\n\n        <Filters params={params} setParams={setParams} />\n\n      </div>\n\n      <div className=\"d-flex px-3\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n\n          <DataGrid\n\n            style={{ border: 0 }}\n\n            autoHeight\n\n            rows={data?.results ?? []}\n\n            loading={isLoading}\n\n            columns={columns}\n\n            getRowClassName={\n\n              params => 'grid-content'\n\n            }\n\n            headerHeight={50}\n\n            rowHeight={52}\n\n            isRowSelectable={false}\n\n            components={{\n\n              Pagination: CustomPagination\n\n            }}\n\n            pageSize={10}\n\n            rowCount={data?.results?.length}\n\n            paginationMode=\"server\"\n\n            onPageChange={(param) => doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(WITHDRAWS_LIST, { ...params, page: param }))}\n\n            disableSelectionOnClick\n\n            disableColumnMenu\n\n          />\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default RialAccountantDatagrid\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/cryptoAccountant/cryptoAccountantDatagrid.js",["809","810","811","812","813","814","815","816","817","818","819","820","821","822"],"import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { DataGrid, useGridSlotComponentProps } from '@mui/x-data-grid';\n\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\n// import { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../../utils/hooks\";\n\nimport { USERS_TRANSACTION_HISTORY } from '../../../utils/constants';\n\nimport { timeToStr, UrlQuery } from '../../../utils/utils';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Filters from './filters';\n\nimport { ACCOUNTING_APP, BASE_URL, WITHDRAWS_LIST, WITHDRAW_DETAIL } from '../../../utils/constants';\n\nimport CopyToClipboard from '../../../utils/copy-to-clipboard';\n\nimport copy from '../../../assets/content_copy-24px.svg'\n\nimport ConfigApi from '../../../utils/config-api';\n\nimport { CircularProgress, Backdrop, Button, Snackbar, Dialog, DialogTitle, DialogActions, DialogContent } from '@material-ui/core';\n\nimport { numDiscriminant } from '../../../utils/discriminant';\n\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\nconst ConfirmModal = (props) => {\n\n  return <Dialog\n    maxWidth=\"xs\"\n    //   onEntering={handleEntering}\n    aria-labelledby=\"confirmation-dialog-title\"\n    open={props.modalOpen}\n  >\n    <DialogTitle id=\"confirmation-dialog-title\">آیا از تغییر وضعیت برداشت مطمئن هستید؟</DialogTitle>\n    <DialogContent >\n\n    </DialogContent>\n    <DialogActions>\n      <Button autoFocus onClick={() => props.setModalOpen(false)} variant=\"outlined\" color=\"secondary\">\n        خیر\n      </Button>\n      <Button onClick={() => {\n        props.handleUserApprove(props.approve)\n        setTimeout(() => { props.setModalOpen(false) }, 2000)\n      }} variant=\"contained\" color=\"primary\">\n        بله\n      </Button>\n    </DialogActions>\n  </Dialog>\n}\n\n\nfunction CustomPagination() {\n\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n\n\n\n\n  return (\n\n    <Pagination\n\n      className={classes.root}\n\n      shape=\"rounded\"\n\n      color=\"primary\"\n\n      // variant=\"contained\"\n\n      count={state.pagination.pageCount}\n\n      page={state.pagination.page + 1}\n\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n\n    />\n\n  );\n\n}\n\n\n\nfunction CryptoAccountantDatagrid(props) {\n\n  const history = useHistory()\n\n  const [showToolTip, setShowToolTip] = useState(false);\n\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const [userState, setUserState] = useState('');\n\n  const renderToolTipSuccess = <Tooltip id=\"copied\">Copied!</Tooltip>\n\n  const renderNothing = <div />\n\n\n\n  const columns = [\n\n    {\n\n      field: 'tracking_code',\n\n      headerName: 'شناسه',\n\n      flex: .5,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.tracking_code?.slice(0, 8)}`\n\n    },\n\n    {\n\n      field: 'owner_id',\n\n      headerName: 'نام کاربر',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.user[0]?.credentials.first_name} ${values.row?.user[0]?.credentials.last_name}`\n\n      // renderCell: (values) => (\n\n      //   <div className=\"d-flex\">\n\n      //        {values.row?.trade_type === \"limit\" ? \"محدود\" : \"سریع\"}\n\n      //   </div>\n\n      // )\n\n    },\n\n    {\n\n      field: 'national_code',\n\n      headerName: 'کدملی',\n\n      flex: 0.75,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.user[0]?.credentials.national_code}`\n\n      // renderCell: (values) => (\n\n      //   <div className=\"d-flex\">\n\n      //        {values.row?.trade_type === \"sell\" ? <span className=\"text-danger\">فروش</span> : <span className=\"text-success\">خرید</span>}\n\n      //   </div>\n\n      // )\n\n    },\n\n    {\n\n      field: 'origin_wallet',\n\n      headerName: 'بازار',\n\n      flex: .5,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.wallet?.c_type}`\n\n      // renderCell: (values) => (\n\n      //   <div className=\"d-flex\">\n\n      //        <span>{values.row?.origin_wallet} - {values.row?.dest_wallet}</span>\n\n      //   </div>\n\n      // )\n\n    },\n\n    {\n\n      field: 'quantity',\n\n      headerName: 'مقدار برداشت',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: .5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${numDiscriminant(values.row?.amount)}`\n\n    },\n\n    {\n\n      field: 'withdraw_fee',\n\n      headerName: 'کارمزد برداشت',\n\n      flex: 0.75,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n    },\n\n    {\n\n      field: 'commission_percentage',\n\n      headerName: 'کیف پول مقصد',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => {\n\n        let renderTooltip = (props) => (\n\n          <Tooltip id=\"button-tooltip\" {...props}>\n\n            {values.row?.dest_address}\n\n          </Tooltip>\n\n        );\n\n\n        return (\n          <>\n\n            <OverlayTrigger\n\n              placement=\"top\"\n\n              delay={{ show: 250, hide: 400 }}\n\n              overlay={renderTooltip}\n\n            >\n\n              <Button>\n\n                {values.row?.dest_address?.slice(-5)}...\n\n              </Button>\n\n            </OverlayTrigger>\n\n            <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={showToolTip ? renderToolTipSuccess : renderNothing} rootClose>\n\n              <span id=\"basic-addon3\"\n\n                onClick={() => {\n\n                  CopyToClipboard(values.row?.dest_address)\n\n\n                  setShowToolTip(true)\n\n                  setTimeout(() => { setShowToolTip(false) }, 2000);\n\n                }}\n\n              >\n\n                <img alt=\"\" src={copy} class=\"w-50\" role=\"button\"/>\n\n              </span>\n\n            </OverlayTrigger>\n\n          </>\n        )\n      }\n\n    },\n\n    {\n\n      field: 'created_at',\n\n      headerName: 'زمان درخواست',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n\n    },\n    {\n\n      field: 'updated_at',\n\n      headerName: 'زمان تایید',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n\n    },\n\n    {\n\n      field: 'approver_admin',\n\n      headerName: 'تایید کننده',\n\n      flex: 0.75,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n    },\n\n    {\n\n      field: 'description',\n\n      headerName: 'جزییات',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => values.row?.status === \"success\" ? <Button variant=\"outlined\"  size=\"small\"\n\n      smaller onClick={() => window.open(values.row?.description, '_blank')}>جزییات</Button> : \"-\"\n\n\n    },\n\n    {\n\n      field: 'approve',\n\n      headerName: 'تایید یا لغو برداشت',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 2,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => (\n\n        <>\n          {values.row?.status === \"success\" ?\n            <>تایید شده</>\n            :\n\n            values.row?.status === \"rejected\" ?\n\n              <>لغو شده</>\n\n              :\n\n              <>\n\n                {/* <Button variant=\"contained\" color=\"secondary\" onClick={() => handleAction(\"success\", values.row.id)} small className=\"ms-4\">تایید برداشت</Button> */}\n\n                <Button\n\n                  variant=\"contained\"\n\n                  color=\"secondary\"\n\n                  onClick={() => {\n\n                    setUserState([\"success\", values.row.id])\n\n                    setModalOpen(true)\n\n                  }}\n                  size=\"small\"\n\n                  smaller\n\n                  className=\"ms-1\">تایید برداشت</Button>\n\n\n\n                <Button\n\n                  variant=\"contained\"\n\n                  onClick={() => {\n\n                    setUserState([\"rejected\", values.row.id])\n\n                    setModalOpen(true)\n\n                  }}\n                  size=\"small\"\n\n                  smaller\n\n                  className=\"bg-danger text-white\">لغو</Button>\n\n              </>\n\n          }\n\n\n        </>\n\n      )\n\n    },\n\n  ];\n\n\n  // const [params, setParams] = React.useState({order: \"-updated_at\", size: 10, page: 0})\n\n  // const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n\n\n  //   React.useEffect( () => {\n\n  //       // doFetch(\"GET\", UrlQuery(USERS_TRANSACTION_HISTORY, {...params}) )\n\n  //   }, [params])\n\n  const [params, setParams] = React.useState({ order: \"-updated_at\", size: 10, page: 0 })\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, {});\n\n  // const [{ data:config, isLoading:configLoading }, doConfig] = useFetchApi(undefined, {});\n\n  const [{ data: withdrawData, isLoading: withdrawLoading }, updateWithdraw] = useFetchApi(undefined, {});\n\n  const updateData = () => {\n\n    data?.results?.map((item, index) => {\n\n      let update = data?.users_info?.filter((itm, idx) => idx === index)\n\n      console.log(\"update\", update);\n\n      return item.user = update\n\n    })\n\n  }\n\n  const handleAction = (approve) => {\n\n    if ([\"success\", \"rejected\", \"in_progress\"].includes(approve[0])) {\n\n      // console.log(action, withdrawId);\n\n      updateWithdraw(\"PUT\", ACCOUNTING_APP, WITHDRAW_DETAIL(approve[1]), { status: approve[0] })\n\n      setTimeout(() => doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(WITHDRAWS_LIST, { ...params })), 1500)\n\n    }\n\n  }\n\n\n  // console.log(\"update withdraw\",withdrawData)\n\n\n  React.useEffect(() => {\n\n    doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(WITHDRAWS_LIST, { ...params }))\n\n  }, [params])\n\n\n  React.useEffect(() => {\n\n    updateData()\n\n  }, [data])\n\n\n  return (\n\n    <div className=\"content\">\n\n      <ConfirmModal modalOpen={modalOpen} setModalOpen={setModalOpen} handleUserApprove={handleAction} approve={userState} />\n\n      <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تایید برداشت ارز</p>\n\n        </div>\n\n        <Filters params={params} setParams={setParams} />\n\n      </div>\n\n      <div className=\"d-flex px-3\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n\n          <DataGrid\n\n            style={{ border: 0 }}\n\n            autoHeight\n\n            rows={data?.results ?? []}\n\n            // rows={rows}\n\n            loading={isLoading}\n\n            columns={columns}\n\n            getRowClassName={\n\n              params => 'grid-content'\n\n            }\n\n            headerHeight={50}\n\n            rowHeight={52}\n\n            isRowSelectable={false}\n\n            components={{\n\n              Pagination: CustomPagination\n\n            }}\n\n            pageSize={10}\n\n            rowCount={data?.results?.length}\n\n            paginationMode=\"server\"\n\n            onPageChange={(param) => doFetch(\"GET\", UrlQuery(WITHDRAWS_LIST, { ...params, page: param + 1}))}\n\n            disableSelectionOnClick\n\n            disableColumnMenu\n\n          />\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default CryptoAccountantDatagrid\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/api.js",["823","824"],"import { notification } from 'antd';\nimport axios from 'axios';\n\nimport { BASE_URL, PREFIX } from \"./constants\";\n\nimport { getTokenObject } from \"./utils\";\n\n\nconst openNotification = describe => {\n\n    notification.error({\n\n        message: `پیغام خطا `,\n\n        description: describe,\n\n        placement: \"bottomRight\",\n\n        className: \"bg-danger\",\n\n        style: { zIndex: '50000' }\n\n\n\n    });\n\n    notification.config({\n\n        rtl: false\n\n    })\n\n};\n\nexport const api = axios.create({\n\n    // baseURL: BASE_URL,\n\n    headers: {\n\n        'Content-Type': 'application/json'\n\n    },\n\n})\n\napi.interceptors.request.use(config => {\n\n    if (!config.headers.Authorization) {\n\n        let token = getTokenObject()\n\n        if (token) {\n\n            config.headers.Authorization = `Bearer ${token.Authorization}`;\n\n        }\n\n    }\n\n    // refreshToken()\n\n    return config;\n\n}, error => Promise.reject(error));\n\n\napi.interceptors.response.use((response) => {\n\n    if (response.status === 201) {\n\n        let responseMessage = response.data.message ? response.data.message : undefined\n\n    }\n\n\n    return response\n\n}, async function (error) {\n\n    // const originalRequest = error.config;\n\n    if (error.response.status === 401) {\n\n        window.location.href = `${PREFIX}/login`\n\n    }\n    if (error.response.status === 403) {\n\n        return openNotification('کاربر دسترسی ندارد')\n\n    }\n\n    if (error.response.status === 405) {\n\n        return openNotification('تیکت بسته شده است')\n\n    }\n    if (error.response.status === 500) {\n\n        return openNotification('ارتباط با سرور برقرار نشد')\n\n    }\n\n    if (error.response.status === 400) {\n\n        if (error.response.data.status_code === 5050) {\n\n            return openNotification('موجودی کافی نمی باشد.')\n\n        } else if (error.response.data.status_code === 404) {\n\n            return openNotification('رمز وارد شده صحیح نمی باشد.')\n\n        } else if (error.response.data.status_code === 4001) {\n\n            return openNotification('کاربر با این شماره وجود دارد.')\n\n        } else if (error.response.data.status_code === 4002) {\n\n            return openNotification('کاربر با این کد دعوت وجود ندارد')\n\n        } else if (error.response.data.status_code === 4003) {\n\n            return openNotification('رمز عبور اشتباه است')\n\n        } else if (error.response.data.status_code === 4050) {\n\n            return openNotification('زمان استفاده از کد تایید به پایان رسیده است')\n\n        } else if (error.response.data.status_code === 4051) {\n\n            return openNotification('کد تایید اشتباه است')\n\n        } else if (error.response.data.status_code === 4052) {\n\n            return openNotification('کد تایید برای شما ارسال گردیده است')\n\n        } else if (error.response.data.status_code === 4053) {\n\n            return openNotification('پیامک ارسال نشد')\n\n        } else if (error.response.data.status_code === 4100) {\n\n            return openNotification('ایمیل شما تایید نشده است لطفا ابتدا ایمیل خود را تایید کنید.')\n\n        } else if (error.response.data.status_code === 4101) {\n\n            return openNotification('ایمیل کاربر تغییر نکرد!')\n\n        } else if (error.response.data.status_code === 4150) {\n\n            return openNotification('کاربر احراز هویت نشده است لطفا ابتدا احراز هویت کنید')\n\n        } else if (error.response.data.status_code === 4151) {\n\n            return openNotification('بعد از تایید شدن میتوانید شماره و آدرس خود را عوض کنید')\n\n        } else if (error.response.data.status_code === 4200) {\n\n            return openNotification('کارت بانکی شما تایید نشده است لطفا ابتدا کارت بانکی خود را تایید کنید')\n\n        } else if (error.response.data.status_code === 4300) {\n\n            return openNotification('سرویس با خطا روبرو است')\n\n        } else if (error.response.data.status_code === 4250) {\n\n            return openNotification('فایل فرستاده شده وجود دارد')\n\n        } else if (error.response.data.status_code === 4350) {\n\n            return openNotification('کد تایید اشتباه است')\n\n        } else if (error.response.data.status_code === 4351) {\n\n            return openNotification('شناسایی دوعاملی در حال حاضر فعال است')\n\n        } else if (error.response.data.status_code === 4352) {\n\n            return openNotification('کد تایید اشتباه است')\n\n        } else if (error.response.data.status_code === 4353) {\n\n            return openNotification('کد otp فعال نیست')\n\n        } else if (error.response.data.status_code === 4354) {\n\n            return openNotification('you should select on of types ')\n\n        } else if (error.response.data.status_code === 5000) {\n\n            return openNotification('خطای داخلی رخ داده است')\n\n        } else if (error.response.data.status_code === 5001) {\n\n            return openNotification('نام کاربری قبلا ثبت شده است')\n\n        } else if (error.response.data.status_code === 5950) {\n\n            // return console.error('error',error.response.data.status_code)\n\n            return openNotification('درخواست شما صحیح نمی باشد')\n\n        } else if (error.response.data.status_code === 5100) {\n\n            return openNotification('مارکت موجودی ندارد')\n\n        } else if (error.response.data.status_code === 5051) {\n\n            return openNotification('input quantity accuracy too high')\n\n        } else if (error.response.data.status_code === 5052) {\n\n            return openNotification('مبلغ وارد شده کمتر از حد مجاز است')\n\n        } else if (error.response.data.status_code === 5053) {\n\n            return openNotification('در حال حاضر مارکت فعال نمی باشد')\n\n        } else if (error.response.data.status_code === 5150) {\n\n            return console.error('error', error.response.data.status_code)\n\n        } else if (error.response.data.status_code === 6950) {\n\n            return console.error('error', error.response.data.status_code)\n\n        } else if (error.response.data.status_code === 6001) {\n\n            return openNotification('کیف پول موجودی ندارد')\n\n        } else if (error.response.data.status_code === 6050) {\n\n            return openNotification('کیف پولی برای شما یافت نشد.')\n\n        } else if (error.response.data.status_code === 6051) {\n\n            return openNotification('شماره کارتی برای شما یافت نشد')\n\n        } else if (error.response.data.status_code === 6052) {\n\n            return openNotification('برداشت از این کیف پول امکان پذیر نیست')\n\n        } else if (error.response.data.status_code === 6053) {\n\n            return openNotification('لطفا شبکه و آدرس کیف پول مقصد را وارد کنید')\n\n        }else if (error.response.data.status_code === 6054) {\n\n            return openNotification('quantity must greater than 0 or current asset quantity')\n\n        }  else if (error.response.data.status_code === 6100) {\n\n            return openNotification('این درگاه بانکی در دسترس نیست')\n\n        } else if (error.response.data.status_code === 6101) {\n\n            return openNotification('ارور ورودی زرین پال')\n\n        } else if (error.response.data.status_code === 6102) {\n\n            return openNotification('درگاه زرین پال در دسترس نمی باشد')\n\n        } else if (error.response.data.status_code === 6103) {\n\n            return openNotification('این پرداخت معتبر نمی باشد')\n\n        } else if (error.response.data.status_code === 6150) {\n\n            return openNotification('سرور به مشکل برخورده است')\n\n        } else if (error.response.data.status_code === 6151) {\n\n            return openNotification('wallet manager service not available')\n\n        } else if (error.response.data.status_code === 6152) {\n\n            return openNotification('config service not available')\n\n        } else {\n\n            return openNotification('درخواست شما با خطا روبرو شده است')\n        }\n\n    }\n\n    if (error.response.status === 501) {\n\n        return openNotification('ارتباط با سرور برقرار نشد')\n\n    }\n\n    if (error.response.status === 502) {\n\n        return openNotification('ارتباط با سرور برقرار نشد')\n\n    }\n\n    if (error.response.status === 503) {\n\n        return openNotification('ارتباط با سرور برقرار نشد')\n\n    }\n\n    if (error.response.status === 504) {\n\n        return openNotification('ارتباط با سرور برقرار نشد')\n\n    }\n\n    if (error.response.status === 505) {\n\n        return openNotification('ارتباط با سرور برقرار نشد')\n\n    }\n\n    if (error.response.status === 404) {\n\n        return openNotification('کاربر با این مشخصات یافت نشد.')\n\n    }\n    \n    return Promise.reject(error);\n\n});\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/messages/cardSection/index.js",["825","826","827","828","829"],"import { makeStyles, Paper } from '@material-ui/core';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    //   flexWrap: 'wrap',\n      flexDirection: 'row',\n      alignContent: 'center',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      maxWidth: '1600px',\n      '& > *': {\n        maxWidth: '306px',\n        height: '160px',\n        margin: '20px 0 20px 0',\n        // paddingLeft: \"20px\",\n        backgroundColor: '#293034',\n        display: 'flex',\n        flexDirection: 'row',\n        borderRadius: \"10px\",\n        flexWrap: 'wrap',\n        alignContent: 'center',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      '& > div:nth-child(2n)': {\n          margin: \"0 20px\"\n      }\n    },\n  }));\nconst CardSection = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n        <Paper className=\" container-fluid \">\n            <div className=\"ps-4\">\n                <img src=\"/assets/drawer/users.svg\"/>\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}}>تعداد کل کاربران</p>\n                <div style={{color:'#FFFFFF'}}>\n                    <p>560000000</p>\n                </div>\n            </div>\n        </Paper>\n        <Paper className=\" container-fluid \">\n            <div className=\"ps-4\">\n                <img src=\"/assets/drawer/users.svg\"/>\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}}>تعداد کل کاربران</p>\n                <div style={{color:'#FFFFFF'}}>\n                    <p>560000000</p>\n                </div>\n            </div>\n        </Paper>        \n        <Paper className=\" container-fluid \">\n            <div className=\"ps-4\">\n                <img src=\"/assets/drawer/users.svg\"/>\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}}>تعداد کل کاربران</p>\n                <div style={{color:'#FFFFFF'}}>\n                    <p>560000000</p>\n                </div>\n            </div>\n        </Paper>        \n        <Paper className=\" container-fluid \">\n            <div className=\"ps-4\">\n                <img src=\"/assets/drawer/users.svg\"/>\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}}>تعداد کل کاربران</p>\n                <div style={{color:'#FFFFFF'}}>\n                    <p>560000000</p>\n                </div>\n            </div>\n        </Paper>        \n        <Paper className=\" container-fluid \">\n            <div className=\"ps-4\">\n                <img src=\"/assets/drawer/users.svg\"/>\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}}>تعداد کل کاربران</p>\n                <div style={{color:'#FFFFFF'}}>\n                    <p>560000000</p>\n                </div>\n            </div>\n        </Paper>      \n        </div>\n    );\n}\n\nexport default CardSection;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/tickets/cardSection/index.js",["830","831","832","833","834"],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/layout/sideBar/index.js",["835","836","837","838"],"import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport '../style.css';\n\nconst SideBar = () => {\n    const SideBarData = [\n        {\n            elementNo: 0,\n            title: \"داشبورد\",\n            icon: \"/assets/drawer/deactive/dashboard-1.svg\",\n            activeIcon: \"/assets/drawer/active/dashboard-1.svg\",\n            link: \"/dashboard\",\n            spanDown: \"/assets/drawer/deactive/dashboard-24px.svg\",\n            spanDownActive: \"/assets/drawer/active/dashboard-24px.svg\",\n            childrenItems: [],\n        },\n        {\n            elementNo: 1,\n            title: \"کاربران سامانه\",\n            icon: \"/assets/drawer/deactive/account_balance_wallet-2.svg\",\n            activeIcon: \"/assets/drawer/active/account_balance_wallet-2.svg\",\n            link: \"/users\",\n            spanDown: \"/assets/drawer/deactive/dashboard-24px.svg\",\n            spanDownActive: \"/assets/drawer/active/dashboard-24px.svg\",\n            childrenItems: [\n                {\n                    title: \"کاربران\",\n                    link: \"/users/users\",\n                },\n                {\n                    title: \"ادمین ها\",\n                    link: \"/users/admins\",\n                },\n                {\n                    title: \"ربات ها\",\n                    link: \"/users/robots\",\n                },\n            ],\n        },\n        {\n            elementNo: 2,\n            title: \"سفارش های باز\",\n            icon: \"/assets/drawer/deactive/account_balance_wallet-1.svg\",\n            activeIcon: \"/assets/drawer/active/account_balance_wallet-1.svg\",\n            link: \"/orders\",\n            spanDown: \"/assets/drawer/deactive/dashboard-24px.svg\",\n            spanDownActive: \"/assets/drawer/active/dashboard-24px.svg\",\n            childrenItems: [],\n        },\n        {\n            elementNo: 3,\n            title: \"حسابداری\",\n            icon: \"/assets/drawer/deactive/account_balance_wallet-24px.svg\",\n            activeIcon: \"/assets/drawer/active/account_balance_wallet-24px.svg\",\n            link: \"/accountant\",\n            spanDown: \"/assets/drawer/deactive/dashboard-24px.svg\",\n            spanDownActive: \"/assets/drawer/active/dashboard-24px.svg\",\n            childrenItems: [\n                {\n                    title: \"تایید برداشت ریال\",\n                    link: \"/accountant/rial\",\n                },\n                {\n                    title: \"تایید برداشت ارز\",\n                    link: \"/accountant/crypto\",\n                },\n                {\n                    title: \"تاریخچه تراکنش‌ها\",\n                    link: \"/accountant/history\",\n                },\n            ],\n        },\n        {\n            elementNo: 4,\n            title: \"تاریخچه\",\n            icon: \"/assets/drawer/deactive/history_edu-24px.svg\",\n            activeIcon: \"/assets/drawer/active/history_edu-24px.svg\",\n            link: \"/history\",\n            spanDown: \"/assets/drawer/deactive/dashboard-24px.svg\",\n            spanDownActive: \"/assets/drawer/active/dashboard-24px.svg\",\n            childrenItems: [\n                {\n                    title: 'تاریخچه سفارش‌ها',\n                    link: '/history/orders'\n                },\n                {\n                    title: 'تاریخچه معاملات',\n                    link: '/history/trades'\n                },\n                {\n                    title: 'تاریخچه واریزها',\n                    link: '/history/deposits'\n                },\n                {\n                    title: 'تاریخچه برداشت‌ها',\n                    link: '/history/withdraws'\n                },\n            ]\n        },\n        {\n            elementNo: 5,\n            title: \"گزارشات\",\n            icon: \"/assets/drawer/deactive/history_edu-24px.svg\",\n            activeIcon: \"/assets/drawer/active/history_edu-24px.svg\",\n            link: \"/reports\",\n            spanDown: \"/assets/drawer/deactive/dashboard-24px.svg\",\n            spanDownActive: \"/assets/drawer/active/dashboard-24px.svg\",\n            childrenItems: [\n                {\n                    title: 'کاربران',\n                    link: '/reports/users'\n                },\n                {\n                    title: 'سفارش ها',\n                    link: '/reports/orders'\n                },\n                {\n                    title: 'معاملات',\n                    link: '/reports/trades'\n                },\n                // {\n                //     title: 'تاریخچه برداشت‌ها',\n                //     link: '/history/withdraws'\n                // },\n            ]\n        },\n        // {\n        //     elementNo: 5,\n        //     title:\"بازارها\",\n        //     icon:\"/assets/drawer/deactive/toll-24px.svg\",\n        //     activeIcon:\"/assets/drawer/active/toll-24px.svg\",\n        //     link:\"/toll\",\n        //     spanDown:\"/assets/drawer/deactive/dashboard-24px.svg\",\n        //     spanDownActive:\"/assets/drawer/active/dashboard-24px.svg\",\n        //     childrenItems: [],\n        // },\n        {\n            elementNo: 6,\n            title: \"مدیریت صفحات\",\n            icon: \"/assets/drawer/deactive/history_edu-24px.svg\",\n            activeIcon: \"/assets/drawer/active/history_edu-24px.svg\",\n            link: \"/managemant\",\n            spanDown: \"/assets/drawer/deactive/dashboard-24px.svg\",\n            spanDownActive: \"/assets/drawer/active/dashboard-24px.svg\",\n            childrenItems: [\n                {\n                    title: 'مدیریت صفحه قوانین و مقررات',\n                    link: '/managemant/policies'\n                },\n                {\n                    title: 'مدیریت صفحه راهنما',\n                    link: '/managemant/help'\n                },\n                {\n                    title: 'مدیریت صفحه درباره ما',\n                    link: '/managemant/aboutUs'\n                }\n            ]\n        },\n        {\n            title: \"مدیریت کارمزد\",\n            icon: \"/assets/drawer/deactive/monetization_on-24px.svg\",\n            activeIcon: \"/assets/drawer/active/monetization_on-24px.svg\",\n            link: \"/commissions\",\n            spanDown: \"/assets/drawer/deactive/dashboard-24px.svg\",\n            spanDownActive: \"/assets/drawer/active/dashboard-24px.svg\",\n            childrenItems: [],\n        },\n        {\n            elementNo: 7,\n            title: \"پیام ها\",\n            icon: \"/assets/drawer/deactive/email-24px (1).svg\",\n            activeIcon: \"/assets/drawer/active/email-24px (1).svg\",\n            link: \"/messages\",\n            spanDown: \"/assets/drawer/deactive/dashboard-24px.svg\",\n            spanDownActive: \"/assets/drawer/active/dashboard-24px.svg\",\n            childrenItems: [],\n        },\n        {\n            elementNo: 8,\n            title: \"پشتیبانی\",\n            icon: \"/assets/drawer/deactive/support_agent-24px.svg\",\n            activeIcon: \"/assets/drawer/active/support_agent-24px.svg\",\n            link: \"/tickets\",\n            spanDown: \"/assets/drawer/deactive/dashboard-24px.svg\",\n            spanDownActive: \"/assets/drawer/active/dashboard-24px.svg\",\n            childrenItems: [],\n        },\n        {\n            elementNo: 9,\n            title: \"مدیریت سطوح\",\n            icon: \"/assets/drawer/deactive/emoji_events-24px.svg\",\n            activeIcon: \"/assets/drawer/active/emoji_events-24px.svg\",\n            link: \"/levelmanage\",\n            spanDown: \"/assets/drawer/deactive/dashboard-24px.svg\",\n            spanDownActive: \"/assets/drawer/active/dashboard-24px.svg\",\n            childrenItems: [],\n        },\n        {\n            elementNo: 10,\n            title: \"مدیریت امتیازها\",\n            icon: \"/assets/drawer/deactive/grade-24px.svg\",\n            activeIcon: \"/assets/drawer/active/grade-24px.svg\",\n            link: \"/points\",\n            spanDown: \"/assets/drawer/deactive/dashboard-24px.svg\",\n            spanDownActive: \"/assets/drawer/active/dashboard-24px.svg\",\n            childrenItems: [],\n        },\n        {\n            elementNo: 11,\n            title: \"تنظیمات بازار\",\n            icon: \"/assets/drawer/deactive/settings-deactivepx.svg\",\n            activeIcon: \"/assets/drawer/active/settings-24px.svg\",\n            link: \"/marketsetting\",\n            spanDown: \"/assets/drawer/deactive/dashboard-24px.svg\",\n            spanDownActive: \"/assets/drawer/active/dashboard-24px.svg\",\n            childrenItems: [],\n        },\n        {\n            elementNo: 12,\n            title: \"مدیریت نقش‌ها\",\n            icon: \"/assets/drawer/deactive/settings-deactivepx.svg\",\n            activeIcon: \"/assets/drawer/active/settings-24px.svg\",\n            link: \"/rolemanage\",\n            spanDown: \"/assets/drawer/deactive/dashboard-24px.svg\",\n            spanDownActive: \"/assets/drawer/active/dashboard-24px.svg\",\n            childrenItems: [],\n        },\n\n    ]\n\n    const [childsActive, setChildsActive] = React.useState(null);\n\n    const history = useHistory();\n    const location = useLocation()\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebarBrand\"></div>\n            <ul className=\"sidebarList\">\n                {SideBarData.map((value, key) => {\n                    return (\n                        <>\n                            <li\n                                key={key}\n                                className=\"row\"\n                                id={location.pathname.startsWith(value.link) ? \"active\" : \"\"}\n                                onClick={() => {\n                                    if (value.childrenItems.length) {\n                                        console.log(\"thats true\", key)\n                                        setChildsActive(value.elementNo)\n                                    } else {\n                                        setChildsActive(null)\n                                        history.push(value.link)\n                                    }\n                                }}\n                            >\n                                {location.pathname.startsWith(value.link) ?\n                                    (<img id=\"icon\" src={value.activeIcon} />) :\n                                    (<img id=\"icon\" src={value.icon} />)\n                                }\n                                <div id=\"title\">{value.title}</div>\n                                {location.pathname.startsWith(value.link) ?\n                                    (<img id=\"spanDown\" style={{ transform: value.childrenItems.length ? \"rotate(-90deg)\" : \"\" }} src={value.spanDownActive} />) :\n                                    (<img id=\"spanDown\" src={value.spanDown} />)\n                                }\n                            </li>\n                            {\n                                childsActive === key && value.childrenItems.map((item, index) => {\n                                    return (\n                                        <li\n                                            key={`${key}${index}`}\n                                            className=\"row\"\n                                            id={location.pathname.startsWith(item.link) ? \"active\" : \"\"}\n                                            onClick={() => {\n                                                history.push(item.link)\n                                            }}\n                                        >\n                                            <div id=\"title\" className=\"me-5 pe-4\">{item.title}</div>\n                                        </li>\n                                    )\n                                })\n                            }\n                        </>\n                    )\n                })}\n            </ul>\n        </div>\n    );\n}\n\nexport default SideBar;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/layout/topBar/index.js",["839","840","841","842"],"import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport { removeToken } from '../../../utils/utils';\nimport { UserContext } from '../../../context/provider';\n\n\nconst StyledMenu = withStyles({\n    paper: {\n        border: '1px solid #d3d4d5',\n        height: '4vw'\n    },\n})((props) => (\n    <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n        }}\n        {...props}\n    />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n    root: {\n        '&:focus': {\n            backgroundColor: theme.palette.primary.main,\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n                color: theme.palette.common.white,\n            },\n        },\n        height: '30px',\n        direction: 'rtl',\n        textAlign: 'inherit'\n        },\n}))(MenuItem);\nconst TopBar = () => {\n\n    const contextData = React.useContext(UserContext);\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    return (\n        <div className=\"topbar container-fluid justify-content-end d-flex align-items-center\">\n            <div className=\"topbarProfile\">\n                <img src=\"/assets/drawer/profilepicture.svg\" id=\"imageProfile\" />\n                <p id=\"nameProfile\">وحید حسینی</p>\n                <div\n                    aria-controls=\"customized-menu\"\n                    aria-haspopup=\"true\"\n                    variant=\"contained\"\n                    onClick={handleClick}\n                >\n                    <img\n                        src=\"/assets/drawer/deactive/dashboard-24px.svg\"\n                        id=\"spanProfile\"\n                    />\n                </div>\n                <StyledMenu\n                    id=\"customized-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <StyledMenuItem>\n                        <ListItemIcon>\n                            <SendIcon fontSize=\"small\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"پروفایل\" />\n                    </StyledMenuItem>\n                    <StyledMenuItem>\n                        <ListItemIcon>\n                            <DraftsIcon fontSize=\"small\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"خروج از حساب\" onClick={ () => {\n                            removeToken()\n                            contextData.setIsLoggedIn(false)\n                        }} />\n                    </StyledMenuItem>\n                </StyledMenu>\n            </div>\n        </div>\n    );\n}\n\nexport default TopBar;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/orders/cardSection/index.js",["843","844","845","846","847"],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/points/cardSection/index.js",["848","849","850","851","852"],["853","854"],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/levelManage/cardSection/index.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/cardSection/index.js",["855","856","857","858","859"],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/cardSection/index.js",["860","861","862","863","864"],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/messages/filters.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/tickets/filters.js",["865"],"import React, { useState } from 'react'\nimport { TextField, MenuItem, Grid, \n   IconButton, InputAdornment, Select, withStyles, InputBase\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\n\nfunction Filters(props) {\n\n    const [tradeType, setTradeType] = useState('');\n    const [originWallet, setOriginWallet] = useState('');\n    const [nationalCode, setNationalCode] = React.useState('')\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n\n            },\n\n        },\n\n    }))(InputBase);\n    const handleSelectChange = (e) => {\n        props.setParams( state => ({...state, [e.target.name]: e.target.value}) );\n    }\n\n    return (\n        <Grid className=\"mb-3 ps-4\" justify=\"flex-end\" container spacing={1}>\n            <Grid item xs={2}>\n                <label className=\"text-white ms-2 mt-2\">اولویت</label>\n                <Select name=\"priority\" value={originWallet} displayEmpty onChange={ e => {handleSelectChange(e); setOriginWallet(e.target.value)}} select size=\"small\">\n                    <MenuItem value=\"\">همه اولویت‌ها </MenuItem>\n                    <MenuItem value=\"high\">بالا</MenuItem>\n                    <MenuItem value=\"medium\">متوسط</MenuItem>\n                    <MenuItem value=\"low\">پایین</MenuItem>\n                </Select>\n            </Grid>\n            <Grid item xs={2}>\n                <label className=\"text-white ms-2 mt-2\">وضعیت</label>\n                <Select name=\"state\" value={tradeType} displayEmpty onChange={ e => {handleSelectChange(e); setTradeType(e.target.value)}} select size=\"small\">\n                    <MenuItem value=\"\">همه وضعیت‌ها</MenuItem>\n                    <MenuItem value=\"open\">باز</MenuItem>\n                    <MenuItem value=\"close\">بسته</MenuItem>\n                    <MenuItem value=\"pend\">در انتظار</MenuItem>\n                </Select>    \n            </Grid>\n            <Grid item className=\"mt-2\" >\n                <TextField \n                    value={nationalCode} \n                    type=\"search\" \n                    onChange={ e => setNationalCode(e.target.value)} \n                    name=\"national_code\" \n                    size=\"small\" \n                    placeholder=\"جست و جو\"\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment>\n                            <IconButton onClick={ () => props.setParams( state => ({...state, national_code: nationalCode}))}>\n                                <SearchIcon />\n                            </IconButton>\n                            </InputAdornment>\n                        )\n                        }}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Filters\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/orders/filters.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/points/filters.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/tradeHistory/filters.js",["866","867","868"],"import React, { useState } from 'react'\n\nimport {\n\n    TextField, MenuItem, Grid,\n\n    IconButton, InputAdornment, Select, withStyles\n\n} from \"@material-ui/core\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport InputBase from '@material-ui/core/InputBase';\n\nimport '../layout/style.css'\n\nimport { useFetchApi } from '../../../utils/hooks';\n\nimport { ACCOUNTING_APP, USERS_WALLET } from '../../../utils/constants';\n\nimport { Nav, Tab } from 'react-bootstrap';\n\nimport ConfigApi from '../../../utils/config-api';\n\nimport { UserContext } from '../../../context/provider';\n\n\n\nfunction Filters(props) {\n\n    const tradeContextData = React.useContext(UserContext);\n\n\n    const [tradeType, setTradeType] = useState('');\n\n    const [marketType, setMarketType] = useState('');\n\n    const [cryptoWallet, setCryptoWallet] = useState('');\n\n    const [nationalCode, setNationalCode] = useState('')\n\n    const [group, setGroup] = useState('');\n\n\n    const handleSelectChange = (e) => {\n\n        props.setParams(state => ({ ...state, [e.target.name]: e.target.value }));\n\n    }\n\n    const handleSwitchChange = (e) => {\n\n        props.setParams(state => ({ ...state, origin_wallet: e }));\n\n    }\n\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n\n            },\n\n        },\n\n    }))(InputBase);\n\n    //   const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    //   React.useEffect( () => {\n    //       doFetch(\"GET\", ACCOUNTING_APP, USERS_WALLET(7) )\n\n    //   }, [])\n    //   console.log(\"wallet\",data)\n    return (\n        <Grid className=\"mb-3 ps-2 mt-2 position-relative\" justify=\"flex-end\" container spacing={1}>\n\n            <ConfigApi />\n\n            <Grid item className=\"d-flex \">\n\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"rial\">\n\n                    <Nav variant=\"pills\" className=\"top-50 end-0\">\n\n                        <Nav.Item>\n\n                            <Nav.Link eventKey=\"rial\" onClick={e => { handleSwitchChange(\"irr\") }}>تومان (IR)</Nav.Link>\n\n                        </Nav.Item>\n\n                        <Nav.Item>\n\n                            <Nav.Link eventKey=\"coin\" onClick={e => { handleSwitchChange(\"usdt\") }}>تتر (USDT)</Nav.Link>\n\n                        </Nav.Item>\n\n                    </Nav>\n\n                </Tab.Container>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>نوع ارز</label>\n\n                <Select name=\"dest_wallet\" value={cryptoWallet} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setCryptoWallet(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه ارزها</MenuItem>\n\n                    {tradeContextData.configData?.map(item => <MenuItem value={item.Value?.symbol?.toLowerCase()}>{item.Value?.title}</MenuItem>)}\n\n                </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>سمت سفارش</label>\n\n                <Select name=\"type\" value={marketType} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setMarketType(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه سفارش‌ها</MenuItem>\n\n                    <MenuItem value=\"buy\">خرید</MenuItem>\n\n                    <MenuItem value=\"sell\">فروش</MenuItem>\n\n                </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>نوع سفارش</label>\n\n                <Select name=\"match_type\" value={tradeType} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setTradeType(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه سفارش‌ها</MenuItem>\n\n                    <MenuItem value=\"market\">سریع</MenuItem>\n\n                    <MenuItem value=\"limit\">محدود</MenuItem>\n\n                </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n                \n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}> دسته‌بندی بر اساس</label>\n                \n                <Select name=\"group\" value={group} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setGroup(e.target.value) }} select size=\"small\">\n                    \n                    <MenuItem value=\"\">همه</MenuItem>\n                    \n                    <MenuItem value=\"bot\">بات</MenuItem>\n                    \n                    <MenuItem value=\"\">کاربر</MenuItem>\n                    \n                </Select> \n                \n            </Grid>\n\n            <Grid item className=\"\" >\n\n                <TextField\n\n                    value={nationalCode}\n\n                    type=\"search\"\n\n                    onChange={e => setNationalCode(e.target.value)}\n\n                    name=\"search\"\n\n                    size=\"small\"\n\n                    placeholder=\" جست و جو نام یا کد ملی\"\n                    \n                    InputProps={{\n\n                        endAdornment: (\n\n                            <InputAdornment>\n\n                                <IconButton onClick={() => props.setParams(state => ({ ...state, search: nationalCode }))}>\n\n                                    <SearchIcon />\n\n                                </IconButton>\n\n                            </InputAdornment>\n\n                        )\n\n                    }}\n\n                />\n\n            </Grid>\n\n        </Grid>\n\n    )\n\n}\n\nexport default Filters\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/depositHistory/filters.js",["869","870","871","872"],"import React, { useState } from 'react'\n\nimport {\n\n    TextField, MenuItem, Grid,\n\n    IconButton, InputAdornment, Select, withStyles\n\n} from \"@material-ui/core\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport InputBase from '@material-ui/core/InputBase';\n\nimport '../layout/style.css';\n\nimport { ConfigProvider } from 'antd';\n\nimport { DatePicker as DatePickerJalali } from \"antd-jalali\";\n\nimport fa_IR from \"antd/lib/locale/fa_IR\";\n\nimport 'antd/dist/antd.css';\n\nimport { UserContext } from '../../../context/provider';\n\nimport ConfigApi from '../../../utils/config-api';\n\nfunction Filters(props) {\n\n    const depositContextData = React.useContext(UserContext);\n\n    const [tradeType, setTradeType] = useState('');\n\n    const [cryptoWallet, setCryptoWallet] = useState('');\n\n    const [nationalCode, setNationalCode] = useState('')\n\n    const [dateString, setDateString] = useState();\n\n    const [group, setGroup] = useState('');\n\n    const dateFormat = 'YYYY-MM-DD';\n\n    //date picker onchange func\n\n    function onChange(date, dateString) {\n\n        if (date) {\n\n            props.setParams(state => ({ ...state, date__gt: `${date[0].$y}-${date[0].$M + 1}-${date[0].$D}`, date__lt: `${date[1].$y}-${date[1].$M + 1}-${date[1].$D}` }))\n\n        } else if (date === null) {\n\n            props.setParams(state => ({ ...state, date__gt: '', date__lt: '', }))\n        }\n\n    }\n\n    const handleSelectChange = (e) => {\n\n        props.setParams(state => ({ ...state, [e.target.name]: e.target.value }));\n\n    }\n\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n            },\n\n        },\n\n    }))(InputBase);\n\n    //   const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    //   React.useEffect( () => {\n    //       doFetch(\"GET\", ACCOUNTING_APP, USERS_WALLET(7) )\n\n    //   }, [])\n    //   console.log(\"wallet\",data)\n    return (\n        <Grid className=\"mb-3 ps-2 mt-2 position-relative\" justify=\"flex-end\" container spacing={1}>\n\n            <ConfigApi />\n\n            {depositContextData.depositFilter === \"coin\" ?\n\n                <Grid item className=\"d-flex\">\n\n                    <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>نوع ارز</label>\n\n                    <Select name=\"crypto_type\" value={cryptoWallet} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setCryptoWallet(e.target.value) }} select size=\"small\">\n\n                        <MenuItem value=\"\">همه ارزها</MenuItem>\n\n                        {depositContextData.configData?.map(item => <MenuItem value={item.Value?.symbol?.toLowerCase()}>{item.Value?.title}</MenuItem>)}\n\n                    </Select>\n\n                </Grid>\n                :\n                null\n            }\n\n            {/* <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>سمت سفارش</label>\n\n                <Select name=\"trade_type\" value={tradeType} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setTradeType(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه سفارش‌ها</MenuItem>\n\n                    <MenuItem value=\"market\">خرید</MenuItem>\n\n                    <MenuItem value=\"limit\">فروش</MenuItem>\n\n                </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>نوع سفارش</label>\n\n                <Select name=\"trade_type\" value={tradeType} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setTradeType(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه سفارش‌ها</MenuItem>\n\n                    <MenuItem value=\"market\">سریع</MenuItem>\n\n                    <MenuItem value=\"limit\">محدود</MenuItem>\n\n                </Select>\n\n            </Grid> */}\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}> دسته‌بندی بر اساس</label>\n\n                <Select name=\"group\" value={group} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setGroup(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه</MenuItem>\n\n                    <MenuItem value=\"bot\">بات</MenuItem>\n\n                    <MenuItem value=\"\">کاربر</MenuItem>\n\n                </Select>\n\n            </Grid>\n\n            <Grid xs={3} item className=\"\" >\n\n                <TextField\n\n                    value={nationalCode}\n\n                    type=\"search\"\n\n                    onChange={e => setNationalCode(e.target.value)}\n\n                    name=\"search\"\n\n                    size=\"small\"\n\n                    placeholder=\" جست و جو نام یا کد ملی\"\n\n                    InputProps={{\n\n                        endAdornment: (\n\n                            <InputAdornment>\n\n                                <IconButton onClick={() => props.setParams(state => ({ ...state, search: nationalCode }))}>\n\n                                    <SearchIcon />\n\n                                </IconButton>\n\n                            </InputAdornment>\n\n                        )\n\n                    }}\n\n                />\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>تاریخ</label>\n\n                <ConfigProvider locale={fa_IR} direction=\"rtl\">\n\n                    <DatePickerJalali.RangePicker onChange={onChange} className=\"form-control h-75 my-auto rounded-1\" format={dateFormat} dropdownClassName=\"datePickerDropDown\" popupStyle={{ backgroundColor: \"red\" }} />\n\n                </ConfigProvider>\n\n            </Grid>\n\n        </Grid>\n\n    )\n}\n\nexport default Filters\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/historyAccountant/filters.js",["873","874","875","876"],"import React, { useState } from 'react'\n\nimport {\n    TextField, MenuItem, Grid,\n\n    IconButton, InputAdornment, Select , withStyles\n\n} from \"@material-ui/core\";\n\nimport InputBase from '@material-ui/core/InputBase';\n\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport '../../layout/style.css';\n\n\n\n\nfunction Filters(props) {\n\n    const [originWallet, setOriginWallet] = useState('');\n\n    const [statusInfo, setstatusInfo] = useState('');\n\n\n\n    const handleSelectChange = (e) => {\n\n        props.setParams(state => ({ ...state, [e.target.name]: e.target.value }));\n\n    }\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n            },\n\n        },\n\n    }))(InputBase);\n\n\n    return (\n\n        <Grid className=\"mb-3 ps-2 position-relative\" justify=\"flex-end\" container spacing={1}>\n\n            <Grid item className=\"d-flex\">\n\n            <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>وضعیت سفارش</label>\n\n            <Select name=\"status\" value={statusInfo} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setstatusInfo(e.target.value) }} select size=\"small\">\n\n                <MenuItem value=\"\">همه وضعیت ها</MenuItem>\n\n                <MenuItem value=\"in_progress\">در حال بررسی</MenuItem>\n\n                <MenuItem value=\"success\">تایید شده</MenuItem>\n\n                <MenuItem value=\"failed\">لغو شده</MenuItem>\n\n            </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>نوع عملیات</label>\n\n                <Select name=\"order_type\" value={originWallet} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setOriginWallet(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه عملیات‌ها</MenuItem>\n\n                    <MenuItem value=\"withdraw\">برداشت</MenuItem>\n\n                    <MenuItem value=\"deposit\">واریز رمز ارز</MenuItem>\n\n                    <MenuItem value=\"payment_gateway\">واریز تومانی</MenuItem>\n\n                    <MenuItem value=\"trade\">معاملات</MenuItem>\n\n                </Select>\n\n            </Grid>\n\n        </Grid>\n\n    )\n\n}\n\n\n\nexport default Filters\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/whithdrawHistory/filters.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/orderHistory/filters.js",["877","878","879"],"import React, { useState } from 'react'\n\nimport {\n    \n    TextField, MenuItem, Grid,\n    \n    IconButton, InputAdornment, Select, withStyles\n    \n} from \"@material-ui/core\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport InputBase from '@material-ui/core/InputBase';\n\nimport '../layout/style.css'\n\nimport { useFetchApi } from '../../../utils/hooks';\n\nimport { ACCOUNTING_APP, USERS_WALLET } from '../../../utils/constants';\n\nimport { Nav, Tab } from 'react-bootstrap';\n\nimport { UserContext } from '../../../context/provider';\n\nimport ConfigApi from '../../../utils/config-api';\n\n\nfunction Filters(props) {\n\n    const orderContextData = React.useContext(UserContext);\n\n    const [type, setType] = useState('');\n\n    const [tradeType, setTradeType] = useState('');\n\n    const [cryptoWallet, setCryptoWallet] = useState('');\n\n    const [nationalCode, setNationalCode] = useState('')\n\n    const [group, setGroup] = useState('');\n\n\n    const handleSelectChange = (e) => {\n\n        props.setParams(state => ({ ...state, [e.target.name]: e.target.value }));\n\n    }\n\n    const handleSwitchChange = (e) => {\n\n        props.setParams(state => ({ ...state, origin_wallet: e }));\n\n    }\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n\n            },\n\n        },\n\n    }))(InputBase);\n\n    //   const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    //   React.useEffect( () => {\n    //       doFetch(\"GET\", ACCOUNTING_APP, USERS_WALLET(7) )\n\n    //   }, [])\n    //   console.log(\"wallet\",data)\n    return (\n        <Grid className=\"mb-3 ps-2 mt-2 position-relative\" justify=\"flex-end\" container spacing={1}>\n\n            <ConfigApi />\n\n            <Grid item className=\"d-flex\">\n\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"rial\">\n\n                    <Nav variant=\"pills\" className=\"top-50 end-0\">\n\n                        <Nav.Item>\n\n                            <Nav.Link role=\"button\" eventKey=\"rial\" onClick={e => { handleSwitchChange(\"irr\") }}>تومان(IR)</Nav.Link>\n\n                        </Nav.Item>\n\n                        <Nav.Item>\n\n                            <Nav.Link role=\"button\" eventKey=\"coin\" onClick={e => { handleSwitchChange(\"usdt\") }}>تتر(USDT)</Nav.Link>\n\n                        </Nav.Item>\n\n                    </Nav>\n\n                </Tab.Container>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>نوع ارز</label>\n\n                <Select name=\"dest_wallet\" value={cryptoWallet} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setCryptoWallet(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه ارزها</MenuItem>\n\n                    {orderContextData.configData?.map(item => <MenuItem value={item.Value?.symbol?.toLowerCase()}>{item.Value?.title}</MenuItem>)}\n\n                </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>سمت سفارش</label>\n\n                <Select name=\"type\" value={type} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setType(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه سفارش‌ها</MenuItem>\n\n                    <MenuItem value=\"buy\">خرید</MenuItem>\n\n                    <MenuItem value=\"sell\">فروش</MenuItem>\n\n                </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>نوع سفارش</label>\n\n                <Select name=\"trade_type\" value={tradeType} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setTradeType(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه سفارش‌ها</MenuItem>\n\n                    <MenuItem value=\"market\">سریع</MenuItem>\n\n                    <MenuItem value=\"limit\">محدود</MenuItem>\n\n                </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}> دسته‌بندی بر اساس</label>\n\n                <Select name=\"group\" value={group} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setGroup(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه</MenuItem>\n\n                    <MenuItem value=\"bot\">بات</MenuItem>\n\n                    <MenuItem value=\"\">کاربر</MenuItem>\n\n                </Select> \n\n            </Grid>\n\n            <Grid item className=\"\" >\n\n                <TextField\n\n                    value={nationalCode}\n\n                    type=\"search\"\n\n                    onChange={e => setNationalCode(e.target.value)}\n\n                    name=\"search\"\n\n                    size=\"small\"\n\n                    placeholder=\" جست و جو نام یا کد ملی\"\n                    \n                    InputProps={{\n\n                        endAdornment: (\n\n                            <InputAdornment>\n\n                                <IconButton onClick={() => props.setParams(state => ({ ...state, search: nationalCode }))}>\n\n                                    <SearchIcon />\n\n                                </IconButton>\n\n                            </InputAdornment>\n\n                        )\n\n                    }}\n\n                />\n\n            </Grid>\n\n        </Grid>\n\n    )\n}\n\nexport default Filters\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/rialAccountant/filters.js",["880","881","882","883"],"import React, { useState } from 'react'\n\nimport {\n    TextField, MenuItem, Grid,\n\n    IconButton, InputAdornment, Select , withStyles\n\n} from \"@material-ui/core\";\n\nimport InputBase from '@material-ui/core/InputBase';\n\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport '../../layout/style.css';\n\n\n\n\nfunction Filters(props) {\n\n    const [statusInfo, setstatusInfo] = useState('');\n\n\n\n    const handleSelectChange = (e) => {\n\n        props.setParams(state => ({ ...state, [e.target.name]: e.target.value }));\n\n    }\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n            },\n\n        },\n\n    }))(InputBase);\n\n\n    return (\n\n        <Grid className=\"mb-3 ps-2 position-relative\" justify=\"flex-end\" container spacing={1}>\n\n            <Grid item className=\"d-flex\">\n\n            <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>وضعیت سفارش</label>\n\n            <Select name=\"status__in\" value={statusInfo} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setstatusInfo(e.target.value) }} select size=\"small\">\n\n                <MenuItem value=\"\">همه وضعیت ها</MenuItem>\n\n                <MenuItem value=\"in_progress\">در حال بررسی</MenuItem>\n\n                <MenuItem value=\"success\">تایید شده</MenuItem>\n\n                <MenuItem value=\"rejected\">تایید نشده</MenuItem>\n\n            </Select>\n\n            </Grid>\n\n        </Grid>\n\n    )\n\n}\n\n\n\nexport default Filters\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/accountant/cryptoAccountant/filters.js",["884","885","886","887"],"import React, { useContext, useState } from 'react'\n\nimport {\n    TextField, MenuItem, Grid,\n\n    IconButton, InputAdornment, Select , withStyles\n\n} from \"@material-ui/core\";\n\nimport InputBase from '@material-ui/core/InputBase';\n\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport '../../layout/style.css';\nimport { UserContext } from '../../../context/provider';\nimport ConfigApi from '../../../utils/config-api';\n\n\n\n\nfunction Filters(props) {\n\n    const [cryptoWallet, setCryptoWallet] = useState('');\n\n    const [statusInfo, setstatusInfo] = useState('');\n\n    const cryptoContext = useContext(UserContext);\n\n\n    const handleSelectChange = (e) => {\n\n        props.setParams(state => ({ ...state, [e.target.name]: e.target.value }));\n\n    }\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n            },\n\n        },\n\n    }))(InputBase);\n\n\n    return (\n\n        <Grid className=\"mb-3 ps-2 position-relative\" justify=\"flex-end\" container spacing={1}>\n\n            <ConfigApi />\n\n            <Grid item className=\"d-flex\">\n\n            <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>وضعیت سفارش</label>\n\n            <Select name=\"status__in\" value={statusInfo} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setstatusInfo(e.target.value) }} select size=\"small\">\n\n                <MenuItem value=\"\">همه وضعیت ها</MenuItem>\n\n                <MenuItem value=\"in_progress\">در حال بررسی</MenuItem>\n\n                <MenuItem value=\"success\">تایید شده</MenuItem>\n\n                <MenuItem value=\"rejected\">تایید نشده</MenuItem>\n\n            </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>نوع ارز</label>\n\n                <Select name=\"crypto_type\" value={cryptoWallet} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setCryptoWallet(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه ارزها</MenuItem>\n\n                    {cryptoContext.configData?.map(item => <MenuItem value={item.Value?.symbol?.toLowerCase()}>{item.Value?.title}</MenuItem>)}\n\n                </Select>\n\n            </Grid>\n\n        </Grid>\n\n    )\n\n}\n\n\n\nexport default Filters\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/popUp/index.js",["888","889"],"import {React , useContext, useEffect} from 'react';\nimport { Button } from 'react-bootstrap';\nimport Modal from \"react-bootstrap/Modal\";\nimport { UserContext } from '../../context/provider';\nimport './alert.scss'\n// import'../layout/styles.scss'\nconst PopUp = (props) => {\n  const contextData = useContext(UserContext);\n\n    // useEffect(() => {\n    //   window.addEventListener('beforeunload', alertUser)\n    // //   window.addEventListener('unload', handleEndConcert)\n    //   return () => {\n    //     window.removeEventListener('beforeunload', alertUser)\n    //     // window.removeEventListener('unload', handleEndConcert)\n    //     // handleEndConcert()\n    //   }\n    // }, [])\n    // const alertUser = e => {\n    //   e.preventDefault()\n    //   e.returnValue = ''\n    // }\n    // const handleEndConcert = async () => {\n    //   await fetch({\n    //     url: endConcert(concert.id),\n    //     method: 'PUT'\n    //   })\n    // }\n    return (\n      <Modal show={contextData.showAlert} onHide={() => contextData.setShowAlert(false)} >\n        <Modal.Header className=\"popUpHeader\" closeButton closeLabel=\"\">\n          <Modal.Title className=\"small\">\n          <div className=\" d-flex align-items-center w-auto mx-auto flex-row-reverse\">\n                    <img src=\"/assets/drawer/Polygon.svg\" />\n                    <p className=\"me-1 m-0 text-white\"> {props.popUpHead} </p>\n                </div>\n            </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"popUpBody\">{props.popUpBody}</Modal.Body>\n        <Modal.Footer className=\"popUpFooter\">\n          <Button variant=\"secondary\" onClick={props.onCancel} className=\"popUpBody popUpButton\">\n            {props.onCancelText}\n          </Button>\n          <Button variant=\"primary\" onClick={props.onAccept} className=\"popUpBody popUpButton\">\n            {props.onAcceptText}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n\n  export default PopUp;","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/depositHistory/coinDeposisHistoryDatagrid.js",["890","891","892","893","894","895","896","897","898"],"import React from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Button } from '@material-ui/core';\n\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../../utils/hooks\";\n\nimport { ACCOUNTING_APP, ADMIN_BASE_URL, USERS_TRANSACTION_HISTORY, USERS_DEPOSIT } from '../../../utils/constants';\n\nimport { timeToStr, UrlQuery } from '../../../utils/utils';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Filters from './filters';\nimport { numDiscriminant } from '../../../utils/discriminant';\n\n\n\n\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\n\n\nfunction CustomPagination() {\n\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n\n\n  return (\n\n    <Pagination\n\n      className={classes.root}\n\n      shape=\"rounded\"\n\n      color=\"primary\"\n\n      // variant=\"contained\"\n\n      count={state.pagination.pageCount}\n\n      page={state.pagination.page + 1}\n\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n\n    />\n\n  );\n\n}\n\n\n\nfunction CoinDepositsHistoryDatagrid(props) {\n\n  const history = useHistory()\n\n\n  const columns = [\n\n    {\n\n      field: 'tracking_code',\n\n      headerName: 'شناسه سفارش',\n\n      flex: 0.5,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.tracking_code.slice(-9)}...`\n\n    },\n\n    {\n\n      field: 'crypto_type',\n\n      headerName: 'نوع ارز',\n\n      flex: 0.5,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.wallet?.c_type}`\n\n    },\n\n    // {\n\n    //   field: 'type',\n\n    //   headerName: 'نوع واریز',\n\n    //   flex: 0.5,\n\n    //   sortable: false,\n\n    //   headerClassName: 'grid-header',\n\n    //   headerAlign: 'center',\n\n    //   align: 'center',\n\n    //   renderCell: (values) => {\n\n    //     let className = ''\n\n    //     let text = ''\n\n    //     switch (values.row?.type) {\n\n    //       case \"sell\":\n\n    //         className = \"text-danger\"\n\n    //         text = \"فروش\"\n\n    //         break;\n\n    //       case \"buy\":\n\n    //         className = \"text-success\"\n\n    //         text = \"خرید\"\n\n    //         break;\n\n    //       case \"increase\":\n\n    //         className = \"text-success\"\n\n    //         text = \"واریز\"\n\n    //         break;\n\n    //       case \"decrease\":\n\n    //         className = \"text-danger\"\n\n    //         text = \"برداشت\"\n\n    //         break;\n\n    //     }\n\n    //     return <div className=\"d-flex\">\n\n    //       <span className={className}>{text}</span>\n\n    //     </div>\n\n    //   }\n\n    // },\n\n    {\n\n      field: 'user_name',\n\n      headerName: 'نام کاربر',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${values.row?.user[0]?.credentials.first_name} ${values.row?.user[0]?.credentials.last_name}`\n\n    },\n    {\n\n      field: 'national_code',\n\n      headerName: 'کد ملی',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${values.row?.user[0]?.credentials.national_code}`\n\n    },\n\n    {\n\n      field: 'quantity_with_fee',\n\n      headerName: 'مقدار واریز',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${numDiscriminant(values.row?.amount)}`\n\n\n\n    },\n\n    {\n\n      field: 'origin_address',\n\n      headerName: 'آدرس کیف پول مبدا',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${values.row?.wallet?.addresses}`\n\n\n    },\n\n    // {\n\n    //   field: 'status',\n\n    //   headerName: 'دریافتی',\n\n    //   // description: 'This column has a value getter and is not sortable.',\n\n    //   sortable: false,\n\n    //   align: 'center',\n\n    //   flex: 1,\n\n    //   headerClassName: 'grid-header',\n\n    //   headerAlign: 'center',\n\n    // },\n    {\n    \n      field: 'created_at',\n    \n      headerName: 'تاریخ',\n    \n      // description: 'This column has a value getter and is not sortable.',\n    \n      sortable: false,\n    \n      align: 'center',\n    \n      flex: 0.5,\n    \n      headerClassName: 'grid-header',\n    \n      headerAlign: 'center',\n    \n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n    \n    },\n\n    {\n\n      field: 'status',\n\n      headerName: 'وضعیت',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => {\n\n        let text = values.row?.status === \"success\" ? \"موفق\" : values.row?.status === \"in_progress\" ? \"درحال بررسی\" : \"ناموفق\"\n\n        let pic = values.row?.status === \"success\" ? \"/assets/drawer/check_circle-24px.svg\" : values.row?.status === \"in_progress\" ? '' : \"/assets/drawer/cancel-24px (1).svg\"\n\n        return <div className=\"d-flex justify-content-center w-100\">\n\n          {text}\n\n          <img src={pic} />\n\n        </div>\n\n      }\n\n    },\n\n    {\n\n      field: 'reference_link',\n\n      headerName: 'جزییات',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => values.value ? <Button variant=\"outlined\" size=\"small\"\n\n        smaller onClick={() => window.open(values.value, '_blank')}>جزییات</Button> : \"-\"\n\n    },\n\n  ];\n\n\n\n  const [params, setParams] = React.useState({ size: 10, page: 0 })\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n  const updateData = () => {\n\n    data?.results?.map((item, index) => {\n\n      let update = data?.users_info?.filter((itm, idx) => idx === index)\n\n      console.log(\"update\", update);\n\n      return item.user = update\n\n    })\n\n  }\n\n  React.useEffect(() => {\n\n    doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(USERS_DEPOSIT, params))\n\n  }, [params])\n\n  React.useEffect(() => {\n\n    updateData()\n\n  }, [data])\n\nconsole.log(\"data\",data)\n\n  return (\n\n    <div className=\"content\">\n\n      <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تاریخچه واریزها </p>\n\n        </div>\n\n\n      </div>\n        <Filters params={params} setParams={setParams} />\n\n      <div className=\"d-flex px-3\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n\n          <DataGrid\n\n            style={{ border: 0 }}\n\n            autoHeight\n\n            rows={data?.results ?? []}\n\n            loading={isLoading}\n\n            columns={columns}\n\n            getRowClassName={\n\n              params => 'grid-content'\n\n            }\n\n            headerHeight={50}\n\n            rowHeight={52}\n\n            isRowSelectable={false}\n\n            components={{\n\n              Pagination: CustomPagination\n\n            }}\n\n            pageSize={10}\n\n            rowCount={data?.results?.length}\n\n            paginationMode=\"server\"\n\n            onPageChange={(param) => doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(USERS_DEPOSIT, { ...params, page: param }))}\n\n            disableSelectionOnClick\n\n            disableColumnMenu\n\n          />\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default CoinDepositsHistoryDatagrid\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/depositHistory/rialDepositsHistoryDatagrid.js",["899","900","901","902","903","904","905","906","907","908"],"import React from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Button } from '@material-ui/core';\n\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../../utils/hooks\";\n\nimport { ACCOUNTING_APP, ADMIN_BASE_URL, USERS_TRANSACTION_HISTORY, USERS_PAYMENT } from '../../../utils/constants';\n\nimport { timeToStr, UrlQuery } from '../../../utils/utils';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Filters from './filters';\n\nimport { numDiscriminant } from '../../../utils/discriminant';\n\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nimport CopyToClipboard from '../../../utils/copy-to-clipboard';\n\nimport copy from '../../../assets/content_copy-24px.svg'\n\n\n\n\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\n\n\nfunction CustomPagination() {\n\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n\n\n  return (\n\n    <Pagination\n\n      className={classes.root}\n\n      shape=\"rounded\"\n\n      color=\"primary\"\n\n      // variant=\"contained\"\n\n      count={state.pagination.pageCount}\n\n      page={state.pagination.page + 1}\n\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n\n    />\n\n  );\n\n}\n\n\n\nfunction RialDepositsHistoryDatagrid(props) {\n\n  const [showToolTip, setShowToolTip] = React.useState(false);\n\n  const history = useHistory()\n\n  const renderToolTipSuccess = <Tooltip id=\"copied\">Copied!</Tooltip>\n\n  const renderNothing = <div />\n\n  const columns = [\n\n    {\n\n      field: 'tracking_code',\n\n      headerName: 'شناسه سفارش',\n\n      flex: 0.5,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.tracking_code.slice(-9)}...`\n\n    },\n\n    // {\n\n    //   field: 'crypto_type',\n\n    //   headerName: 'نوع ارز',\n\n    //   flex: 0.5,\n\n    //   sortable: false,\n\n    //   headerClassName: 'grid-header',\n\n    //   headerAlign: 'center',\n\n    //   align: 'center',\n\n    //   renderCell: (values) => 'تومان'\n\n\n    // },\n\n    {\n\n      field: 'type',\n\n      headerName: 'نوع واریز',\n\n      flex: 0.5,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => ' واریز تومانی '\n\n\n    },\n\n    {\n\n      field: 'user_name',\n\n      headerName: 'نام کاربر',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${values.row?.user[0]?.credentials.first_name} ${values.row?.user[0]?.credentials.last_name}`\n\n    },\n    {\n\n      field: 'national_code',\n\n      headerName: 'کد ملی',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${values.row?.user[0]?.credentials.national_code}`\n\n    },\n\n    {\n\n      field: 'quantity_with_fee',\n\n      headerName: 'مقدار واریز',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${numDiscriminant(values.row?.amount)}`\n\n\n\n    },\n\n    {\n\n      field: 'user',\n\n      headerName: 'شماره شبا مبدا',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => {\n        let sheba\n        \n        console.log(\"values\",values)\n        values.value && values.value[0].cards?.map(item => {\n          if (item.id === values.row?.bank_account_id) {\n            return sheba = item.sheba_number\n          }\n        })\n        let renderTooltip = (props) => (\n\n          <Tooltip id=\"button-tooltip\" {...props}>\n\n            {sheba && sheba}\n\n          </Tooltip>\n\n        );\n\n          console.log(\"sheba\",sheba)\n\n        return (\n\n          <>\n\n            <OverlayTrigger\n\n              placement=\"top\"\n\n              delay={{ show: 250, hide: 400 }}\n\n              overlay={renderTooltip}\n\n            >\n\n              <Button>\n\n                {sheba?.slice(-5)}...\n\n              </Button>\n\n            </OverlayTrigger>\n\n            <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={showToolTip ? renderToolTipSuccess : renderNothing} rootClose>\n\n              <span id=\"basic-addon3\"\n\n                onClick={() => {\n\n                  CopyToClipboard(values.row?.dest_address)\n\n\n                  setShowToolTip(true)\n\n                  setTimeout(() => { setShowToolTip(false) }, 2000);\n\n                }}\n\n              >\n\n                <img alt=\"\" src={copy} class=\"w-50\" />\n\n              </span>\n\n            </OverlayTrigger>\n\n          </>\n\n        )\n      }\n\n    },\n\n    // {\n\n    //   field: 'status',\n\n    //   headerName: 'دریافتی',\n\n    //   // description: 'This column has a value getter and is not sortable.',\n\n    //   sortable: false,\n\n    //   align: 'center',\n\n    //   flex: 1,\n\n    //   headerClassName: 'grid-header',\n\n    //   headerAlign: 'center',\n\n    // },\n\n    \n    {\n      \n      field: 'created_at',\n      \n      headerName: 'تاریخ',\n      \n      // description: 'This column has a value getter and is not sortable.',\n      \n      sortable: false,\n      \n      align: 'center',\n      \n      flex: 0.5,\n      \n      headerClassName: 'grid-header',\n      \n      headerAlign: 'center',\n      \n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n      \n    },\n\n    {\n\n      field: 'status',\n\n      headerName: 'وضعیت',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => {\n\n        let text = values.row?.status === \"success\" ? \"موفق\" : values.row?.status === \"in_progress\" ? \"درحال بررسی\" : \"ناموفق\"\n\n        let pic = values.row?.status === \"success\" ? \"/assets/drawer/check_circle-24px.svg\" : values.row?.status === \"in_progress\" ? '' : \"/assets/drawer/cancel-24px (1).svg\"\n\n        return <div className=\"d-flex justify-content-center w-100\">\n\n          {text}\n\n          <img src={pic} />\n\n        </div>\n\n      }\n\n    },\n  ];\n\n\n\n  const [params, setParams] = React.useState({ order: \"-updated_at\", size: 10, page: 0 })\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n  const updateData = () => {\n\n    data?.results?.map((item, index) => {\n\n      let update = data?.users_info?.filter((itm, idx) => idx === index)\n\n      // console.log(\"update\", update);\n\n      return item.user = update\n\n    })\n\n  }\n\n  React.useEffect(() => {\n\n    doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(USERS_PAYMENT, params))\n\n  }, [params])\n\n\n  React.useEffect(() => {\n\n    updateData()\n\n  }, [data])\n\nconsole.log(\"data\",data)\n\n  return (\n\n    <div className=\"content\">\n\n      <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تاریخچه واریزها </p>\n\n        </div>\n\n\n      </div>\n        <Filters params={params} setParams={setParams} />\n\n      <div className=\"d-flex px-3\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n\n          <DataGrid\n\n            style={{ border: 0 }}\n\n            autoHeight\n\n            rows={data?.results ?? []}\n\n            loading={isLoading}\n\n            columns={columns}\n\n            getRowClassName={\n\n              params => 'grid-content'\n\n            }\n\n            headerHeight={50}\n\n            rowHeight={52}\n\n            isRowSelectable={false}\n\n            components={{\n\n              Pagination: CustomPagination\n\n            }}\n\n            pageSize={10}\n\n            rowCount={data?.results?.length}\n\n            paginationMode=\"server\"\n\n            onPageChange={(param) => doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(USERS_PAYMENT, { ...params, page: param }))}\n\n            disableSelectionOnClick\n\n            disableColumnMenu\n\n          />\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default RialDepositsHistoryDatagrid\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/whithdrawHistory/withdrawsCoinHistoryDatagrid.js",["909","910","911","912","913","914","915"],"import React , {useState} from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Button } from '@material-ui/core';\n\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../../utils/hooks\";\n\nimport { ACCOUNTING_APP, ADMIN_BASE_URL, WITHDRAWS_LIST } from '../../../utils/constants';\n\nimport { timeToStr, UrlQuery } from '../../../utils/utils';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Filters from './filters';\n\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nimport CopyToClipboard from '../../../utils/copy-to-clipboard'\n\nimport copy from '../../../assets/content_copy-24px.svg'\nimport { numDiscriminant } from '../../../utils/discriminant';\nimport { round_hundred_thousand } from '../../../utils/math-round';\n\n\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\n\n\nfunction CustomPagination() {\n\n  \n  const { state, apiRef } = useGridSlotComponentProps();\n  \n  const classes = useStyles();\n  \n\n  \n  \n  return (\n    \n    <Pagination\n    \n    className={classes.root}\n    \n    shape=\"rounded\"\n    \n    color=\"primary\"\n    \n    // variant=\"contained\"\n    \n    count={state.pagination.pageCount}\n    \n    page={state.pagination.page + 1}\n    \n    onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    \n    />\n    \n    );\n    \n  }\n  \n  \n  \n  function WithdrawsCoinHistoryDatagrid(props) {\n    \n    const [showToolTip, setShowToolTip] = useState(false);\n\n    const renderToolTipSuccess = <Tooltip id=\"copied\">Copied!</Tooltip>\n  \n    const renderNothing = <div />\n\n    const history = useHistory()\n\n\n\n  const columns = [\n\n    {\n\n      field: 'tracking_code',\n\n      headerName: 'شناسه سفارش',\n\n      flex: 0.5,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.tracking_code?.slice(0, 8)}`\n\n    },\n\n    {\n\n      field: 'user_name',\n\n      headerName: 'نام کاربر',\n\n      flex: 0.5,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.user[0]?.credentials.first_name} ${values.row?.user[0]?.credentials.last_name}`\n\n    },\n    {\n\n      field: 'national_code',\n\n      headerName: 'کد ملی',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${values.row?.user[0]?.credentials.national_code}`\n\n    },\n    {\n\n      field: 'market',\n\n      headerName: 'نوع ارز',\n\n      flex: 0.5,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.wallet?.c_type}`\n\n    },\n\n\n    {\n\n      field: 'quantity_with_fee',\n\n      headerName: 'مقدار برداشت',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${numDiscriminant(values.row?.amount)}`\n\n    },\n    {\n\n      field: 'commission',\n\n      headerName: 'کارمزد',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${round_hundred_thousand(values.row?.amount - values.row?.amount_with_fee)}`\n\n    },\n\n\n    {\n\n      field: 'destination_address',\n\n      headerName: 'آدرس کیف پول مقصد',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => {\n        let renderTooltip = (props) => (\n          <Tooltip id=\"button-tooltip\" {...props}>\n            {values.row?.dest_address}\n          </Tooltip>\n        );\n\n        return (\n          <>\n          <OverlayTrigger\n            placement=\"top\"\n            delay={{ show: 250, hide: 400 }}\n            overlay={renderTooltip}\n          >\n\n            <Button>\n              {values.row?.dest_address?.slice(-5)}...\n            </Button>\n\n\n          </OverlayTrigger>\n          \n          <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={showToolTip ? renderToolTipSuccess : renderNothing} rootClose>\n\n            <span id=\"basic-addon3\"\n\n              onClick={() => {\n\n                CopyToClipboard(values.row?.dest_address)\n\n\n                setShowToolTip(true)\n\n                setTimeout(() => { setShowToolTip(false) }, 2000);\n\n              }}\n\n            >\n\n              <img alt=\"\" src={copy} class=\"w-50\"/>\n\n            </span>\n            </OverlayTrigger>\n            </>\n        )\n      }\n    },\n\n    {\n\n      field: 'created_at',\n\n      headerName: 'تاریخ',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${timeToStr(values.row?.created_at, \"HH:mm  -   jYYYY/jMM/jDD\")}`\n      // valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n\n    },\n    \n    {\n\n      field: 'status',\n      \n      headerName: 'وضعیت',\n      \n      // description: 'This column has a value getter and is not sortable.',\n      \n      sortable: false,\n      \n      align: 'center',\n      \n      flex: 0.5,\n      \n      headerClassName: 'grid-header',\n      \n      headerAlign: 'center',\n      \n      renderCell: (values) => {\n        \n          let text = values.row?.status === \"success\" ? \"پرداخت شده\" : \"ناموفق\"\n        \n          let className = values.row?.status === \"success\" ? \"text-success\" : \"text-danger\"\n        \n          return <div className={`d-flex justify-content-center w-100 ${className}`}>\n        \n            {text}\n                \n          </div>\n        \n        }\n        \n      },\n  \n      {\n  \n        field: 'interception_code',\n  \n        headerName: 'جزییات',\n  \n        // description: 'This column has a value getter and is not sortable.',\n  \n        sortable: false,\n  \n        align: 'center',\n  \n        flex: 0.5,\n  \n        headerClassName: 'grid-header',\n  \n        headerAlign: 'center',\n  \n        // renderCell: (values) => `${values.row?.description}`\n        renderCell: (values) => <Button className=\"small border h-75\" onClick={() => window.open(values.row?.description, '_blank')}>جزییات</Button>\n\n        // valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n  \n      },\n      \n  ];\n\n\n\n  const [params, setParams] = React.useState({ size: 10, page: 0 })\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n  const updateData = () => {\n\n    data?.results?.map((item, index) => {\n\n      let update = data?.users_info?.filter((itm, idx) => idx === index)\n\n      console.log(\"update\", update);\n\n      return item.user = update\n\n    })\n\n  }\n\n\n\n  React.useEffect(() => {\n\n    doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(WITHDRAWS_LIST, { ...params }))\n\n  }, [params])\n\n\n\n  React.useEffect(() => {\n\n    updateData()\n\n  }, [data])\n\n  console.log(\"data\", data)\n\n\n  return (\n\n    <div className=\"content\">\n\n      <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تاریخچه برداشت‌ها </p>\n\n        </div>\n\n      </div>\n\n        <Filters params={params} setParams={setParams} />\n\n      <div className=\"d-flex px-3\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n\n          <DataGrid\n\n            style={{ border: 0 }}\n\n            autoHeight\n\n            rows={data?.results ?? []}\n\n            loading={isLoading}\n\n            columns={columns}\n\n            getRowClassName={\n\n              params => 'grid-content'\n\n            }\n\n            headerHeight={50}\n\n            rowHeight={52}\n\n            isRowSelectable={false}\n\n            components={{\n\n              Pagination: CustomPagination\n\n            }}\n\n            pageSize={10}\n\n            rowCount={data?.results?.length}\n\n            paginationMode=\"server\"\n\n            onPageChange={(param) => doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(WITHDRAWS_LIST, { ...params, page: param }))}\n\n            disableSelectionOnClick\n\n            disableColumnMenu\n\n          />\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default WithdrawsCoinHistoryDatagrid\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/discriminant.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/math-round.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/copy-to-clipboard/index.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/config-api.js",["916"],"import axios from 'axios';\n\nimport { useContext, useEffect } from 'react';\n\nimport { UserContext } from '../context/provider';\n\nimport { BASE_CONFIG_URL , EXCHANGE_CONFIG , CONFIG_COINS} from './constants';\n\n\n\n\n//config api call\n\nconst ConfigApi = (props) => {\n\n    const dataContext = useContext(UserContext);\n\n    const configData = () => {\n\n        const configUrl = `${BASE_CONFIG_URL}${EXCHANGE_CONFIG}${CONFIG_COINS}`\n\n        console.log(\"config url \",configUrl)\n\n        axios.get(configUrl)\n\n            .then(resp => {\n\n                resp.data.map(item => {\n                    let values = ''\n\n                    if (item.Value) {\n        \n                        const encodedRequestBody = String(item.Value);\n        \n                        const decodedRequestBodyString = Buffer.from(encodedRequestBody, \"base64\");\n        \n                        values = JSON.parse(decodedRequestBodyString);\n        \n                    }\n        \n                    item.Value = values\n\n                    return item\n        \n                })\n\n                dataContext.setConfigData(resp.data);\n\n            })\n\n    }\n\n\n\n\n    useEffect(() => {\n\n        configData();\n\n    }, []);\n\n\n    return null;\n\n}\n\n\n\nexport default ConfigApi;\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/policies.js",["917","918","919","920","921","922","923","924","925"],"import React, { ReactDOM } from \"react\";\nimport CKEditor from \"./classicEditor\";\nimport { IAM_APP , TERMS_AND_CONDITIONS_ITEM , TERMS_AND_CONDITIONS_UPDATE} from '../../utils/constants';\nimport { useFetchApi } from '../../utils/hooks';\nimport {  Container, Box, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\n\nconst ConfirmModal = (props) => {\n\n  return <Dialog\n    maxWidth=\"xs\"\n  //   onEntering={handleEntering}\n    aria-labelledby=\"confirmation-dialog-title\"\n    open={props.openModal}\n  >\n      <DialogTitle id=\"confirmation-dialog-title\">آیا از تغییر متن مطمئن هستید؟</DialogTitle>\n      <DialogContent >\n\n      </DialogContent>\n      <DialogActions>\n          <Button autoFocus onClick={ () => props.setOpenModal(false)} variant=\"outlined\" color=\"secondary\">\n              خیر\n          </Button>\n          <Button onClick={ () => {\n              props.handleUserApprove()\n              setTimeout( () => {props.setOpenModal(false)} , 2000 )\n          }} variant=\"contained\" color=\"primary\">\n              بله\n          </Button>\n      </DialogActions>\n  </Dialog>\n}\n\n\nconst Policies = () => {\n\n  const [content, setContent] = React.useState();\n  const [openModal, setOpenModal] = React.useState(false);   \n  const [{ data: aboutUs, isLoading: aboutUsLoading },doFetch] = useFetchApi(undefined)\n  const [{ data: aboutUsUpdate, isLoading: aboutUsUpdateLoading }, getAboutUs] = useFetchApi(undefined, {})\n  \n  //------ Test for race condition ------ //\n  const setContents =() =>{\n    console.log(\"Setting content\",typeof content);\n  }\n\n  const onChange =(evt) => {\n    setContent(evt.editor.getData())\n    // console.log(\"onChange fired with event info: \",evt, \"and data: \",evt.editor.getData());\n    // console.log(\"and data: \",evt.editor.getData());\n  }\n\n  // const onBlur =(evt) => {\n  // }\n\n  // const afterPaste =(evt) => {\n  // }\n  console.log(\"content\",content)\n  async function handleSave() {\n    console.log(\"Setting content\",content);\n\n    const payload = {\n        \"key\": \"string\",\n        \"value\": content,\n        \"additional_data\":{}\n      \n      }\n    getAboutUs(\"PUT\", IAM_APP, TERMS_AND_CONDITIONS_UPDATE(14),payload)\n   }\n\n\n\n   React.useEffect( () => {\n    doFetch(\"GET\", IAM_APP, TERMS_AND_CONDITIONS_ITEM(14) )\n}, [])\n    return (\n        <div className=\"content\">\n        <ConfirmModal openModal={openModal} setOpenModal={setOpenModal} handleUserApprove={handleSave} />\n        <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n        <div className=\"d-flex\">\n            <img src=\"/assets/drawer/Polygon.svg\" />\n            <p className=\"font_title_name me-1\" style={{minWidth: \"150px\"}}>صفحه قوانین و مقررات</p>\n        </div>\n        </div>\n        <CKEditor\n          content={content?content:aboutUs?.value}\n          activeClass=\"mt-4 \"\n          events={{\n            // blur: onBlur,\n            // afterPaste: afterPaste,\n            change: onChange\n          }}\n        />\n          <div className=\"d-flex justify-content-end mt-3 ps-5\">\n          <Button \n          variant=\"contained\" \n          color=\"primary\" \n          onClick={() => {\n            setOpenModal(true)\n            // handleSave()\n            }}>ثبت اطلاعات</Button>\n          </div>\n      </div>\n    );\n  \n}\n\nexport default Policies;","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/help.js",["926","927","928","929","930","931","932","933","934"],"import React, { ReactDOM } from \"react\";\nimport CKEditor from \"./classicEditor\";\nimport { IAM_APP , TERMS_AND_CONDITIONS_ITEM , TERMS_AND_CONDITIONS_UPDATE} from '../../utils/constants';\nimport { useFetchApi } from '../../utils/hooks';\nimport {  Container, Box, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\n\nconst ConfirmModal = (props) => {\n\n  return <Dialog\n    maxWidth=\"xs\"\n  //   onEntering={handleEntering}\n    aria-labelledby=\"confirmation-dialog-title\"\n    open={props.openModal}\n  >\n      <DialogTitle id=\"confirmation-dialog-title\">آیا از تغییر متن مطمئن هستید؟</DialogTitle>\n      <DialogContent >\n\n      </DialogContent>\n      <DialogActions>\n          <Button autoFocus onClick={ () => props.setOpenModal(false)} variant=\"outlined\" color=\"secondary\">\n              خیر\n          </Button>\n          <Button onClick={ () => {\n              props.handleUserApprove()\n              setTimeout( () => {props.setOpenModal(false)} , 2000 )\n          }} variant=\"contained\" color=\"primary\">\n              بله\n          </Button>\n      </DialogActions>\n  </Dialog>\n}\n\n\nconst Help = () => {\n\n  const [content, setContent] = React.useState();\n  const [openModal, setOpenModal] = React.useState(false);   \n  const [{ data: aboutUs, isLoading: aboutUsLoading },doFetch] = useFetchApi(undefined)\n  const [{ data: aboutUsUpdate, isLoading: aboutUsUpdateLoading }, getAboutUs] = useFetchApi(undefined, {})\n  \n  //------ Test for race condition ------ //\n  const setContents =() =>{\n    console.log(\"Setting content\",typeof content);\n  }\n\n  const onChange =(evt) => {\n    setContent(evt.editor.getData())\n    // console.log(\"onChange fired with event info: \",evt, \"and data: \",evt.editor.getData());\n    // console.log(\"and data: \",evt.editor.getData());\n  }\n\n  // const onBlur =(evt) => {\n  // }\n\n  // const afterPaste =(evt) => {\n  // }\n  console.log(\"content\",content)\n  async function handleSave() {\n    console.log(\"Setting content\",content);\n\n    const payload = {\n        \"key\": \"string\",\n        \"value\": content,\n        \"additional_data\":{}\n      \n      }\n    getAboutUs(\"PUT\", IAM_APP, TERMS_AND_CONDITIONS_UPDATE(10),payload)\n   }\n\n\n\n   React.useEffect( () => {\n    doFetch(\"GET\", IAM_APP, TERMS_AND_CONDITIONS_ITEM(10) )\n}, [])\n    return (\n        <div className=\"content\">\n        <ConfirmModal openModal={openModal} setOpenModal={setOpenModal} handleUserApprove={handleSave} />\n        <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n        <div className=\"d-flex\">\n            <img src=\"/assets/drawer/Polygon.svg\" />\n            <p className=\"font_title_name me-1\" style={{minWidth: \"150px\"}}>صفحه راهنما</p>\n        </div>\n        </div>\n        <CKEditor\n          content={content?content:aboutUs?.value}\n          activeClass=\"mt-4\"\n          \n          events={{\n            // blur: onBlur,\n            // afterPaste: afterPaste,\n            change: onChange\n          }}\n        />\n          <div className=\"d-flex justify-content-end mt-3 ps-5\">\n          <Button \n          variant=\"contained\" \n          color=\"primary\" \n          onClick={() => {\n            setOpenModal(true)\n            // handleSave()\n            }}>ثبت اطلاعات</Button>\n          </div>\n      </div>\n    );\n  \n}\n\nexport default Help;","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/about_us.js",["935","936","937","938","939","940","941","942","943"],"import React, { ReactDOM } from \"react\";\nimport CKEditor from \"./classicEditor\";\nimport { IAM_APP , TERMS_AND_CONDITIONS_ITEM , TERMS_AND_CONDITIONS_UPDATE} from '../../utils/constants';\nimport { useFetchApi } from '../../utils/hooks';\nimport {  Container, Box, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\n\nconst ConfirmModal = (props) => {\n\n  return <Dialog\n    maxWidth=\"xs\"\n  //   onEntering={handleEntering}\n    aria-labelledby=\"confirmation-dialog-title\"\n    open={props.openModal}\n  >\n      <DialogTitle id=\"confirmation-dialog-title\">آیا از تغییر متن مطمئن هستید؟</DialogTitle>\n      <DialogContent >\n\n      </DialogContent>\n      <DialogActions>\n          <Button autoFocus onClick={ () => props.setOpenModal(false)} variant=\"outlined\" color=\"secondary\">\n              خیر\n          </Button>\n          <Button onClick={ () => {\n              props.handleUserApprove()\n              setTimeout( () => {props.setOpenModal(false)} , 2000 )\n          }} variant=\"contained\" color=\"primary\">\n              بله\n          </Button>\n      </DialogActions>\n  </Dialog>\n}\n\n\nconst AboutUs = () => {\n\n  const [content, setContent] = React.useState();\n  const [openModal, setOpenModal] = React.useState(false);   \n  const [{ data: aboutUs, isLoading: aboutUsLoading },doFetch] = useFetchApi(undefined)\n  const [{ data: aboutUsUpdate, isLoading: aboutUsUpdateLoading }, getAboutUs] = useFetchApi(undefined, {})\n  \n  //------ Test for race condition ------ //\n  const setContents =() =>{\n    console.log(\"Setting content\",typeof content);\n  }\n\n  const onChange =(evt) => {\n    setContent(evt.editor.getData())\n    // console.log(\"onChange fired with event info: \",evt, \"and data: \",evt.editor.getData());\n    // console.log(\"and data: \",evt.editor.getData());\n  }\n\n  // const onBlur =(evt) => {\n  // }\n\n  // const afterPaste =(evt) => {\n  // }\n  console.log(\"content\",content)\n  async function handleSave() {\n    console.log(\"Setting content\",content);\n\n    const payload = {\n        \"key\": \"string\",\n        \"value\": content,\n        \"additional_data\":{}\n      \n      }\n    getAboutUs(\"PUT\", IAM_APP, TERMS_AND_CONDITIONS_UPDATE(11),payload)\n   }\n\n\n\n   React.useEffect( () => {\n    doFetch(\"GET\", IAM_APP, TERMS_AND_CONDITIONS_ITEM(11) )\n}, [])\n    return (\n        <div className=\"content\">\n        <ConfirmModal openModal={openModal} setOpenModal={setOpenModal} handleUserApprove={handleSave} />\n        <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n        <div className=\"d-flex\">\n            <img src=\"/assets/drawer/Polygon.svg\" />\n            <p className=\"font_title_name me-1\" style={{minWidth: \"150px\"}}>صفحه درباره ما</p>\n        </div>\n        </div>\n        <CKEditor\n          content={content?content:aboutUs?.value}\n          activeClass=\"mt-4\"\n          \n          events={{\n            // blur: onBlur,\n            // afterPaste: afterPaste,\n            change: onChange\n          }}\n        />\n          <div className=\"d-flex justify-content-end mt-3 ps-5\">\n          <Button \n          variant=\"contained\" \n          color=\"primary\" \n          onClick={() => {\n            setOpenModal(true)\n            // handleSave()\n            }}>ثبت اطلاعات</Button>\n          </div>\n      </div>\n    );\n  \n}\n\nexport default AboutUs;","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/history/whithdrawHistory/withdrawsRialHistoryDatagrid.js",["944","945","946","947","948","949","950","951"],"import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Button } from '@material-ui/core';\n\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../../utils/hooks\";\n\nimport { ACCOUNTING_APP, ADMIN_BASE_URL, WITHDRAWS_LIST } from '../../../utils/constants';\n\nimport { timeToStr, UrlQuery } from '../../../utils/utils';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Filters from './filters';\n\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nimport CopyToClipboard from '../../../utils/copy-to-clipboard'\n\nimport copy from '../../../assets/content_copy-24px.svg'\nimport { numDiscriminant } from '../../../utils/discriminant';\n\n\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\n\n\nfunction CustomPagination() {\n\n\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n\n\n\n  return (\n\n    <Pagination\n\n      className={classes.root}\n\n      shape=\"rounded\"\n\n      color=\"primary\"\n\n      // variant=\"contained\"\n\n      count={state.pagination.pageCount}\n\n      page={state.pagination.page + 1}\n\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n\n    />\n\n  );\n\n}\n\n\n\nfunction WithdrawsRialHistoryDatagrid(props) {\n\n  const [showToolTip, setShowToolTip] = useState(false);\n\n  const renderToolTipSuccess = <Tooltip id=\"copied\">Copied!</Tooltip>\n\n  const renderNothing = <div />\n\n  const history = useHistory()\n\n\n\n  const columns = [\n\n    {\n\n      field: 'tracking_code',\n\n      headerName: 'شناسه سفارش',\n\n      flex: 0.5,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.tracking_code.slice(0, 8)}`\n\n    },\n\n    {\n\n      field: 'user_name',\n\n      headerName: 'نام کاربر',\n\n      flex: 0.5,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (values) => `${values.row?.user[0]?.credentials.first_name} ${values.row?.user[0]?.credentials.last_name}`\n\n    },\n    {\n\n      field: 'national_code',\n\n      headerName: 'کد ملی',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${values.row?.user[0]?.credentials.national_code}`\n\n    },\n    // {\n\n    //   field: 'market',\n\n    //   headerName: 'نوع ارز',\n\n    //   flex: 0.5,\n\n    //   sortable: false,\n\n    //   headerClassName: 'grid-header',\n\n    //   headerAlign: 'center',\n\n    //   align: 'center',\n\n    //   renderCell: (values) => `${values.row?.wallet?.c_type}`\n\n    // },\n\n\n    {\n\n      field: 'quantity_with_fee',\n\n      headerName: 'مقدار برداشت',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${numDiscriminant(values.row?.amount)}`\n\n    },\n    // {\n\n    //   field: 'commission',\n\n    //   headerName: 'کارمزد',\n\n    //   // description: 'This column has a value getter and is not sortable.',\n\n    //   sortable: false,\n\n    //   align: 'center',\n\n    //   flex: 0.5,\n\n    //   headerClassName: 'grid-header',\n\n    //   headerAlign: 'center',\n\n    //   renderCell: (values) => `${values.row?.commission}`\n\n    // },\n\n\n    {\n\n      field: 'user',\n\n      headerName: 'شماره شبا مقصد',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => {\n        let sheba\n        values.value && values.value[0].cards?.map(item => {\n          if (item.id === values.row?.bank_account_id) {\n            return sheba = item.sheba_number\n          }\n        })\n        let renderTooltip = (props) => (\n\n          <Tooltip id=\"button-tooltip\" {...props}>\n\n            {sheba && sheba}\n\n          </Tooltip>\n\n        );\n\n          console.log(\"sheba\",sheba)\n\n        return (\n\n          <>\n\n            <OverlayTrigger\n\n              placement=\"top\"\n\n              delay={{ show: 250, hide: 400 }}\n\n              overlay={renderTooltip}\n\n            >\n\n              <Button>\n\n                {sheba?.slice(-5)}...\n\n              </Button>\n\n            </OverlayTrigger>\n\n            <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={showToolTip ? renderToolTipSuccess : renderNothing} rootClose>\n\n              <span id=\"basic-addon3\"\n\n                onClick={() => {\n\n                  CopyToClipboard(values.row?.dest_address)\n\n\n                  setShowToolTip(true)\n\n                  setTimeout(() => { setShowToolTip(false) }, 2000);\n\n                }}\n\n              >\n\n                <img alt=\"\" src={copy} class=\"w-50\" />\n\n              </span>\n\n            </OverlayTrigger>\n\n          </>\n\n        )\n\n      }\n\n    },\n\n    {\n\n      field: 'created_at',\n\n      headerName: 'تاریخ',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => `${timeToStr(values.row?.created_at, \"HH:mm  -   jYYYY/jMM/jDD\")}`\n      // valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n\n    },\n\n    {\n\n      field: 'status',\n\n      headerName: 'وضعیت',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => {\n\n        let text = values.value === \"success\" ? \"موفق\" : \"ناموفق\"\n\n        let pic = values.value === \"success\" ? \"/assets/drawer/check_circle-24px.svg\" : \"/assets/drawer/cancel-24px (1).svg\"\n\n        return <div className=\"d-flex justify-content-center w-100\">\n\n          {text}\n\n          <img src={pic} />\n\n        </div>\n\n      }\n\n    },\n\n    // {\n\n    //   field: 'interception_code',\n\n    //   headerName: 'جزییات',\n\n    //   // description: 'This column has a value getter and is not sortable.',\n\n    //   sortable: false,\n\n    //   align: 'center',\n\n    //   flex: 0.5,\n\n    //   headerClassName: 'grid-header',\n\n    //   headerAlign: 'center',\n\n    //   // renderCell: (values) => `${values.row?.description}`\n    //   renderCell: (values) => <Button className=\"small border h-75\" onClick={() => window.open(values.row?.description, '_blank')}>جزییات</Button>\n\n    //   // valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n\n    // },\n\n  ];\n\n\n\n  const [params, setParams] = React.useState({ size: 10, crypto_type: 'irr', page: 0 })\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n  const updateData = () => {\n\n    data?.results?.map((item, index) => {\n\n      let update = data?.users_info?.filter((itm, idx) => idx === index)\n\n      console.log(\"update\", update);\n\n      return item.user = update\n\n    })\n\n  }\n\n\n\n  React.useEffect(() => {\n\n    doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(WITHDRAWS_LIST, { ...params }))\n\n  }, [params])\n\n\n\n  React.useEffect(() => {\n\n    updateData()\n\n  }, [data])\n\n  console.log(\"data\", data)\n\n\n  return (\n\n    <div className=\"content\">\n\n      <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تاریخچه برداشت‌ها </p>\n\n        </div>\n\n      </div>\n\n        <Filters params={params} setParams={setParams} />\n\n      <div className=\"d-flex px-3\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n\n          <DataGrid\n\n            style={{ border: 0 }}\n\n            autoHeight\n\n            rows={data?.results ?? []}\n\n            loading={isLoading}\n\n            columns={columns}\n\n            getRowClassName={\n\n              params => 'grid-content'\n\n            }\n\n            headerHeight={50}\n\n            rowHeight={52}\n\n            isRowSelectable={false}\n\n            components={{\n\n              Pagination: CustomPagination\n\n            }}\n\n            pageSize={10}\n\n            rowCount={data?.results?.length}\n\n            paginationMode=\"server\"\n\n            onPageChange={(param) => doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(WITHDRAWS_LIST, { ...params, page: param }))}\n\n            disableSelectionOnClick\n\n            disableColumnMenu\n\n          />\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default WithdrawsRialHistoryDatagrid\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/editor/index.js",[],["952","953"],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/editor/constants.js",[],["954","955"],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/classicEditor.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/market-setting/index.js",["956"],"import { Button, Container } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from '../../context/provider';\nimport ConfigApi from '../../utils/config-api';\nimport './marketSetting.scss'\n\nconst MarketSetting = () => {\n\n    const cryptoContext = useContext(UserContext);\n\n    const history = useHistory()\n\n    return (\n\n        <div className=\"content pb-5\">\n\n            <ConfigApi />\n\n            <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n                <div className=\"d-flex\">\n\n                    <img src=\"/assets/drawer/Polygon.svg\" />\n\n                    <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تنظیمات بازار</p>\n\n                </div>\n\n                <Button\n                \n                variant=\"contained\"\n\n                color=\"secondary\"\n\n                className='ms-5'\n\n                onClick={() => history.push(`/marketsetting/detail`) }\n\n                >\n                    افزودن ارز جدید\n                </Button>\n            </div>\n\n            <Container className='px-0'>\n\n                <div className=\"row d-flex mt-4 justify-content-between\">\n\n                    {cryptoContext.configData?.map(item => <Col sm={5} className='market_setting_item align-items-center justify-content-between bg-dark bg_input mx-auto mt-4 d-flex text-white'>\n\n                        <div className='align-items-center d-flex'>\n\n                            <p className='my-1'>{item.Value.title}</p>\n\n                            (<span>{item.Value.symbol}</span>)\n\n                        </div>\n\n                        {/* {console.log(\"item\", item)} */}\n\n                        <Button\n\n                            variant=\"contained\"\n\n                            color=\"primary\"\n\n                            className='my-1'\n\n                            onClick={() => history.push(`/marketsetting/detail/${item.Value.symbol}`) }\n\n                        >جزییات</Button>\n\n                    </Col>)}\n\n                </div>\n\n            </Container>\n\n        </div>\n    );\n}\n\nexport default MarketSetting;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/market-setting/MarketSettingDetail.js",["957","958","959","960","961"],"import { Button, Container } from '@material-ui/core';\nimport { notification, Switch } from 'antd';\nimport axios from 'axios';\nimport { Field, Formik } from 'formik';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { UserContext } from '../../context/provider';\nimport ConfigApi from '../../utils/config-api';\nimport { useFetchApi } from '../../utils/hooks';\nimport AddNetwork from './add-network';\nimport './marketSetting.scss'\nimport { BASE_CONFIG_URL , EXCHANGE_CONFIG , CONFIG_COIN} from '../../utils/constants';\n\nconst MarketSettingDetail = () => {\n\n    const { id } = useParams();\n\n    const [cryptoItem, setCryptoItem] = useState();\n\n    const [activeCheck, setActiveCheck] = useState(false);\n\n    const [showCheck, setShowCheck] = useState(false);\n\n    const [addNetwork, setAddNetwork] = useState(false);\n\n    const cryptoContext = useContext(UserContext);\n\n    const history = useHistory()\n\n    let networkList = [1];\n\n    const openNotification = describe => {\n\n        notification.success({\n    \n            message: `پیغام ثبت تغییرات `,\n    \n            description: describe,\n    \n            placement: \"bottomRight\",\n    \n            className: \"bg-success\",\n    \n            style: { zIndex: '50000' }\n    \n    \n    \n        });\n    \n        notification.config({\n    \n            rtl: false\n    \n        })\n    \n    };\n    const handleSettingApprove = (values) => {\n        const configUrl = `${BASE_CONFIG_URL}${EXCHANGE_CONFIG}${CONFIG_COIN(id?.toLowerCase())}`\n        // let config = {\n        //     headers: {\n        //         'Referrer-Policy': 'strict-origin-when-cross-origin',\n        //     }\n        //   }\n              \n        let payload = {\n                is_active: activeCheck,\n                is_show: showCheck,\n                icon:values.icon,\n                symbol: values.symbol,\n                title: values.title,\n                title_en: values.title_en,\n                minimum_price_usdt: values.minimum_price_usdt,\n                minimum_price_irr: values.minimum_price_irr,\n                decimals: values.decimals,\n                networks: values.networks\n                }\n            axios.put(configUrl,payload)\n            .then(resp => console.log(\"resp\",resp))\n            .finally(() => {\n                openNotification('تغییرات با موفقیت ثبت شد')\n                history.push('/marketsetting')\n            })\n        }\n    \n\n    useEffect(() => {\n        if (id) {\n            cryptoContext.configData?.map(item => item.Value.symbol === id && setCryptoItem(item))\n        }\n    }, [id, cryptoContext.configData]);\n    useEffect(() => {\n        if (cryptoItem?.Value?.is_active) {\n            setActiveCheck(true)\n        }\n        if (cryptoItem?.Value?.is_show) {\n            setShowCheck(true)\n        }\n    }, [cryptoItem]);\n    return (\n\n        <div className=\"cryptoSetting\">\n\n            <ConfigApi />\n\n            {console.log(\"id\", cryptoItem)}\n            <p className=\"text-white pe-4\">جزییات بازار {cryptoItem?.Value.title}</p>\n\n            <div className=\"content\">\n\n                <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n                    <div className=\"d-flex\">\n\n                        <img src=\"/assets/drawer/Polygon.svg\" />\n\n                        <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>{cryptoItem?.Value.title} </p>\n\n                    </div>\n\n                    <Link className=\"text-decoration-none ms-3\" style={{ color: \"#10D078\" }} to={'/marketsetting'} >بازگشت به لیست ارزها {`->`} </Link>\n\n                </div>\n\n\n                <Container className=\"w-100 py-3\">\n\n                    <Formik\n                        initialValues={{\n                            icon: cryptoItem?.Value.icon,\n                            symbol: cryptoItem?.Value.symbol,\n                            title: cryptoItem?.Value.title,\n                            title_en: cryptoItem?.Value.title_en,\n                            minimum_price_usdt: cryptoItem?.Value.minimum_price_usdt,\n                            minimum_price_irr: cryptoItem?.Value.minimum_price_irr,\n                            decimals: cryptoItem?.Value.decimals,\n                            networks: cryptoItem?.Value?.networks?.map((im, ix) => ({ slug: `${im.slug}`, title: `${im.title}`,fee: `${im.fee}` , minimum_withdraw: `${im.minimum_withdraw}`, withdraw_requirements: im.withdraw_requirements?.map(it => `${it}`), deposit_requirements: im.deposit_requirements?.map(it => `${it}`) })),\n                        }}\n                        isInitialValid={false}\n                        enableReinitialize={true}\n                    >\n\n                        {props => (\n                            <Container>\n                                <form onSubmit={props.handleSubmit}>\n\n                                    <div className=\"form-group row\">\n                                        <Col sm={6}>\n                                            <Row>\n                                                <Col sm={3}>\n                                                    <label className='text-white'>وضعیت</label>\n                                                </Col>\n                                                <Col sm={9}>\n                                                    <Switch name=\"active\" checked={activeCheck} onChange={() => { setActiveCheck(!activeCheck) }} checkedChildren=\"فعال\" unCheckedChildren=\"غیر‌فعال\" />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <Col sm={6}>\n                                            <Row>\n                                                <Col sm={3}>\n                                                    <label className='text-white'>نمایش</label>\n                                                </Col>\n                                                <Col sm={9}>\n                                                    <Switch name=\"show\" checked={showCheck} onChange={() => { setShowCheck(!showCheck) }} checkedChildren=\"فعال\" unCheckedChildren=\"غیر‌فعال\" />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                    </div>\n                                    <div className='form-group row mt-5'>\n                                        <Col sm={6}>\n                                            <Row className='align-items-center'>\n                                                <Col sm={3}>\n                                                    <label className='text-white'>آپلود آیکون</label>\n                                                </Col>\n                                                <Col sm={9}>\n                                                    <Field\n                                                        name=\"icon\"\n                                                        className=\"form-control text-center\"\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <Col sm={6}>\n                                            <Row className='align-items-center'>\n                                                <Col sm={3}>\n                                                    <label className='text-white'>نماد ارز</label>\n                                                </Col>\n                                                <Col sm={9}>\n                                                    <Field\n                                                        name=\"symbol\"\n                                                        className=\"form-control text-center bg-secondary\"\n                                                        disabled\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                    </div>\n                                    <div className='form-group row mt-5'>\n                                        <Col sm={6}>\n                                            <Row className='align-items-center'>\n                                                <Col sm={3}>\n                                                    <label className='text-white'>نام ارز (فارسی)</label>\n                                                </Col>\n                                                <Col sm={9}>\n                                                    <Field\n                                                        name=\"title\"\n                                                        className=\"form-control text-center\"\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <Col sm={6}>\n                                            <Row className='align-items-center'>\n                                                <Col sm={3}>\n                                                    <label className='text-white'>نام ارز (انگلیسی)</label>\n                                                </Col>\n                                                <Col sm={9}>\n                                                    <Field\n                                                        name=\"title_en\"\n                                                        className=\"form-control text-center\"\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                    </div>\n                                    <div className='form-group row mt-5'>\n                                        <Col sm={6}>\n                                            <Row className='align-items-center'>\n                                                <Col sm={3}>\n                                                    <label className='text-white'>حداقل معامله (USDT)</label>\n                                                </Col>\n                                                <Col sm={9}>\n                                                    <Field\n                                                        name=\"minimum_price_usdt\"\n                                                        className=\"form-control text-center\"\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <Col sm={6}>\n                                            <Row className='align-items-center'>\n                                                <Col sm={3}>\n                                                    <label className='text-white'>حداقل معامله (IRT)</label>\n                                                </Col>\n                                                <Col sm={9}>\n                                                    <Field\n                                                        name=\"minimum_price_irr\"\n                                                        className=\"form-control text-center\"\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                    </div>\n                                    <div className='form-group row mt-5'>\n                                        <Col sm={6}>\n                                            <Row className='align-items-center'>\n                                                <Col sm={3}>\n                                                    <label className='text-white'>نمایش اعشار</label>\n                                                </Col>\n                                                <Col sm={9}>\n                                                    <Field\n                                                        name=\"decimals\"\n                                                        className=\"form-control text-center\"\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <Col sm={6}>\n\n                                        </Col>\n                                    </div>\n                                    <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto mt-5\">\n\n                                        <div className=\"d-flex\">\n\n                                            <img src=\"/assets/drawer/Polygon.svg\" />\n\n                                            <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>شبکه های انتقال</p>\n\n                                        </div>\n                                        <button className=\"verifyButton text-decoration-none mb-2\" onClick={() => id?cryptoItem?.Value.networks.push(Math.random()) : networkList.push(Math.random())} style={{ color: \"#10D078\" }}><img alt=\"\" src='/assets/drawer/active/Group1841.svg' className='p-2 w-25' />افزودن شبکه</button>\n                                    </div>\n                                    {id? \n                                    cryptoItem?.Value.networks.map((item, index) =>\n                                        <AddNetwork props={props} item={item} index={index} symbol={cryptoItem?.Value.symbol} />\n                                    ):\n                                    networkList?.map((itm, inx) =>\n                                        <AddNetwork props={props} index={inx} symbol={cryptoItem?.Value.symbol} />\n                                    )\n                                    }\n                                    <div className=\"d-flex justify-content-end mt-3 ps-5 py-5\">\n                                        <Button\n                                            style={{ backgroundColor: '#B4B1B1' }}\n                                            className=\"me-2 text-white\"\n                                            variant=\"contained\"\n                                            id=\"authentication-button2\"\n                                            onClick={() => {\n                                                // setUserState(\"rejected\")\n                                                // setModalOpen(true)\n                                            }}\n                                        // disabled={userDetail?.approve_state === \"rejected\"}\n                                        >\n                                            لغو\n                                        </Button>\n                                        <Button className=\"me-2\"\n                                            variant=\"contained\"\n                                            id=\"authentication-button\"\n                                            color=\"primary\"\n                                            onClick={() => {\n                                                // setUserState(\"approved\")\n                                                // setModalOpen(true)\n                                                handleSettingApprove(props.values)\n                                                console.log(\"====>\", props.values)\n                                            }}\n                                        // disabled={userDetail?.approve_state === \"approved\"}\n                                        >\n                                            ثبت تغییرات\n                                        </Button>\n                                    </div>\n                                </form>\n                            </Container>\n                        )}\n\n\n                    </Formik>\n\n                </Container>\n\n            </div>\n\n        </div>\n    );\n}\n\nexport default MarketSettingDetail;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/market-setting/add-network.js",["962"],"import { Field, Formik } from 'formik';\nimport React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nconst AddNetwork = ({ props, item, index, symbol }) => {\n    return (\n        <Container key={index && index} className='bg-dark p-3 mt-2'>\n            <div className='form-group row mt-5'>\n                <Col sm={6}>\n                    <Row className='align-items-center'>\n                        <Col sm={3}>\n                            <label className='text-white'>شبکه</label>\n                        </Col>\n                        <Col sm={9}>\n                            <Field\n                                name={`networks[${index}].slug`}\n                                className=\"form-control text-center\"\n                            />\n                        </Col>\n                    </Row>\n                </Col>\n                <Col sm={6}>\n                    <Row className='align-items-center'>\n                        <Col sm={3}>\n                            <label className='text-white'>عنوان شبکه</label>\n                        </Col>\n                        <Col sm={9}>\n                            <Field\n                                name={`networks[${index}].title`}\n                                className=\"form-control text-center\"\n                            />\n                        </Col>\n                    </Row>\n                </Col>\n            </div>\n            <div className='form-group row mt-5'>\n                <Col sm={6}>\n                    <Row className='align-items-center'>\n                        <Col sm={3}>\n                            <label className='text-white'>حداقل برداشت ({symbol})</label>\n                        </Col>\n                        <Col sm={9}>\n                            <Field\n                                name={`networks[${index}].minimum_withdraw`}\n                                className=\"form-control text-center\"\n                            />\n                        </Col>\n                    </Row>\n                </Col>\n                <Col sm={6}>\n                    <Row className='align-items-center'>\n                        <Col sm={3}>\n                            <label className='text-white'>کارمزد برداشت ارز({symbol})</label>\n                        </Col>\n                        <Col sm={9}>\n                            <Field\n                                name={`networks[${index}].fee`}\n                                className=\"form-control text-center\"\n                            />\n                        </Col>\n                    </Row>\n\n                </Col>\n            </div>\n            <div className='form-group row mt-5'>\n                <Col sm={6}>\n                    <Row className='align-items-center'>\n                        <Col sm={3}>\n                            <label className='text-white'>نیازمندی‌های برداشت :</label>\n                        </Col>\n                        <Col sm={9}>\n                            <div role=\"group\" aria-labelledby=\"checkbox-group \" className='d-flex justify-content-around'>\n                                <label className='align-items-center d-flex text-white'>\n                                    آدرس\n                                    <input\n\n                                        id=\"address\"\n\n                                        type=\"checkbox\"\n\n                                        value=\"address\"\n\n                                        name={`networks[${index}].withdraw_requirements`}\n\n                                        onChange={props.handleChange}\n\n                                        defaultChecked={item?.withdraw_requirements?.includes(\"address\")}\n\n                                        // onClick={() => setChange2faPopUp(true)}\n\n                                        className={'ms-3 me-2 align-items-center d-flex box ' + (props.errors.emailPanel && props.touched.emailPanel ? ' is-invalid' : '')}\n\n                                    />\n                                </label>\n                                <label className='align-items-center d-flex text-white'>\n                                    تگ\n                                    <input\n\n                                        id=\"tag\"\n\n                                        type=\"checkbox\"\n\n                                        value=\"tag\"\n\n                                        name={`networks[${index}].withdraw_requirements`}\n\n                                        onChange={props.handleChange}\n\n                                        defaultChecked={item?.withdraw_requirements?.includes(\"tag\")}\n\n                                        // onClick={() => setChange2faPopUp(true)}\n\n                                        className={'ms-3 me-2 align-items-center d-flex box ' + (props.errors.emailPanel && props.touched.emailPanel ? ' is-invalid' : '')}\n\n                                    />\n                                </label>\n                                <label className='align-items-center d-flex text-white'>\n                                    ممو\n                                    <input\n\n                                        id=\"memo\"\n\n                                        type=\"checkbox\"\n\n                                        value=\"memo\"\n\n                                        name={`networks[${index}].withdraw_requirements`}\n\n                                        onChange={props.handleChange}\n\n                                        defaultChecked={item?.withdraw_requirements?.includes(\"memo\")}\n\n                                        // onClick={() => setChange2faPopUp(true)}\n\n                                        className={'ms-3 me-2 align-items-center d-flex box ' + (props.errors.emailPanel && props.touched.emailPanel ? ' is-invalid' : '')}\n\n                                    />\n                                </label>\n                            </div>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col sm={6}>\n                    <Row className='align-items-center'>\n                        <Col sm={3}>\n                            <label className='text-white'>نیازمندی های واریز :</label>\n                        </Col>\n                        <Col sm={9}>\n                            <div role=\"group\" aria-labelledby=\"checkbox-group \" className='d-flex justify-content-around'>\n                                <label className='align-items-center d-flex text-white'>\n                                    آدرس\n                                    <input\n\n                                        id=\"address\"\n\n                                        type=\"checkbox\"\n\n                                        value=\"address\"\n\n                                        name={`networks[${index}].deposit_requirements`}\n\n                                        onChange={props.handleChange}\n\n                                        defaultChecked={item?.deposit_requirements?.includes(\"address\")}\n\n                                        // onClick={() => setChange2faPopUp(true)}\n\n                                        className={'ms-3 me-2 align-items-center d-flex box ' + (props.errors.emailPanel && props.touched.emailPanel ? ' is-invalid' : '')}\n\n                                    />\n                                </label>\n                                <label className='align-items-center d-flex text-white'>\n                                    تگ\n                                    <input\n\n                                        id=\"tag\"\n\n                                        type=\"checkbox\"\n\n                                        value=\"tag\"\n\n                                        name={`networks[${index}].deposit_requirements`}\n\n                                        onChange={props.handleChange}\n\n                                        defaultChecked={item?.deposit_requirements?.includes(\"tag\")}\n\n                                        // onClick={() => setChange2faPopUp(true)}\n\n                                        className={'ms-3 me-2 align-items-center d-flex box ' + (props.errors.emailPanel && props.touched.emailPanel ? ' is-invalid' : '')}\n\n                                    />\n                                </label>\n                                <label className='align-items-center d-flex text-white'>\n                                    ممو\n                                    <input\n\n                                        id=\"memo\"\n\n                                        type=\"checkbox\"\n\n                                        value=\"memo\"\n\n                                        name={`networks[${index}].deposit_requirements`}\n\n                                        onChange={props.handleChange}\n\n                                        defaultChecked={item?.deposit_requirements?.includes(\"memo\")}\n\n                                        // onClick={() => setChange2faPopUp(true)}\n\n                                        className={'ms-3 me-2 align-items-center d-flex box ' + (props.errors.emailPanel && props.touched.emailPanel ? ' is-invalid' : '')}\n\n                                    />\n                                </label>\n                            </div>\n                        </Col>\n                    </Row>\n                </Col>\n            </div>\n        </Container>\n    );\n}\n\nexport default AddNetwork;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/serviceWorkerRegistration.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/index.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/users/index.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/users/reportsUsersData.js",["963","964","965","966"],"import React from 'react';\nimport ActiveUsers from './activeUsers';\nimport AuthenticationChart from './authenticationChart';\nimport NumOfUsers from './numOfUsers';\nimport SignUpUsers from './signUpUsers';\nimport '../layout/style.scss';\n\nconst ReportsUsersData = () => {\n\n\n\n  return (\n    <div className='reportsContent'>\n      <div className='d-flex justify-content-between'>\n\n        <div className=\"content w-auto\">\n\n          <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n            <div className=\"d-flex\">\n\n              <img src=\"/assets/drawer/Polygon.svg\" />\n\n              <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تعداد کل کاربران بر اساس زمان</p>\n\n            </div>\n\n            {/* <Filters params={params} setParams={setParams} /> */}\n\n          </div>\n\n          <NumOfUsers type='registration_dispersion' />\n\n        </div>\n\n        <div className=\"content w-auto\">\n\n          <div className=\" align-items-start d-flex flex-column mx-auto pt-2 w-auto\">\n\n            <div className=\"d-flex\">\n\n              <img src=\"/assets/drawer/Polygon.svg\" />\n\n              <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>درصد احراز هویت کاربران</p>\n\n            </div>\n\n            {/* <Filters params={params} setParams={setParams} /> */}\n            <AuthenticationChart type='approval_dispersion' />\n\n          </div>\n\n        </div>\n\n      </div>\n\n      <div className='d-flex justify-content-between mt-3'>\n\n        <div className=\"content w-auto\">\n\n          <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n            <div className=\"d-flex\">\n\n              <img src=\"/assets/drawer/Polygon.svg\" />\n\n              <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تعداد ثبت نام کاربر بر اساس زمان</p>\n\n            </div>\n\n            {/* <Filters params={params} setParams={setParams} /> */}\n\n          </div>\n\n          <SignUpUsers type='registration_dispersion' />\n\n        </div>\n\n        <div className=\"content w-auto\">\n\n          <div className=\" align-items-start d-flex flex-column mx-auto pt-2 w-auto\">\n\n            <div className=\"d-flex\">\n\n              <img src=\"/assets/drawer/Polygon.svg\" />\n\n              <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>درصد احراز هویت کاربران</p>\n\n            </div>\n\n            {/* <Filters params={params} setParams={setParams} /> */}\n            <ActiveUsers type='registration_dispersion' />\n\n          </div>\n\n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default ReportsUsersData;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/users/authenticationChart.js",["967","968","969","970","971","972","973"],"// import \"./styles.css\";\nimport React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Cell, Legend } from \"recharts\";\nimport { useFetchApi } from \"../../../utils/hooks\";\nimport { UrlQuery } from \"../../../utils/utils\";\nimport { IAM_APP, REPORTS_USERS } from '../../../utils/constants';\n\n// const data = [\n//   { name: \"Group A\", value: 400 },\n//   { name: \"Group B\", value: 300 },\n//   { name: \"Group C\", value: 300 },\n//   { name: \"Group D\", value: 200 }\n// ];\n\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.7;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\nexport default function AuthenticationChart({ type }) {\n  let list = []\n  const [params, setParams] = React.useState({ period: {}, unique: {} });\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, []);\n  // const [type, setType] = React.useState();\n\n  React.useEffect(() => {\n    doFetch(\"GET\", IAM_APP, UrlQuery(REPORTS_USERS(type), { ...params }))\n  }, [params])\n\n  return (\n    <PieChart width={268} height={350}>\n      <Legend align=\"right\" height={80} layout=\"vertical\" />\n      <Pie\n        data={data}\n        cx={134}\n        cy={134}\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={100}\n        innerRadius={60}\n        fill=\"#8884d8\"\n        dataKey=\"value\"\n      >\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n}\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/users/numOfUsers.js",["974","975","976","977","978"],"import * as React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  linearGradient,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip\n} from \"recharts\";\nimport { curveCardinal } from \"d3-shape\";\nimport { useFetchApi } from \"../../../utils/hooks\";\nimport { IAM_APP, REPORTS_USERS } from '../../../utils/constants';\nimport { UrlQuery } from \"../../../utils/utils\";\n\n// const data = [\n//   {\n//     name: \"Page A\",\n//     uv: 4000,\n//     pv: 2400,\n//     amt: 2400\n//   },\n//   {\n//     name: \"Page B\",\n//     uv: 3000,\n//     pv: 1398,\n//     amt: 2210\n//   },\n//   {\n//     name: \"Page C\",\n//     uv: 2000,\n//     pv: 9800,\n//     amt: 2290\n//   },\n//   {\n//     name: \"Page D\",\n//     uv: 2780,\n//     pv: 3908,\n//     amt: 2000\n//   },\n//   {\n//     name: \"Page E\",\n//     uv: 1890,\n//     pv: 4800,\n//     amt: 2181\n//   },\n//   {\n//     name: \"Page F\",\n//     uv: 2390,\n//     pv: 3800,\n//     amt: 2500\n//   },\n//   {\n//     name: \"Page G\",\n//     uv: 3490,\n//     pv: 4300,\n//     amt: 2100\n//   }\n// ];\nconst cardinal = curveCardinal.tension(0.2);\n\nexport default function NumOfUsers({ type }) {\n\n  const [params, setParams] = React.useState({ period: {}, unique: {} });\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, []);\n  // const [type, setType] = React.useState();\n\n  React.useEffect(() => {\n    doFetch(\"GET\", IAM_APP, UrlQuery(REPORTS_USERS(type), { ...params }))\n  }, [params])\n\n  console.log(\"reports\", data);\n\n  return (\n    <AreaChart width={730} height={250} data={data}\n      margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n      <defs>\n        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n          <stop offset=\"5%\" stopColor=\"#10D078\" stopOpacity={0.8} />\n          <stop offset=\"95%\" stopColor=\"#10D078\" stopOpacity={0} />\n        </linearGradient>\n      </defs>\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <CartesianGrid strokeDasharray=\"2 2\" vertical={false} horizontal={true} />\n      <Tooltip />\n      <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#10D078\" fillOpacity={1} fill=\"url(#colorPv)\" />\n    </AreaChart>\n  );\n}\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/users/signUpUsers.js",["979","980","981","982"],"import React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\nimport { IAM_APP, REPORTS_USERS } from '../../../utils/constants';\nimport { useFetchApi } from \"../../../utils/hooks\";\nimport { UrlQuery } from \"../../../utils/utils\";\n\n\n// const data = [\n//   {\n//     date: \"1399-01\",\n//     uv: 4000,\n//     pv: 2400,\n//     amt: 2400\n//   },\n//   {\n//     date: \"1399-02\",\n//     uv: 3000,\n//     pv: 1398,\n//     amt: 2210\n//   },\n//   {\n//     date: \"1399-03\",\n//     uv: 2000,\n//     pv: 9800,\n//     amt: 2290\n//   },\n//   {\n//     date: \"1399-04\",\n//     uv: 2780,\n//     pv: 3908,\n//     amt: 2000\n//   },\n//   {\n//     date: \"1399-05\",\n//     uv: 1890,\n//     pv: 4800,\n//     amt: 2181\n//   },\n//   {\n//     date: \"1399-06\",\n//     uv: 2390,\n//     pv: 3800,\n//     amt: 2500\n//   },\n//   {\n//     date: \"1399-07\",\n//     uv: 3490,\n//     pv: 4300,\n//     amt: 2100\n//   },\n//   {\n//     date: \"1399-08\",\n//     uv: 4000,\n//     pv: 2400,\n//     amt: 2400\n//   },\n//   {\n//     date: \"1399-09\",\n//     uv: 3000,\n//     pv: 1398,\n//     amt: 2210\n//   },\n//   {\n//     date: \"1399-10\",\n//     uv: 2000,\n//     pv: 9800,\n//     amt: 2290\n//   },\n//   {\n//     date: \"1399-11\",\n//     uv: 2780,\n//     pv: 3908,\n//     amt: 2000\n//   },\n//   {\n//     date: \"1399-12\",\n//     uv: 1890,\n//     pv: 4800,\n//     amt: 2181\n//   }\n// ];\n\nconst monthTickFormatter = (tick) => {\n  const date = new Date(tick);\n\n  return date.getMonth() + 1;\n};\n\n// const renderQuarterTick = (tickProps) => {\n//   const { x, y, payload } = tickProps;\n//   const { value, offset } = payload;\n//   const date = new Date(value);\n//   const month = date.getMonth();\n//   const quarterNo = Math.floor(month / 3) + 1;\n\n//   if (month % 3 === 1) {\n//     return <text x={x} y={y - 4} textAnchor=\"middle\">{`Q${quarterNo}`}</text>;\n//   }\n\n//   const isLast = month === 11;\n\n//   if (month % 3 === 0 || isLast) {\n//     const pathX = Math.floor(isLast ? x + offset : x - offset) + 0.5;\n\n//     return <path d={`M${pathX},${y - 4}v${-35}`} stroke=\"red\" />;\n//   }\n//   return null;\n// };\n\nexport default function SignUpUsers({ type }) {\n  const [params, setParams] = React.useState({ period: {}, unique: {} });\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, []);\n  // const [type, setType] = React.useState();\n\n  React.useEffect(() => {\n    doFetch(\"GET\", IAM_APP, UrlQuery(REPORTS_USERS(type), { ...params }))\n  }, [params])\n\n\n  for (var prop in data) {\n    console.log(prop + ':' + data[prop]);\n    // const person = {\n    //   firstName: 'John',\n    //   lastName: 'Doe',\n    //   age: 25\n    // };\n\n    const profile = Object.values(data[prop]);\n\n    console.log(profile);\n\n  }\n\n  console.log(\"signup\", data);\n  return (\n    <BarChart\n      width={730}\n      height={300}\n      data={data}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      }}\n    >\n      <Legend align=\"right\" verticalAlign=\"top\" />\n      <CartesianGrid strokeDasharray=\"2 2\" vertical={false} horizontal={true} />\n      <XAxis dataKey=\"date\" tickFormatter={monthTickFormatter} />\n      <XAxis\n        dataKey=\"date\"\n        axisLine={false}\n        tickLine={false}\n        interval={0}\n        // tick={renderQuarterTick}\n        height={1}\n        scale=\"band\"\n        xAxisId=\"quarter\"\n      />\n      <YAxis />\n      <Tooltip />\n      <Bar dataKey=\"pv\" fill=\"#8884d8\" />\n      <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n    </BarChart>\n  );\n}\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/users/activeUsers.js",["983","984","985","986","987","988","989"],"// import \"./styles.css\";\nimport React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Cell, Legend } from \"recharts\";\nimport { IAM_APP, REPORTS_USERS } from '../../../utils/constants';\nimport { useFetchApi } from \"../../../utils/hooks\";\nimport { UrlQuery } from \"../../../utils/utils\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 }\n];\n\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.7;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\nexport default function ActiveUsers({ type }) {\n  const [params, setParams] = React.useState({ period: {}, unique: {} });\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, []);\n  // const [type, setType] = React.useState();\n\n  React.useEffect(() => {\n    doFetch(\"GET\", IAM_APP, UrlQuery(REPORTS_USERS(type), { ...params }))\n  }, [params])\n\n  return (\n    <PieChart width={268} height={300}>\n      <Legend align=\"right\" height={30} />\n      <Pie\n        data={data}\n        cx={134}\n        cy={134}\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={100}\n        innerRadius={60}\n        fill=\"#8884d8\"\n        dataKey=\"value\"\n      >\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n}\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/index.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/reportsTradeData.js",["990","991","992","993","994"],"import React from 'react';\nimport FiltersArea from './filtersArea';\nimport FiltersBars from './filtersBars';\nimport FiltersProgress from './filtersProgress';\n// import ActiveUsers from './activeUsers';\n// import AuthenticationChart from './authenticationChart';\nimport NumOfTrades from './numOfTrades';\nimport TradeBarChart from './tradeBarChart';\nimport TradeDonutChart from './tradeDonutChart';\nimport TradeProgressDonutChart from './tradeProgressDonutChart';\n// import SignUpUsers from './signUpUsers';\nimport '../layout/style.scss';\n\nconst ReportsTradesData = () => {\n    const [params, setParams] = React.useState({order: \"-updated_at\", status__in: \"in_progress\", size: 10, page: 0});\n\n  return (\n    <div className='reportsContent'>\n      <div className='d-flex justify-content-between'>\n\n        <div className=\"content w-100\">\n\n          <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n            <div className=\"d-flex text-nowrap\">\n\n              <img src=\"/assets/drawer/Polygon.svg\" />\n\n              <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>حجم معاملات بر اساس زمان</p>\n\n            </div>\n\n          </div>\n\n            <FiltersArea params={params} setParams={setParams} />\n\n          <NumOfTrades />\n\n        </div>\n\n      </div>\n\n      <div className='d-flex justify-content-between mt-3'>\n\n        <div className=\"content w-auto\">\n\n          <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n            <div className=\"d-flex\">\n\n              <img src=\"/assets/drawer/Polygon.svg\" />\n\n              <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تعداد معاملات بر اساس زمان</p>\n\n            </div>\n\n          </div>\n\n        <FiltersBars params={params} setParams={setParams} />\n\n          <TradeBarChart />\n\n        </div>\n\n        <div className=\"content w-auto\">\n\n          <div className=\" align-items-start d-flex flex-column mx-auto pt-2 w-auto\">\n\n            <div className=\"d-flex\">\n\n              <img src=\"/assets/drawer/Polygon.svg\" />\n\n              <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>درصد نوع بازار معملات</p>\n\n            </div>\n\n            {/* <Filters params={params} setParams={setParams} /> */}\n            <TradeDonutChart />\n\n          </div>\n\n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default ReportsTradesData;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/reportsOrdersData.js",["995","996","997","998","999","1000","1001"],"import React from 'react';\nimport FiltersArea from './filtersArea';\nimport FiltersBars from './filtersBars';\nimport FiltersProgress from './filtersProgress';\n// import ActiveUsers from './activeUsers';\n// import AuthenticationChart from './authenticationChart';\nimport NumOfOrders from './numOfOrders';\nimport OrderBarChart from './orderBarChart';\nimport OrderDonutChart from './orderDonutChart';\nimport OrderProgressDonutChart from './orderProgressDonutChart';\n// import SignUpUsers from './signUpUsers';\nimport '../layout/style.scss';\nimport { useFetchApi } from '../../../utils/hooks';\nimport { UrlQuery } from '../../../utils/utils';\nimport { TRADING_APP, REPORTS_ORDER } from '../../../utils/constants';\n\n\nconst ReportsOrdersData = () => {\n  const [params, setParams] = React.useState({ order: \"-updated_at\", status__in: \"in_progress\", size: 10, page: 0 });\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, []);\n\n  React.useEffect(() => {\n    doFetch(\"GET\", TRADING_APP, UrlQuery(REPORTS_ORDER, { ...params }))\n  }, [params])\n\n  console.log(\"data\", data);\n  return (\n    <div className='reportsContent'>\n      <div className='d-flex justify-content-between'>\n\n        <div className=\"content w-100\">\n\n          <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n            <div className=\"d-flex text-nowrap\">\n\n              <img src=\"/assets/drawer/Polygon.svg\" />\n\n              <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تعداد سفارش ها بر اساس زمان</p>\n\n            </div>\n\n          </div>\n\n          <FiltersArea params={params} setParams={setParams} />\n\n          <NumOfOrders data={data} />\n\n        </div>\n\n      </div>\n\n      <div className='d-flex justify-content-between mt-3'>\n\n        <div className=\"content w-auto\">\n\n          <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n            <div className=\"d-flex\">\n\n              <img src=\"/assets/drawer/Polygon.svg\" />\n\n              <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تعداد سفارش های موفق، باز و لغو شده</p>\n\n            </div>\n\n          </div>\n\n          <FiltersBars params={params} setParams={setParams} />\n\n          <OrderBarChart data={data} />\n\n        </div>\n\n        <div className=\"content w-auto\">\n\n          <div className=\" align-items-start d-flex flex-column mx-auto pt-2 w-auto\">\n\n            <div className=\"d-flex\">\n\n              <img src=\"/assets/drawer/Polygon.svg\" />\n\n              <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>درصد سفارش های موفق، باز و لغو شده</p>\n\n            </div>\n\n            {/* <Filters params={params} setParams={setParams} /> */}\n            <OrderDonutChart data={data} />\n\n          </div>\n\n        </div>\n\n      </div>\n      <div className='d-flex justify-content-between mt-3'>\n\n        <div className=\"content w-50 ms-2\">\n\n          <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n            <div className=\"d-flex\">\n\n              {/* <img src=\"/assets/drawer/Polygon.svg\" />\n\n              <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>تعداد سفارش های موفق، باز و لغو شده</p> */}\n\n            </div>\n\n          </div>\n\n          {/* <FiltersBars params={params} setParams={setParams} /> */}\n\n          {/* <OrderBarChart /> */}\n\n        </div>\n\n        <div className=\"content w-50 me-2\">\n\n          <div className=\" align-items-start d-flex flex-column mx-auto pt-2 w-auto\">\n\n            <div className=\"d-flex\">\n\n              <img src=\"/assets/drawer/Polygon.svg\" />\n\n              <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>درصد سفارش ها بر اساس نوع ارز</p>\n\n            </div>\n\n            <FiltersProgress params={params} setParams={setParams} />\n\n            <OrderProgressDonutChart data={data} />\n\n          </div>\n\n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default ReportsOrdersData;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/cardSectionOrder/index.js",["1002","1003","1004","1005","1006","1007","1008","1009","1010","1011"],"import { makeStyles, Paper } from '@material-ui/core';\nimport React from 'react';\nimport { IAM_APP, USERS_LIST_COUNT } from '../../../../utils/constants';\nimport { numDiscriminant } from '../../../../utils/discriminant';\nimport { useFetchApi } from '../../../../utils/hooks';\nimport { UrlQuery } from '../../../../utils/utils';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    //   flexWrap: 'wrap',\n      flexDirection: 'row',\n      alignContent: 'center',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      maxWidth: '1050px',\n      width: '1046',\n      '& > *': {\n        maxWidth: '235px',\n        height: '125px',\n        margin: '20px 0 20px 0',\n        // paddingLeft: \"20px\",\n        backgroundColor: '#293034',\n        display: 'flex',\n        flexDirection: 'row',\n        borderRadius: \"10px\",\n        flexWrap: 'nowrap',\n        alignContent: 'center',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      '& > div:nth-child(2n)': {\n          margin: \"0 10px\"\n      },\n      '& img': {\n          width : \"45px\"\n      }\n    },\n  }));\n  \nconst CardSection = () => {\n\n    const classes = useStyles();\n\n    const [params, setParams] = React.useState({  size: 10, page: 1 })\n\n    const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n  \n  \n  \n    React.useEffect(() => {\n  \n      doFetch(\"GET\", IAM_APP, UrlQuery(USERS_LIST_COUNT, params))\n  \n    }, [params])\n\n    console.log(\"users\",data)\n\n    return (\n        <div className={classes.root}>\n        <Paper className=\" container-fluid flex-nowrap\">\n            <div className=\"ps-1\">\n                <img src=\"/assets/drawer/users.svg\"/>\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}} className=\"text-nowrap\">تعداد کل سفارش ها</p>\n                <div style={{color:'#FFFFFF'}}>\n                    {/* <p>{numDiscriminant(data.users_count)}</p> */}\n                    <p>{data.map(item => item.user_count).reduce((prev, curr) => prev + curr, 0)}</p>\n                </div>\n            </div>\n        </Paper>\n        <Paper className=\" container-fluid flex-nowrap\">\n            <div className=\"ps-1\">\n                <img src=\"/assets/drawer/users.svg\" className=\"\"/>\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}} className=\"text-nowrap\">تعداد کل سفارش های موفق</p>\n                <div style={{color:'#FFFFFF'}}>\n                    <p>{data?.map(item => item.approve_state === \"approved\" ? item.user_count : null)}</p>\n                </div>\n            </div>\n        </Paper>        \n        <Paper className=\" container-fluid flex-nowrap\">\n            <div className=\"ps-1\">\n                <img src=\"/assets/drawer/users.svg\" />\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}} className=\"text-nowrap\">تعداد سفارش های باز</p>\n                <div style={{color:'#FFFFFF'}}>\n                <p>{data?.map(item => item.approve_state === \"rejected\" ? item.user_count : null)}</p>\n                </div>\n            </div>\n        </Paper>        \n        <Paper className=\" container-fluid flex-nowrap\">\n            <div className=\"ps-1\">\n                <img src=\"/assets/drawer/users.svg\" className=\"\"/>\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}} className=\"text-nowrap\">تعداد سفارش های امروز</p>\n                <div style={{color:'#FFFFFF'}}>\n                <p>{data?.map(item => item.approve_state === \"in_progress\" ? item.user_count : '-')}</p>\n                </div>\n            </div>\n        </Paper>        \n        <Paper className=\" container-fluid \">\n            <div className=\"ps-1\">\n                <img src=\"/assets/drawer/users.svg\"/>\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}}>تعداد سفارش‌های موفق امروز</p>\n                <div style={{color:'#FFFFFF'}}>\n                    <p>560000000</p>\n                </div>\n            </div>\n        </Paper>      \n        </div>\n    );\n}\n\nexport default CardSection;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/cardSectionTrade/index.js",["1012","1013","1014","1015","1016","1017","1018","1019","1020","1021"],"import { makeStyles, Paper } from '@material-ui/core';\nimport React from 'react';\nimport { IAM_APP, USERS_LIST_COUNT } from '../../../../utils/constants';\nimport { numDiscriminant } from '../../../../utils/discriminant';\nimport { useFetchApi } from '../../../../utils/hooks';\nimport { UrlQuery } from '../../../../utils/utils';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    //   flexWrap: 'wrap',\n      flexDirection: 'row',\n      alignContent: 'center',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      maxWidth: '1046px',\n      width: '1046',\n      '& > *': {\n        maxWidth: '230px',\n        height: '125px',\n        margin: '20px 0 20px 0',\n        // paddingLeft: \"20px\",\n        backgroundColor: '#293034',\n        display: 'flex',\n        flexDirection: 'row',\n        borderRadius: \"10px\",\n        flexWrap: 'wrap',\n        alignContent: 'center',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      '& > div:nth-child(2n)': {\n          margin: \"0 10px\"\n      },\n      '& img': {\n          width : \"45px\"\n      }\n    },\n  }));\nconst CardSection = () => {\n\n    const classes = useStyles();\n\n    const [params, setParams] = React.useState({  size: 10, page: 1 })\n\n    const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n  \n  \n  \n    React.useEffect(() => {\n  \n      doFetch(\"GET\", IAM_APP, UrlQuery(USERS_LIST_COUNT, params))\n  \n    }, [params])\n\n    console.log(\"users\",data)\n\n    return (\n        <div className={classes.root}>\n        <Paper className=\" container-fluid flex-nowrap\">\n            <div className=\"ps-1\">\n                <img src=\"/assets/drawer/users.svg\"/>\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}} className=\"text-nowrap\">تعداد کل معاملات</p>\n                <div style={{color:'#FFFFFF'}}>\n                    {/* <p>{numDiscriminant(data.users_count)}</p> */}\n                    <p>{data.map(item => item.user_count).reduce((prev, curr) => prev + curr, 0)}</p>\n                </div>\n            </div>\n        </Paper>\n        <Paper className=\" container-fluid flex-nowrap\">\n            <div className=\"ps-1\">\n                <img src=\"/assets/drawer/users.svg\"/>\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}} className=\"text-nowrap\">حجم کل معاملات</p>\n                <div style={{color:'#FFFFFF'}}>\n                    <p>{data?.map(item => item.approve_state === \"approved\" ? item.user_count : null)}</p>\n                </div>\n            </div>\n        </Paper>        \n        <Paper className=\" container-fluid flex-nowrap\">\n            <div className=\"ps-1\">\n                <img src=\"/assets/drawer/users.svg\"/>\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}} className=\"text-nowrap\">حجم کل معاملات خرید</p>\n                <div style={{color:'#FFFFFF'}}>\n                <p>{data?.map(item => item.approve_state === \"rejected\" ? item.user_count : null)}</p>\n                </div>\n            </div>\n        </Paper>        \n        <Paper className=\" container-fluid flex-nowrap\">\n            <div className=\"ps-1\">\n                <img src=\"/assets/drawer/users.svg\"/>\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}} className=\"text-nowrap\">حجم کل معاملات فروش</p>\n                <div style={{color:'#FFFFFF'}}>\n                <p>{data?.map(item => item.approve_state === \"in_progress\" ? item.user_count : '-')}</p>\n                </div>\n            </div>\n        </Paper>        \n        <Paper className=\" container-fluid \">\n            <div className=\"ps-1\">\n                <img src=\"/assets/drawer/users.svg\"/>\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}}>حجم معاملات امروز</p>\n                <div style={{color:'#FFFFFF'}}>\n                    <p>560000000</p>\n                </div>\n            </div>\n        </Paper>      \n        </div>\n    );\n}\n\nexport default CardSection;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/wallet.js",["1022","1023","1024"],"import { useContext, useEffect } from 'react';\n\nimport { UserContext } from '../context/provider';\n\n// import { ORDER_CREATE, ORDER_DELETE, ORDER_UPDATE, PRICE_UPDATE, TRADE_CREATE } from '../pages/dashboard/exchange/constants';\n\n// import { ACCOUNTING_APP, BASE_URL, TRADING_APP } from '../utils/constants';\n\n// import service from './service';\n\n\n\n//wallet api call\n\nconst WalletApi = (props) => {\n\n    const contextData = useContext(UserContext);\n\n\n    let ws = null;\n\n    // const walletData = () => {\n\n    //     const walletDataUrl = `${BASE_URL(ACCOUNTING_APP)}/wallet/`\n\n    //     service.get_api(walletDataUrl)\n\n    //         .then(resp => {\n\n    //             let data = resp.data.result\n\n    //             data?.map((item, index) => {\n\n    //                 if (item.c_type === \"irr\") {\n\n    //                     contextData.setWalletIrrCash(item.quantity);\n\n    //                 }\n\n    //             }\n\n    //             )\n\n    //             data?.forEach(v => { v.price = null; v.priceUsdtIrr = 0 });\n\n    //             contextData.setWallet(data);\n\n    //         })\n\n    // }\n\n    //add price to wallet\n\n    const walletUpdate = () => {\n\n        props.walletData?.map((item, index) => {\n\n            let price = null\n\n            let irr\n\n            if (contextData.priceUpdate) {\n                \n                price = contextData.priceUpdate.filter(itm => itm.symbol === item.c_type)\n                \n                irr = contextData.priceUpdate.filter(itm => itm.symbol === \"USDIRR\")\n                \n                // contextData.setToggleWalletPrice(true)\n                \n            }\n            return item.price = item.c_type === \"irr\" ? irr : price\n\n        })\n\n    }\n\n    //add irr price to wallet\n\n    const walletUpdatePrice = () => {\n\n        props.walletData?.map((item, index) => {\n\n            let priceValues = null\n\n            if (item.price && contextData.usdtIrr) {\n\n                priceValues = item.c_type === \"irr\" ? item.quantity : item.quantity * (item.price[0] ? item.price[0].current_price : 0) * contextData.usdtIrr.current_price\n\n                // contextData.setToggleWaletIrrValue(true)\n\n            }\n\n            // console.log(\"pricevalue\",priceValue)\n\n            return item.priceUsdtIrr = priceValues\n\n        })\n\n    }\n\n    //socket call\n\n    const runSocket = () => {\n\n        ws = new WebSocket(\"wss://websocket.mojex.devmoj.ir/api/v1/\");\n\n        ws.onopen = props.onopen;\n\n        ws.onmessage = (message) => {\n\n            let msgdata = JSON.parse(message.data);\n\n            switch (msgdata.type) {\n\n                case \"price_update\":\n                    // console.log(\"price update\",msgdata.data)\n                    contextData.setPriceUpdate(msgdata.data);\n\n                    let map = new Map();\n\n                    let data = msgdata.data;\n\n                    data.forEach(item => {\n\n                        map.set(item.symbol, item)\n\n                        let irr = map.get(\"USDIRR\")\n\n                        return contextData.setUsdtIrr(irr)\n\n                    });\n\n                    break;\n\n                default:\n\n                    break;\n\n            }\n\n        };\n\n    }\n\n    // useEffect(() => {\n\n    //     walletData();\n\n\n\n    // }, []);\n\n    useEffect(() => {\n\n        walletUpdate()\n\n    }, [props.walletData, contextData.priceUpdate, contextData.usdtIrr]);\n\n\n\n    useEffect(() => {\n\n        walletUpdatePrice()\n\n    // }, [contextData.wallet, contextData.toggleWalletPrice, contextData.usdtIrr]);\n    }, [props.walletData, contextData.usdtIrr]);\n\n\n\n    useEffect(() => {\n\n        runSocket();\n\n        return () => {\n\n            ws = null;\n\n        };\n\n    }, []);\n\n    return null;\n\n}\n\n\n\nexport default WalletApi;\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/orderProgressDonutChart.js",["1025","1026"],"// import \"./styles.css\";\nimport React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Cell, Legend } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 }\n];\n\nconst COLORS = [\"#10D078\", \"#F83A3A\", \"#FFAA00\", \"#558EFA\"];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.7;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\nexport default function OrderProgressDonutChart() {\n  return (\n    <PieChart width={500} height={300}>\n    <Legend align=\"right\" verticalAlign=\"top\" layout=\"vertical\" />\n      <Pie\n        data={data}\n        cx={134}\n        cy={134}\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={100}\n        innerRadius={60}\n        fill=\"#8884d8\"\n        dataKey=\"value\"\n      >\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n}\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/orderDonutChart.js",["1027","1028"],"// import \"./styles.css\";\nimport React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Cell, Legend } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 }\n];\n\nconst COLORS = [\"#10D078\", \"#F83A3A\", \"#FFAA00\", \"#558EFA\"];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.7;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\nexport default function OrderDonutChart() {\n  return (\n    <PieChart width={268} height={300}>\n    <Legend align=\"right\"  height={30}/>\n      <Pie\n        data={data}\n        cx={134}\n        cy={134}\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={100}\n        innerRadius={60}\n        fill=\"#8884d8\"\n        dataKey=\"value\"\n      >\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n}\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/orderBarChart.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/numOfOrders.js",["1029","1030"],"import React, { PureComponent, useState } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { useFetchApi } from '../../../utils/hooks';\nimport '../layout/style.scss'\n\n// const data = [\n//     {\n//         name: 'Page A',\n//         uv: 4000,\n//         pv: 2400,\n//         amt: 2400,\n//     },\n//     {\n//         name: 'Page B',\n//         uv: 3000,\n//         pv: 1398,\n//         amt: 2210,\n//     },\n//     {\n//         name: 'Page C',\n//         uv: 2000,\n//         pv: 9800,\n//         amt: 2290,\n//     },\n//     {\n//         name: 'Page D',\n//         uv: 2780,\n//         pv: 3908,\n//         amt: 2000,\n//     },\n//     {\n//         name: 'Page E',\n//         uv: 1890,\n//         pv: 4800,\n//         amt: 2181,\n//     },\n//     {\n//         name: 'Page F',\n//         uv: 2390,\n//         pv: 3800,\n//         amt: 2500,\n//     },\n//     {\n//         name: 'Page G',\n//         uv: 3490,\n//         pv: 4300,\n//         amt: 2100,\n//     },\n// ];\n// count: 1\n// date: \"2021-12-13\"\n// dest_wallet: \"btc\"\n// origin_wallet: \"usdt\"\n// quantity: 1\n// type: \"sell\"\n\nconst label = [\n    { key: \"uv\", color: \"#558EFA\", stopColor: \"#558EFA\" },\n    { key: \"pv\", color: \"#FFAA004D\", stopColor: \"#FFAA000D\" },\n    { key: \"amt\", color: \"#26A17B\", stopColor: \"#FFFFFF\" }\n]\n\nconst NumOfOrders = ({ data }) => {\n    const [barProps, setBarProps] = useState(\n        label.reduce(\n            (a, { key }) => {\n                a[key] = false;\n                return a;\n            },\n            { hover: null }\n        )\n    );\n    console.log(\"label\", label);\n    console.log(\"data\", data);\n\n    // const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, []);\n\n    // const handleLegendMouseEnter = (e) => {\n    //     if (!barProps[e.dataKey]) {\n    //         setBarProps({ ...barProps, hover: e.dataKey });\n    //     }\n    // };\n\n    // const handleLegendMouseLeave = (e) => {\n    //     setBarProps({ ...barProps, hover: null });\n    // };\n\n    const selectBar = (e) => {\n        console.log(\"element\", e)\n        setBarProps({\n            ...barProps,\n            [e.dataKey]: !barProps[e.dataKey],\n            hover: null\n        });\n    };\n    const renderLegend = (props) => {\n        const { payload } = props;\n        // console.log(\"payload\",payload)\n\n        return (\n            <div className='d-flex legendContainer'>\n                {\n                    payload.map((entry, index) => (\n                        <div className='legendItem'>\n                            <div className='dot mx-auto' style={{ backgroundColor: `${entry.color}` }} ></div>\n                            <div key={`item-${index}`}>{entry.value}</div>\n                            <span\n                                onClick={() => selectBar(entry)}\n                            // onMouseOver={() => handleLegendMouseEnter(entry)}\n                            // onMouseOut={() => handleLegendMouseLeave(entry)}\n                            >x</span>\n                        </div>\n                    ))\n                }\n            </div>\n        );\n    }\n    React.useEffect(() => {\n        // doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_ORDERS, { ...params }))\n    }, [\n        // params\n    ])\n    return (\n        <ResponsiveContainer width={1030} height=\"80%\">\n            <AreaChart height={250} data={data}\n                margin={{ top: 60, right: 10, left: 0, bottom: 0 }}>\n                <Legend align=\"right\" verticalAlign=\"top\" height={30} iconType=\"circle\" content={renderLegend} />\n                <defs>\n                    {label.map((label, index) => (\n                        <linearGradient id={label.key} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor={label.color} stopOpacity={0.8} />\n                            <stop offset=\"95%\" stopColor={label.stopColor} stopOpacity={0} />\n                        </linearGradient>\n                    ))}\n                </defs>\n                <XAxis dataKey=\"dest_wallet\" />\n                <YAxis orientation=\"left\" mirror={false} tickMargin={30} />\n                <CartesianGrid strokeDasharray=\"2 2\" vertical={false} horizontal={true} />\n                <Tooltip />\n                {label.map((label, index) => (\n                    <Area type=\"monotone\" dataKey={label.key} hide={barProps[label.key] === true} stroke={label.color} fillOpacity={1} fill={`url(#${label.key})`} />\n                ))}\n            </AreaChart>\n        </ResponsiveContainer>\n    );\n\n}\n\nexport default NumOfOrders;","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/filtersProgress.js",["1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045"],"import React, { useState } from 'react'\n\nimport {\n\n    MenuItem, Grid, Select, withStyles, TextField, InputAdornment, IconButton\n\n} from \"@material-ui/core\";\n\nimport InputBase from '@material-ui/core/InputBase';\n\nimport '../layout/style.scss'\n\nimport { UserContext } from '../../../context/provider';\n\nimport ConfigApi from '../../../utils/config-api';\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Radio } from 'antd';\n\n\nfunction FiltersProgress(props) {\n\n    const orderContextData = React.useContext(UserContext);\n\n    const [type, setType] = useState('');\n\n    const [tradeType, setTradeType] = useState('');\n\n    const [cryptoWallet, setCryptoWallet] = useState('');\n\n    const [nationalCode, setNationalCode] = useState('')\n\n    const [group, setGroup] = useState('');\n\n\n    const handleSelectChange = (e) => {\n\n        props.setParams(state => ({ ...state, [e.target.name]: e.target.value }));\n\n    }\n\n    const handleSwitchChange = (e) => {\n\n        props.setParams(state => ({ ...state, origin_wallet: e }));\n\n    }\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n\n            },\n\n        },\n\n    }))(InputBase);\n\n    //   const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    //   React.useEffect( () => {\n    //       doFetch(\"GET\", ACCOUNTING_APP, USERS_WALLET(7) )\n\n    //   }, [])\n    //   console.log(\"wallet\",data)\n    function onChange(e) {\n        console.log(`radio checked:${e.target.value}`);\n    }\n    return (\n        <Grid className=\"mb-3 ps-2 mt-2 position-relative flex-nowrap\" justify=\"flex-end\" container spacing={1}>\n\n            <ConfigApi />\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>سمت بازار</label>\n\n                <Select name=\"dest_wallet\" value={cryptoWallet} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setCryptoWallet(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه ارزها</MenuItem>\n\n                    {orderContextData.configData?.map(item => <MenuItem value={item.Value?.symbol?.toLowerCase()}>{item.Value?.title}</MenuItem>)}\n\n                </Select>\n\n            </Grid>\n\n        </Grid>\n\n    )\n}\n\nexport default FiltersProgress\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/filtersArea.js",["1046","1047","1048","1049","1050","1051","1052","1053","1054"],"import React, { useState } from 'react'\n\nimport {\n\n    MenuItem, Grid, Select, withStyles, TextField, InputAdornment, IconButton\n\n} from \"@material-ui/core\";\n\nimport InputBase from '@material-ui/core/InputBase';\n\nimport '../layout/style.scss'\n\nimport { UserContext } from '../../../context/provider';\n\nimport ConfigApi from '../../../utils/config-api';\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Radio } from 'antd';\n\n\nfunction FiltersArea(props) {\n\n    const orderContextData = React.useContext(UserContext);\n\n    const [type, setType] = useState('');\n\n    const [tradeType, setTradeType] = useState('');\n\n    const [cryptoWallet, setCryptoWallet] = useState('');\n\n    const [nationalCode, setNationalCode] = useState('')\n\n    const [group, setGroup] = useState('');\n\n\n    const handleSelectChange = (e) => {\n\n        props.setParams(state => ({ ...state, [e.target.name]: e.target.value }));\n\n    }\n\n    const handleSwitchChange = (e) => {\n\n        props.setParams(state => ({ ...state, origin_wallet: e }));\n\n    }\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n\n            },\n\n        },\n\n    }))(InputBase);\n\n    //   const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    //   React.useEffect( () => {\n    //       doFetch(\"GET\", ACCOUNTING_APP, USERS_WALLET(7) )\n\n    //   }, [])\n    //   console.log(\"wallet\",data)\n    function onChange(e) {\n        console.log(`radio checked:${e.target.value}`);\n    }\n    return (\n        <Grid className=\"mb-3 ps-2 mt-2 position-relative flex-nowrap\" justify=\"flex-end\" container spacing={1}>\n\n            <ConfigApi />\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>نوع ارز</label>\n\n                <Select name=\"dest_wallet\" value={cryptoWallet} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setCryptoWallet(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه ارزها</MenuItem>\n\n                    {orderContextData.configData?.map(item => <MenuItem value={item.Value?.symbol?.toLowerCase()}>{item.Value?.title}</MenuItem>)}\n\n                </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>سمت سفارش</label>\n\n                <Select name=\"type\" value={type} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setType(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه سفارش‌ها</MenuItem>\n\n                    <MenuItem value=\"buy\">خرید</MenuItem>\n\n                    <MenuItem value=\"sell\">فروش</MenuItem>\n\n                </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>نوع سفارش</label>\n\n                <Select name=\"trade_type\" value={tradeType} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setTradeType(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه سفارش‌ها</MenuItem>\n\n                    <MenuItem value=\"market\">سریع</MenuItem>\n\n                    <MenuItem value=\"limit\">محدود</MenuItem>\n\n                </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}> دسته‌بندی بر اساس</label>\n\n                <Radio.Group onChange={onChange} buttonStyle=\"solid\" defaultValue=\"e\">\n\n                    <Radio.Button value=\"a\">انتخاب بازه</Radio.Button>\n\n                    <Radio.Button value=\"b\">ماهانه</Radio.Button>\n\n                    <Radio.Button value=\"c\">هفتگی</Radio.Button>\n\n                    <Radio.Button value=\"d\">روزانه</Radio.Button>\n\n                    <Radio.Button value=\"e\">پیش فرض</Radio.Button>\n\n                </Radio.Group>\n\n            </Grid>\n\n        </Grid>\n\n    )\n}\n\nexport default FiltersArea\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/filtersBars.js",["1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067"],"import React, { useState } from 'react'\n\nimport {\n\n    MenuItem, Grid, Select, withStyles, TextField, InputAdornment, IconButton\n\n} from \"@material-ui/core\";\n\nimport InputBase from '@material-ui/core/InputBase';\n\nimport '../layout/style.scss'\n\nimport { UserContext } from '../../../context/provider';\n\nimport ConfigApi from '../../../utils/config-api';\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Radio } from 'antd';\n\n\nfunction FiltersBars(props) {\n\n    const orderContextData = React.useContext(UserContext);\n\n    const [type, setType] = useState('');\n\n    const [tradeType, setTradeType] = useState('');\n\n    const [cryptoWallet, setCryptoWallet] = useState('');\n\n    const [nationalCode, setNationalCode] = useState('')\n\n    const [group, setGroup] = useState('');\n\n\n    const handleSelectChange = (e) => {\n\n        props.setParams(state => ({ ...state, [e.target.name]: e.target.value }));\n\n    }\n\n    const handleSwitchChange = (e) => {\n\n        props.setParams(state => ({ ...state, origin_wallet: e }));\n\n    }\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n\n            },\n\n        },\n\n    }))(InputBase);\n\n    //   const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    //   React.useEffect( () => {\n    //       doFetch(\"GET\", ACCOUNTING_APP, USERS_WALLET(7) )\n\n    //   }, [])\n    //   console.log(\"wallet\",data)\n    function onChange(e) {\n        console.log(`radio checked:${e.target.value}`);\n    }\n    return (\n        <Grid className=\"mb-3 ps-2 mt-2 position-relative flex-nowrap\" justify=\"flex-end\" container spacing={1}>\n\n            <ConfigApi />\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>نوع ارز</label>\n\n                <Select name=\"dest_wallet\" value={cryptoWallet} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setCryptoWallet(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه ارزها</MenuItem>\n\n                    {orderContextData.configData?.map(item => <MenuItem value={item.Value?.symbol?.toLowerCase()}>{item.Value?.title}</MenuItem>)}\n\n                </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}> دسته‌بندی بر اساس</label>\n\n                <Radio.Group onChange={onChange} buttonStyle=\"solid\" defaultValue=\"e\">\n\n                    <Radio.Button value=\"a\">انتخاب بازه</Radio.Button>\n\n                    <Radio.Button value=\"b\">ماهانه</Radio.Button>\n\n                    <Radio.Button value=\"c\">هفتگی</Radio.Button>\n\n                    <Radio.Button value=\"d\">روزانه</Radio.Button>\n\n                    <Radio.Button value=\"e\">پیش فرض</Radio.Button>\n\n                </Radio.Group>\n\n            </Grid>\n\n        </Grid>\n\n    )\n}\n\nexport default FiltersBars\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/tradeProgressDonutChart.js",["1068","1069"],"// import \"./styles.css\";\nimport React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Cell, Legend } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 }\n];\n\nconst COLORS = [\"#10D078\", \"#F83A3A\", \"#FFAA00\", \"#558EFA\"];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.7;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\nexport default function TradeProgressDonutChart() {\n  return (\n    <PieChart width={500} height={300}>\n    <Legend align=\"right\" verticalAlign=\"top\" layout=\"vertical\" />\n      <Pie\n        data={data}\n        cx={134}\n        cy={134}\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={100}\n        innerRadius={60}\n        fill=\"#8884d8\"\n        dataKey=\"value\"\n      >\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n}\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/tradeDonutChart.js",["1070","1071"],"// import \"./styles.css\";\nimport React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Cell, Legend } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 }\n];\n\nconst COLORS = [\"#10D078\", \"#F83A3A\", \"#FFAA00\", \"#558EFA\"];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.7;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\nexport default function TradeDonutChart() {\n  return (\n    <PieChart width={268} height={300}>\n    <Legend align=\"right\"  height={30}/>\n      <Pie\n        data={data}\n        cx={134}\n        cy={134}\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={100}\n        innerRadius={60}\n        fill=\"#8884d8\"\n        dataKey=\"value\"\n      >\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n}\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/numOfTrades.js",["1072"],"import React, { PureComponent, useState } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport '../layout/style.scss'\n\nconst data = [\n    {\n        name: 'Page A',\n        uv: 4000,\n        pv: 2400,\n        amt: 2400,\n    },\n    {\n        name: 'Page B',\n        uv: 3000,\n        pv: 1398,\n        amt: 2210,\n    },\n    {\n        name: 'Page C',\n        uv: 2000,\n        pv: 9800,\n        amt: 2290,\n    },\n    {\n        name: 'Page D',\n        uv: 2780,\n        pv: 3908,\n        amt: 2000,\n    },\n    {\n        name: 'Page E',\n        uv: 1890,\n        pv: 4800,\n        amt: 2181,\n    },\n    {\n        name: 'Page F',\n        uv: 2390,\n        pv: 3800,\n        amt: 2500,\n    },\n    {\n        name: 'Page G',\n        uv: 3490,\n        pv: 4300,\n        amt: 2100,\n    },\n];\nconst label=[\n    {key:\"uv\",color:\"#558EFA\",stopColor:\"#558EFA\"},\n    {key:\"pv\",color:\"#FFAA004D\",stopColor:\"#FFAA000D\"},\n    {key:\"amt\",color:\"#26A17B\",stopColor:\"#FFFFFF\"}\n]\n\nconst NumOfTrades = () => {\n    const [barProps, setBarProps] = useState(\n        label.reduce(\n            (a, { key }) => {\n                a[key] = false;\n                return a;\n            },\n            { hover: null }\n            )\n            );\n            // const handleLegendMouseEnter = (e) => {\n            //     if (!barProps[e.dataKey]) {\n            //         setBarProps({ ...barProps, hover: e.dataKey });\n            //     }\n            // };\n            \n            // const handleLegendMouseLeave = (e) => {\n            //     setBarProps({ ...barProps, hover: null });\n            // };\n            \n            const selectBar = (e) => {\n                console.log(\"element\",e)\n                setBarProps({\n                    ...barProps,\n                    [e.dataKey]: !barProps[e.dataKey],\n                    hover: null\n                });\n            };\n            const renderLegend = (props) => {\n                const { payload } = props;\n                // console.log(\"payload\",payload)\n                \n                return (\n                    <div className='d-flex legendContainer'>\n                    {\n                        payload.map((entry, index) => (\n                            <div className='legendItem'>\n                            <div className='dot mx-auto' style={{backgroundColor:`${entry.color}`}} ></div>\n                            <div key={`item-${index}`}>{entry.value}</div>\n                            <span \n                            onClick={() => selectBar(entry)} \n                            // onMouseOver={() => handleLegendMouseEnter(entry)}\n                            // onMouseOut={() => handleLegendMouseLeave(entry)}\n                            >x</span>\n                        </div>\n                      ))\n                    }\n                  </div>\n                );\n              }\n            return (\n                <ResponsiveContainer width={1030} height=\"80%\">\n                <AreaChart height={250} data={data}\n                    margin={{ top: 60, right: 10, left:0, bottom: 0 }}>\n                <Legend align=\"right\" verticalAlign=\"top\" height={30} iconType=\"circle\" content={renderLegend}/>\n                    <defs>\n                        {label.map((label,index) => (\n                        <linearGradient id={label.key} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor={label.color} stopOpacity={0.8} />\n                            <stop offset=\"95%\" stopColor={label.stopColor} stopOpacity={0} />\n                        </linearGradient>\n                        ))}\n                    </defs>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis orientation=\"left\" mirror={false} tickMargin={30}/>\n                    <CartesianGrid strokeDasharray=\"2 2\" vertical={false} horizontal={true} />\n                    <Tooltip/>\n                    {label.map((label,index) => (\n                        <Area type=\"monotone\" dataKey={label.key} hide={barProps[label.key] === true} stroke={label.color} fillOpacity={1} fill={`url(#${label.key})`} />\n                    ))}\n                </AreaChart>\n            </ResponsiveContainer>\n        );\n    \n}\n\nexport default NumOfTrades;","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/tradeBarChart.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/filtersProgress.js",["1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087"],"import React, { useState } from 'react'\n\nimport {\n\n    MenuItem, Grid, Select, withStyles, TextField, InputAdornment, IconButton\n\n} from \"@material-ui/core\";\n\nimport InputBase from '@material-ui/core/InputBase';\n\nimport '../layout/style.scss'\n\nimport { UserContext } from '../../../context/provider';\n\nimport ConfigApi from '../../../utils/config-api';\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Radio } from 'antd';\n\n\nfunction FiltersProgress(props) {\n\n    const tradeContextData = React.useContext(UserContext);\n\n    const [type, setType] = useState('');\n\n    const [tradeType, setTradeType] = useState('');\n\n    const [cryptoWallet, setCryptoWallet] = useState('');\n\n    const [nationalCode, setNationalCode] = useState('')\n\n    const [group, setGroup] = useState('');\n\n\n    const handleSelectChange = (e) => {\n\n        props.setParams(state => ({ ...state, [e.target.name]: e.target.value }));\n\n    }\n\n    const handleSwitchChange = (e) => {\n\n        props.setParams(state => ({ ...state, origin_wallet: e }));\n\n    }\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n\n            },\n\n        },\n\n    }))(InputBase);\n\n    //   const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    //   React.useEffect( () => {\n    //       doFetch(\"GET\", ACCOUNTING_APP, USERS_WALLET(7) )\n\n    //   }, [])\n    //   console.log(\"wallet\",data)\n    function onChange(e) {\n        console.log(`radio checked:${e.target.value}`);\n    }\n    return (\n        <Grid className=\"mb-3 ps-2 mt-2 position-relative flex-nowrap\" justify=\"flex-end\" container spacing={1}>\n\n            <ConfigApi />\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>سمت بازار</label>\n\n                <Select name=\"dest_wallet\" value={cryptoWallet} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setCryptoWallet(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه ارزها</MenuItem>\n\n                    {tradeContextData.configData?.map(item => <MenuItem value={item.Value?.symbol?.toLowerCase()}>{item.Value?.title}</MenuItem>)}\n\n                </Select>\n\n            </Grid>\n\n        </Grid>\n\n    )\n}\n\nexport default FiltersProgress\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/filtersBars.js",["1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100"],"import React, { useState } from 'react'\n\nimport {\n\n    MenuItem, Grid, Select, withStyles, TextField, InputAdornment, IconButton\n\n} from \"@material-ui/core\";\n\nimport InputBase from '@material-ui/core/InputBase';\n\nimport '../layout/style.scss'\n\nimport { UserContext } from '../../../context/provider';\n\nimport ConfigApi from '../../../utils/config-api';\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Radio } from 'antd';\n\n\nfunction FiltersBars(props) {\n\n    const tradeContextData = React.useContext(UserContext);\n\n    const [type, setType] = useState('');\n\n    const [tradeType, setTradeType] = useState('');\n\n    const [cryptoWallet, setCryptoWallet] = useState('');\n\n    const [nationalCode, setNationalCode] = useState('')\n\n    const [group, setGroup] = useState('');\n\n\n    const handleSelectChange = (e) => {\n\n        props.setParams(state => ({ ...state, [e.target.name]: e.target.value }));\n\n    }\n\n    const handleSwitchChange = (e) => {\n\n        props.setParams(state => ({ ...state, origin_wallet: e }));\n\n    }\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n\n            },\n\n        },\n\n    }))(InputBase);\n\n    //   const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    //   React.useEffect( () => {\n    //       doFetch(\"GET\", ACCOUNTING_APP, USERS_WALLET(7) )\n\n    //   }, [])\n    //   console.log(\"wallet\",data)\n    function onChange(e) {\n        console.log(`radio checked:${e.target.value}`);\n    }\n    return (\n        <Grid className=\"mb-3 ps-2 mt-2 position-relative flex-nowrap\" justify=\"flex-end\" container spacing={1}>\n\n            <ConfigApi />\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>نوع بازار</label>\n\n                <Select name=\"dest_wallet\" value={cryptoWallet} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setCryptoWallet(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه ارزها</MenuItem>\n\n                    {tradeContextData.configData?.map(item => <MenuItem value={item.Value?.symbol?.toLowerCase()}>{item.Value?.title}</MenuItem>)}\n\n                </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}> زمان</label>\n\n                <Radio.Group onChange={onChange} buttonStyle=\"solid\" defaultValue=\"e\">\n\n                    <Radio.Button value=\"a\">انتخاب بازه</Radio.Button>\n\n                    <Radio.Button value=\"b\">ماهانه</Radio.Button>\n\n                    <Radio.Button value=\"c\">هفتگی</Radio.Button>\n\n                    <Radio.Button value=\"d\">روزانه</Radio.Button>\n\n                    <Radio.Button value=\"e\">پیش فرض</Radio.Button>\n\n                </Radio.Group>\n\n            </Grid>\n\n        </Grid>\n\n    )\n}\n\nexport default FiltersBars\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/trades/filtersArea.js",["1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111"],"import React, { useState } from 'react'\n\nimport {\n\n    MenuItem, Grid, Select, withStyles, TextField, InputAdornment, IconButton\n\n} from \"@material-ui/core\";\n\nimport InputBase from '@material-ui/core/InputBase';\n\nimport '../layout/style.scss'\n\nimport { UserContext } from '../../../context/provider';\n\nimport ConfigApi from '../../../utils/config-api';\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Radio } from 'antd';\n\n\nfunction FiltersArea(props) {\n\n    const tradeContextData = React.useContext(UserContext);\n\n    const [type, setType] = useState('');\n\n    const [tradeType, setTradeType] = useState('');\n\n    const [cryptoWallet, setCryptoWallet] = useState('');\n\n    const [nationalCode, setNationalCode] = useState('')\n\n    const [group, setGroup] = useState('');\n\n\n    const handleSelectChange = (e) => {\n\n        props.setParams(state => ({ ...state, [e.target.name]: e.target.value }));\n\n    }\n\n    const handleSwitchChange = (e) => {\n\n        props.setParams(state => ({ ...state, origin_wallet: e }));\n\n    }\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n\n            },\n\n        },\n\n    }))(InputBase);\n\n    //   const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    //   React.useEffect( () => {\n    //       doFetch(\"GET\", ACCOUNTING_APP, USERS_WALLET(7) )\n\n    //   }, [])\n    //   console.log(\"wallet\",data)\n    function onChange(e) {\n        console.log(`radio checked:${e.target.value}`);\n    }\n    return (\n        <Grid className=\"mb-3 ps-2 mt-2 position-relative flex-nowrap\" justify=\"flex-end\" container spacing={1}>\n\n            <ConfigApi />\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>نوع ارز</label>\n\n                <Select name=\"dest_wallet\" value={cryptoWallet} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setCryptoWallet(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه ارزها</MenuItem>\n\n                    {tradeContextData.configData?.map(item => <MenuItem value={item.Value?.symbol?.toLowerCase()}>{item.Value?.title}</MenuItem>)}\n\n                </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>نوع بازار</label>\n\n                <Select name=\"type\" value={type} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setType(e.target.value) }} select size=\"small\">\n\n                    <MenuItem value=\"\">همه سفارش‌ها</MenuItem>\n\n                    <MenuItem value=\"buy\">خرید</MenuItem>\n\n                    <MenuItem value=\"sell\">فروش</MenuItem>\n\n                </Select>\n\n            </Grid>\n\n            <Grid item className=\"d-flex\">\n\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}>زمان</label>\n\n                <Radio.Group onChange={onChange} buttonStyle=\"solid\" defaultValue=\"e\">\n\n                    <Radio.Button value=\"a\">انتخاب بازه</Radio.Button>\n\n                    <Radio.Button value=\"b\">ماهانه</Radio.Button>\n\n                    <Radio.Button value=\"c\">هفتگی</Radio.Button>\n\n                    <Radio.Button value=\"d\">روزانه</Radio.Button>\n\n                    <Radio.Button value=\"e\">پیش فرض</Radio.Button>\n\n                </Radio.Group>\n\n            </Grid>\n\n        </Grid>\n\n    )\n}\n\nexport default FiltersArea\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/index.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/cardSection/index.js",["1112","1113","1114","1115","1116","1117","1118","1119","1120"],"import { makeStyles, Paper } from '@material-ui/core';\nimport React from 'react';\nimport { IAM_APP, USERS_LIST_COUNT } from '../../../../utils/constants';\nimport { numDiscriminant } from '../../../../utils/discriminant';\nimport { useFetchApi } from '../../../../utils/hooks';\nimport { UrlQuery } from '../../../../utils/utils';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        //   flexWrap: 'wrap',\n        flexDirection: 'row',\n        alignContent: 'center',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        maxWidth: '1050px',\n        width: '1046',\n        '& > *': {\n            maxWidth: '235px',\n            height: '125px',\n            margin: '20px 0 20px 0',\n            // paddingLeft: \"20px\",\n            backgroundColor: '#293034',\n            display: 'flex',\n            flexDirection: 'row',\n            borderRadius: \"10px\",\n            flexWrap: 'nowrap',\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        '& > div:nth-child(2n)': {\n            margin: \"0 10px\"\n        },\n        '& img': {\n            width: \"45px\"\n        }\n    },\n}));\nconst CardSection = () => {\n\n    const classes = useStyles();\n\n    const [params, setParams] = React.useState({ size: 10, page: 1 })\n\n    const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n\n\n    React.useEffect(() => {\n\n        doFetch(\"GET\", IAM_APP, UrlQuery(USERS_LIST_COUNT, params))\n\n    }, [params])\n\n    console.log(\"users\", data)\n\n    return (\n        <div className={classes.root}>\n            <Paper className=\" container-fluid flex-nowrap\">\n                <div className=\"ps-4\">\n                    <img src=\"/assets/drawer/users.svg\" className=\"w-100\" />\n                </div>\n                <div className=\"text-center\">\n                    <p style={{ color: '#B4B1B1' }} className=\"text-nowrap\">تعداد کل کاربران</p>\n                    <div style={{ color: '#FFFFFF' }}>\n                        {/* <p>{numDiscriminant(data.users_count)}</p> */}\n                        <p>{data.map(item => item.user_count).reduce((prev, curr) => prev + curr, 0)}</p>\n                    </div>\n                </div>\n            </Paper>\n            <Paper className=\" container-fluid flex-nowrap\">\n                <div className=\"ps-4\">\n                    <img src=\"/assets/drawer/users.svg\" className=\"\" />\n                </div>\n                <div className=\"text-center\">\n                    <p style={{ color: '#B4B1B1' }} className=\"text-nowrap\">کاربران احرازهویت شده</p>\n                    <div style={{ color: '#FFFFFF' }}>\n                        <p>{data?.map(item => item.approve_state === \"approved\" ? item.user_count : null)}</p>\n                    </div>\n                </div>\n            </Paper>\n            <Paper className=\" container-fluid flex-nowrap\">\n                <div className=\"ps-4\">\n                    <img src=\"/assets/drawer/users.svg\" className=\"w-100\" />\n                </div>\n                <div className=\"text-center\">\n                    <p style={{ color: '#B4B1B1' }} className=\"text-nowrap\">کاربران رد شده</p>\n                    <div style={{ color: '#FFFFFF' }}>\n                        <p>{data?.map(item => item.approve_state === \"rejected\" ? item.user_count : null)}</p>\n                    </div>\n                </div>\n            </Paper>\n            <Paper className=\" container-fluid flex-nowrap\">\n                <div className=\"ps-4\">\n                    <img src=\"/assets/drawer/users.svg\" className=\"\" />\n                </div>\n                <div className=\"text-center\">\n                    <p style={{ color: '#B4B1B1' }} className=\"text-nowrap\">کاربران در حال انتظار</p>\n                    <div style={{ color: '#FFFFFF' }}>\n                        <p>{data?.map(item => item.approve_state === \"in_progress\" ? item.user_count : '-')}</p>\n                    </div>\n                </div>\n            </Paper>\n            {/* <Paper className=\" container-fluid \">\n            <div className=\"ps-4\">\n                <img src=\"/assets/drawer/users.svg\"/>\n            </div>\n            <div className=\"text-center\">\n                <p style={{color:'#B4B1B1'}}>تعداد کل کاربران</p>\n                <div style={{color:'#FFFFFF'}}>\n                    <p>560000000</p>\n                </div>\n            </div>\n        </Paper>       */}\n        </div>\n    );\n}\n\nexport default CardSection;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userDatagrid/index.js",["1121","1122","1123","1124"],"import React from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Button } from '@material-ui/core';\n\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../../../utils/hooks\";\n\nimport { IAM_APP, USERS_LIST } from '../../../../utils/constants';\n\nimport { UrlQuery } from '../../../../utils/utils';\n\nimport { useHistory } from 'react-router-dom';\n\nimport Filters from './filters';\n\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\n\nfunction CustomPagination() {\n\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n\n  return (\n\n    <Pagination\n\n      className={classes.root}\n\n      shape=\"rounded\"\n\n      color=\"primary\"\n\n      // variant=\"contained\"\n\n      count={state.pagination.pageCount}\n\n      page={state.pagination.page + 1}\n\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n\n    />\n\n  );\n\n}\n\n\n\nfunction UsersDataGrid(props) {\n\n  const history = useHistory()\n\n\n  const columns = [\n\n    {\n\n      field: 'name',\n\n      headerName: 'نام کاربر',\n\n      flex: 1,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      valueFormatter: (params) => `${params.row?.credentials?.first_name ?? '-'} ${params.row?.credentials?.last_name ?? ''}`\n\n    },\n\n    {\n\n      field: 'phone',\n\n      headerName: 'شماره تلفن',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      valueFormatter: (params) => `${params.row?.mobile}`\n\n    },\n\n    {\n\n      field: 'nationalNo',\n\n      headerName: 'کدملی',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      valueFormatter: (params) => `${params.row?.credentials?.national_code ?? '-'}`\n\n    },\n\n    {\n\n      field: 'age2',\n\n      headerName: 'احرازهویت',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (params) => {\n\n        let text = 'در انتظار احراز هویت'\n\n        let pic = ''\n\n        switch (params?.row?.approve_state) {\n\n          case \"approved\":\n\n            text = 'احراز هویت شده'\n\n            pic = '/assets/drawer/check_circle-24px.svg'\n\n            break;\n\n          case \"rejected\":\n\n            text = 'رد شده'\n\n            pic = '/assets/drawer/cancel-24px (1).svg'\n\n            break;\n\n          default:\n\n            break;\n\n        }\n\n        return (\n\n          <div className=\"d-flex\">\n\n            <div className=\"ms-2\" key={params.row?.id}>\n\n              {text}\n\n            </div>\n\n            <img src={pic} />\n\n          </div>\n\n        )\n\n      }\n\n    },\n\n    {\n\n      field: '',\n\n      headerName: '',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) => <div className=\"d-flex justify-content-end w-100\">\n\n        <Button color=\"primary\" variant=\"contained\" onClick={() => { history.push(`users/detail/${params.row?.id}`) }} className=\"ms-2\">اطلاعات کاربر</Button>\n\n      </div>\n\n      ,\n\n    },\n\n  ];\n\n\n\n  const [params, setParams] = React.useState({ size: 10, page: 1 })\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n\n\n  React.useEffect(() => {\n\n    doFetch(\"GET\", IAM_APP, UrlQuery(USERS_LIST, params))\n\n  }, [params])\n\n\n\n  return (\n\n    <div className=\"content\">\n\n      <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto \">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1\">کاربران </p>\n\n        </div>\n\n        <Filters params={params} setParams={setParams} />\n\n      </div>\n\n      <div className=\"d-flex px-3\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n\n          <DataGrid\n\n            style={{ border: 0 }}\n\n            autoHeight\n\n            rows={data?.items ?? []}\n\n            loading={isLoading}\n\n            columns={columns}\n\n            getRowClassName={\n\n              params => 'grid-content'\n\n            }\n\n            rowHeight={58}\n\n            isRowSelectable={false}\n\n            components={{\n\n              Pagination: CustomPagination\n\n            }}\n\n            pageSize={10}\n\n            rowCount={data?.total}\n\n            paginationMode=\"server\"\n\n            onPageChange={(param) => doFetch(\"GET\", IAM_APP, UrlQuery(USERS_LIST, { ...params, page: param + 1 }))}\n\n            disableSelectionOnClick\n\n            disableColumnMenu\n\n          />\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default UsersDataGrid\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userDatagrid/filters.js",["1125"],"import React, { useState } from 'react'\nimport { TextField, MenuItem, Grid, IconButton, InputAdornment, InputBase, withStyles, Select } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\n\nfunction Filters(props) {\n\n    const [mobile, setMobile] = useState('')\n\n    const [type, setType] = useState('');\n\n    const [group, setGroup] = useState('');\n\n\n    const handleSelectChange = (e) => {\n        props.setParams( state => ({...state, [e.target.name]: e.target.value}) );\n    }\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n\n            },\n\n        },\n\n    }))(InputBase);\n\n    React.useEffect( () => {\n        if (mobile === ''){\n            props.setParams( state => state)\n        }\n    }, [mobile])\n\n    return (\n        <Grid className=\"mb-3 ps-2\" justify=\"flex-end\" container spacing={1}>\n            <Grid item className=\"d-flex\">\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}> وضعیت کاربر</label>\n                <Select name=\"approve_state__in\" value={type} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setType(e.target.value) }} select size=\"small\">\n                    <MenuItem value=\"\">همه</MenuItem>\n                    <MenuItem value=\"approved\">احرازهویت شده</MenuItem>\n                    <MenuItem value=\"rejected\">رد شده</MenuItem>\n                    <MenuItem value=\"pending\">درحال انتظار</MenuItem>\n                    <MenuItem value=\"initialized\">احرازهویت نشده</MenuItem>\n                </Select> \n            </Grid>\n            <Grid item className=\"d-flex\">\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}> دسته‌بندی بر اساس</label>\n                <Select name=\"group\" value={group} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setGroup(e.target.value) }} select size=\"small\">\n                    <MenuItem value=\"\">همه</MenuItem>\n                    <MenuItem value=\"bot\">بات</MenuItem>\n                    <MenuItem value=\" \">کاربر</MenuItem>\n                </Select> \n            </Grid>\n            <Grid item ><TextField \n                            value={mobile} \n                            type=\"search\" \n                            onChange={ e => setMobile(e.target.value)} \n                            name=\"search\" \n                            size=\"small\" \n                            placeholder=\"جست و جو\"\n                            InputProps={{\n                                endAdornment: (\n                                  <InputAdornment>\n                                    <IconButton onClick={ () => props.setParams( state => ({...state, search: mobile}))}>\n                                      <SearchIcon />\n                                    </IconButton>\n                                  </InputAdornment>\n                                )\n                              }}\n                        />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Filters\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/usersForm/selectedForm/index.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userDeposits/index.js",["1126","1127"],"import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Field, Formik, Form } from \"formik\";\nimport { Grid, CircularProgress, Button } from '@material-ui/core';\nimport DepositDataGrid from './dataGrid';\n\n\nfunction UserDeposits() {\n\n    let loginLoading = false\n\n    return (\n        <div className=\"content mt-5 p-4\">\n            <div className=\"d-flex justify-content-between\">\n                <div className=\"d-flex w-25\">\n                    <img src=\"/assets/drawer/Polygon.svg\" />\n                    <p className=\"font_title_name me-1\">شارژ کیف پول </p>\n                </div>\n                <Link className=\"text-decoration-none\" style={{color: \"#10D078\"}} to={'/users'} >بازگشت به کیف پول {`->`} </Link>\n            </div>\n            <div className=\"mt-4\">\n                <Formik\n                    initialValues={{ account_number: '', tracking_code: '' }}\n                    enableReinitialize={true}\n                    // validate={this.validate}\n                    // onSubmit={handleSubmit}\n                >\n                    <Form>\n                        <div style={{flexGrow: 1}} >\n                            <Grid container spacing={3} justify=\"space-between\" className=\"p-3\">\n                                <Grid item md={5}>\n                                    <div className=\"d-flex w-100\" style={{maxHeight: \"34px\"}}>\n                                        <label className=\"text-end text-white ms-4\" style={{minWidth: \"90px\"}} htmlFor=\"account_number\">شماره حساب</label>\n                                        <Field\n                                            type=\"text\"\n                                            name=\"account_number\"\n                                            placeholder=\"\"\n                                            required\n                                            className=\"form-control bg_input input_text\"\n                                        />\n                                    </div>\n                                </Grid>\n                                <Grid item md={5} className=\"ms-5\">\n                                    <div className=\"d-flex w-100\" style={{maxHeight: \"34px\"}}> \n                                        <label className=\"text-end text-white fs-6 ms-4\" style={{minWidth: \"90px\"}}  htmlFor=\"tracking_code\">کدپیگیری</label>\n                                        <Field\n                                            label=\"dasfdas\"\n                                            type=\"text\"\n                                            name=\"tracking_code\"\n                                            placeholder=\"\"\n                                            required\n                                            className=\"form-control bg_input input_text\"\n                                        />\n                                    </div>\n                                </Grid>\n                            </Grid>\n                            <Grid container spacing={3} justify=\"space-between\" className=\"p-3\">\n                                <Grid item md={5}>\n                                    <div className=\"d-flex w-100\" style={{maxHeight: \"34px\"}}>\n                                        <label className=\"text-end text-white fs-6 ms-4\" style={{minWidth: \"90px\"}} htmlFor=\"amount\">مبلغ (تومان)</label>\n                                        <Field\n                                            type=\"text\"\n                                            name=\"amount\"\n                                            placeholder=\"\"\n                                            required\n                                            className=\"form-control bg_input input_text\"\n                                        />\n                                    </div>\n                                </Grid>\n                            </Grid>\n\n                            {/* { Boolean(hasError) && <p className=\"text-danger\">{hasError}</p> } */}\n                            <div className=\"mt-4 pt-3 ms-5 ps-2 d-flex justify-content-end\">\n                                <Button disabled={loginLoading} variant=\"contained\" type=\"submit\" color=\"primary\" >\n                                    شارژ کیف پول\n                                    { loginLoading && <CircularProgress size={24} className=\"position-absolute\" />}\n                                </Button>\n                            </div>\n                        </div>\n                    </Form>\n                </Formik>\n            </div>\n            <div className=\"d-flex justify-content-between mt-4\">\n                <div className=\"d-flex w-25\">\n                    <img src=\"/assets/drawer/Polygon.svg\" />\n                    <p className=\"font_title_name me-1\"> سابقه شارژ کیف پول</p>\n                </div>\n            </div>\n            <DepositDataGrid />\n        </div>\n    )\n}\n\nexport default UserDeposits\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/usersForm/index.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userDeposits/dataGrid.js",["1128","1129","1130","1131","1132","1133","1134"],"import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\nimport { Pagination } from '@material-ui/lab';\nimport { useFetchApi } from \"../../../../utils/hooks\";\nimport { USERS_ORDERS } from '../../../../utils/constants';\nimport { timeToStr, UrlQuery } from '../../../../utils/utils';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { round_ten_thousand } from '../../../../utils/math-round';\n\n\nconst useStyles = makeStyles({\n  root: {\n    // display: 'flex',\n    margin: '0 auto',\n  },\n});\n\nfunction CustomPagination() {\n  const { state, apiRef } = useGridSlotComponentProps();\n  const classes = useStyles();\n\n  return (\n    <Pagination\n      className={classes.root}\n      shape=\"rounded\"\n      color=\"primary\"\n      // variant=\"contained\"\n      count={state.pagination.pageCount}\n      page={state.pagination.page + 1}\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    />\n  );\n}\n\nfunction DepositDataGrid(props) {\n\n  const history = useHistory()\n\n  const columns = [\n    {\n      field: 'tracking_code',\n      headerName: 'شناسه',\n      flex: 1,\n      type: 'string',\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (params) => `${params.row?.tracking_code.slice(0, 8)}`\n    },\n    {\n      field: 'type',\n      headerName: 'سمت سفارش',\n      flex: 1,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (params) => (\n        <div className=\"d-flex\">\n          {params.row?.trade_type === \"sell\" ? <span className=\"text-danger\">فروش</span> : <span className=\"text-success\">خرید</span>}\n        </div>\n      )\n    },\n    {\n      field: 'trade_type',\n      headerName: 'نوع سفارش',\n      flex: 1,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (params) => (\n        <div className=\"d-flex\">\n          {params.row?.trade_type === \"limit\" ? \"محدود\" : \"سریع\"}\n        </div>\n      )\n    },\n    {\n      field: 'dest_wallet',\n      headerName: 'نوع ارز',\n      flex: 0.5,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n    },\n    {\n      field: 'unit_price',\n      headerName: 'قیمت سفارش',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n    },\n    {\n      field: 'average_unit_price',\n      headerName: ' میانگین قیمت سفارش',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n    },\n    {\n      field: 'quantity',\n      headerName: 'مقدار',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 0.5,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n    },\n    {\n      field: 'total',\n      headerName: 'مبلغ کل',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (params) => parseInt(params?.row?.unit_price) * parseInt(params?.row?.quantity)\n    },\n    {\n      field: 'progress',\n      headerName: 'پرشده',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 0.5,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (values) => {\n        let fill = values.value / values.row.quantity\n        return <>\n          {(round_ten_thousand(fill === Infinity ? 1 : fill) * 100)}%\n        </>\n      }\n    },\n    {\n      field: 'created_at',\n      headerName: 'تاریخ',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n    },\n    {\n      field: 'status',\n      headerName: 'وضعیت',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (params) => <div className=\"d-flex justify-content-end w-100\">\n        {\n          params?.row?.status === \"in_progress\" ? (<Button variant=\"outlined\" onClick={() => { }} className=\"ms-2 border-danger text-danger\">لغو سفارش</Button>)\n            : (\n              params?.row?.status === \"success\" ? '' : ''\n            )\n        }\n      </div>\n    }\n  ];\n\n  const [params, setParams] = React.useState({ order: \"-updated_at\", size: 10, page: 0 })\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n  const { id } = useParams()\n\n  React.useEffect(() => {\n    if (id) {\n      // doFetch(\"GET\", UrlQuery(USERS_ORDERS, {...params, owner_id: id}) )\n    }\n  }, [params])\n\n  return (\n    <div className=\"d-flex px-3 mt-3\">\n      <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n        <DataGrid\n          style={{ border: 0 }}\n          autoHeight\n          classes={{\n            root: \"grid-header-wrapper-alt\"\n          }}\n          rows={data?.items ?? []}\n          loading={isLoading}\n          columns={columns}\n          getRowClassName={\n            params => 'grid-content-alt'\n          }\n          headerHeight={50}\n          rowHeight={52}\n          hideFooterPagination\n          isRowSelectable={false}\n          components={{\n            Pagination: CustomPagination\n          }}\n          pageSize={10}\n          rowCount={data?.total}\n          paginationMode=\"server\"\n          // onPageChange={ (param) => doFetch(\"GET\", UrlQuery(USERS_ORDERS, {...params, owner_id: id, page: param}) )}\n          disableSelectionOnClick\n          disableColumnMenu\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default DepositDataGrid\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/usersForm/Wizard.js",["1135"],"import React from 'react';\nimport { UserContext } from '../../../../context/provider';\nimport { Button } from \"@material-ui/core\"\nimport { Formik } from \"formik\";\nimport PopUp from '../../../popUp';\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n// import { Prompt } from 'react-router';\n\nclass Wizard extends React.Component {\n    static Page = ({ children, parentState }) => {\n        if (children) {\n            return children(parentState);\n        } return null\n    };\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n    static contextType = UserContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 0,\n            values: props.initialValues,\n            // toggle: false,\n            blocked: false,\n            save: false,\n            isAuth: false\n            // upload: false\n        };\n    }\n\n    history = this.props;\n    validate = values => {\n        const activePage = React.Children.toArray(this.props.children)[\n            this.state.page\n        ];\n        return activePage.props.validate ? activePage.props.validate(values) : {};\n    };\n\n\n    handleSubmit = (values) => {\n        // console.log(values);\n        const { onSubmit } = this.props;\n        if (this.state.save) {\n            return (\n                onSubmit({ values: values, save: this.state.save }),\n                this.setState({ save: false })\n            )\n        }\n        if (this.state.isAuth) {\n            return (\n                onSubmit({ values: values, isAuth: this.state.isAuth }),\n                this.setState({ isAuth: false })\n            )\n        }\n    };\n\n\n    render() {\n        const { children } = this.props;\n        const { page, values } = this.state;\n        const activePage = React.Children.toArray(children)[page];\n        var data = this.context;\n\n\n        return (\n            <Formik\n                initialValues={values}\n                enableReinitialize={true}\n                validate={this.validate}\n                onSubmit={this.handleSubmit}\n            >\n                {props => (\n                    <form onSubmit={props.handleSubmit}>\n                        <Link className=\"position-absolute d-flex text-decoration-none start-0 top-0 m-3 ms-5\" style={{ color: \"#10D078\" }} to={'/users/users'} >بازگشت به لیست کاربران {`->`} </Link>\n                        {/* <a to=\"\">بازگشت به لیست کاربران</a> */}\n                        {React.cloneElement(activePage, { parentState: { ...props } })}\n\n                        {/* <React.Fragment >\n                                <button className=\"one border-0 pr-2 fixed-bottom\"     //upload button\n                                    id=\"first-button\"\n                                    type=\"button\"\n                                    onClick={() => {\n                                        props.setFieldValue('isSaveButton', false)\n                                        this.setState({ blocked: true })\n                                        data.setShowAlert(true)\n                                    }}\n                                >\n                                    <i className=\"fa fa-upload pr-0\"></i>\n                                </Button>\n                                <button className=\"three border-0 fixed-bottom pr-2\"        //save button\n                                    type=\"button\"\n                                    id=\"second-button\"\n                                    onClick={() => {\n                                        props.setFieldValue('isSaveButton', true)\n                                        this.setState({ blocked: false })\n                                        data.setShowAlert(true)\n                                    }}\n                                >\n                                    <i className=\"fa fa-save\"></i>\n                                </button>\n                            </React.Fragment> */}\n\n                        {this.state.blocked ?\n                            <PopUp                                //upload button alert\n                                popUpHead={\"تایید احراز هویت\"}\n                                popUpBody={\n                                    \"آیا از تایید احراز هویت مطمئن هستید؟\"\n                                }\n                                onCancel={() => data.setShowAlert(false)}\n                                onCancelText={'لغو'}\n                                onAccept={() => {\n                                    return (\n                                        data.setShowAlert(false),\n                                        this.setState({ isAuth: true }),\n                                        props.setFieldValue('isAuthentication', true),\n                                        props.submitForm(this.handleSubmit)\n\n                                    )\n                                }\n                                }\n                                onAcceptText={'انجام'}\n                            /> :\n                            <PopUp                                 //save button alert\n                                popUpHead={\"تایید ویرایش اطلاعات\"}\n                                popUpBody={\n                                    \"آیا از تایید اطلاعات کاربر مطمئن هستید؟\"\n                                }\n                                onCancel={() => data.setShowAlert(false)}\n                                onCancelText={'مطمئن نیستم'}\n                                onAccept={() => {\n                                    return (\n                                        data.setShowAlert(false),\n                                        this.setState({ save: true }),\n                                        props.submitForm(this.handleSubmit)\n                                    )\n                                }\n                                }\n                                onAcceptText={'بله'}\n                            />\n                        }\n                    </form>\n                )}\n            </Formik>\n\n        );\n    }\n}\nWizard.contextType = UserContext;\n\nexport default withRouter(Wizard);","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/usersForm/userInfoForm/index.js",["1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Field, Formik, Form } from \"formik\";\nimport \"../adminPanel_products_Form.scss\";\nimport './firstinformation.scss'\nimport { UserContext } from \"../../../../../context/provider\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useFetchApi } from \"../../../../../utils/hooks\";\nimport { IAM_APP, USERS_DETAIL, USER_SEND_MESSAGES } from \"../../../../../utils/constants\";\nimport { CircularProgress, Backdrop, Button, Snackbar, Dialog, DialogTitle, DialogActions, DialogContent } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { Input } from 'antd';\n\n\nconst ConfirmModal = (props) => {\n\n    return <Dialog\n        maxWidth=\"xs\"\n        //   onEntering={handleEntering}\n        aria-labelledby=\"confirmation-dialog-title\"\n        open={props.modalOpen}\n    >\n        <DialogTitle id=\"confirmation-dialog-title\">آیا از تغییر وضعیت کاربر مطمئن هستید؟</DialogTitle>\n        <DialogContent >\n\n        </DialogContent>\n        <DialogActions>\n            <Button autoFocus onClick={() => props.setModalOpen(false)} variant=\"outlined\" color=\"secondary\">\n                خیر\n            </Button>\n            <Button onClick={() => {\n                props.handleUserApprove(props.approve)\n                setTimeout(() => { props.setModalOpen(false) }, 2000)\n            }} variant=\"contained\" color=\"primary\">\n                بله\n            </Button>\n        </DialogActions>\n    </Dialog>\n}\nconst AskingModal = (props) => {\n\n    // const [text, setText] = useState();\n    const contextData = useContext(UserContext);\n\n    const { TextArea } = Input;\n\n    // console.log(\"text\",text)\n    return <Dialog\n        maxWidth=\"md\"\n        fullWidth={true}\n        //   onEntering={handleEntering}\n        aria-labelledby=\"confirmation-dialog-title\"\n        open={props.modalOpen}\n    >\n        <DialogTitle id=\"confirmation-dialog-title\" dir=\"rtl\">دلیل شما برای رد کاربر چیست؟</DialogTitle>\n        <DialogContent >\n            <TextArea dir=\"rtl\" row={10} onChange={((e) => contextData.setRejectMessage(e.target.value))}></TextArea>\n        </DialogContent>\n        <DialogActions>\n            <Button autoFocus onClick={() => props.setModalOpen(false)} variant=\"outlined\" color=\"secondary\">\n                خیر\n            </Button>\n            <Button onClick={() => {\n                props.handleUserApprove(props.approve)\n                setTimeout(() => { props.setModalOpen(false) }, 2000)\n            }} variant=\"contained\" color=\"primary\">\n                بله\n            </Button>\n        </DialogActions>\n    </Dialog>\n}\n\n\nconst UserInfoForm = ({ props }) => {\n\n    const history = useHistory()\n\n    const contextData = useContext(UserContext);\n\n    const { id } = useParams();\n\n    const [{ data: userDetail, isLoading, hasError }, doFetch] = useFetchApi(undefined, {});\n    const [{ data: submitMessage, isLoading: submitMessageIsLoading, hasError: submitMessageHasError }, doFetchSubmit] = useFetchApi(undefined, [])\n\n    const [snackOpen, setSnackOpen] = useState(false);\n    const [modalOpen, setModalOpen] = useState(false);\n    const [userState, setUserState] = useState('');\n\n    const handleUserApprove = (approve) => {\n        if (userDetail.credentials) {\n            let payload = {\n                is_active: true,\n                approve_state: approve,\n                credentials: {\n                    first_name: userDetail?.credentials.first_name,\n                    last_name: userDetail?.credentials.last_name,\n                    birth_date: userDetail?.credentials.birth_date,\n                    phone: userDetail?.credentials.phone,\n                    address: userDetail?.credentials.address,\n                    auth_picture_id: 1,\n                    phone_approved: userDetail?.credentials.phone_approved,\n                    email_approved: userDetail?.credentials.email_approved\n                }\n            }\n            let payloadRejectMessage = {\n                \"message\": {\n                    \"title\": \"احراز هویت شما رد شده است.\",\n                    \"body\": contextData.rejectMessage,\n                    \"target_type\": \"person\"\n                },\n                \"users\": [id]\n            }\n            doFetch(\"PUT\", IAM_APP, USERS_DETAIL(id), payload)\n            if (approve === \"rejected\") {\n                doFetchSubmit(\"POST\", IAM_APP, USER_SEND_MESSAGES, payloadRejectMessage)\n            }\n            setTimeout(() => history.push('/users'), 2000)\n\n\n        }\n    }\n\n\n    useEffect(() => {\n        if (id) {\n            doFetch(\"GET\", IAM_APP, USERS_DETAIL(id))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (Object.keys(userDetail).length) {\n            props.setValues({\n                email: userDetail?.credentials?.email,\n                first_name: userDetail?.credentials?.first_name,\n                last_name: userDetail?.credentials?.last_name,\n                national_code: userDetail?.credentials?.national_code,\n                birth_date: userDetail?.credentials?.birth_date,\n                phone: userDetail?.credentials?.phone,\n                mobile: userDetail?.mobile,\n                address: userDetail?.credentials?.address\n            })\n        }\n\n    }, [userDetail])\n\n    useEffect(() => {\n        if (hasError) {\n            setSnackOpen(true)\n        }\n    }, [hasError])\n\n    return (\n        <>\n            {userState !== \"rejected\" ? <ConfirmModal modalOpen={modalOpen} setModalOpen={setModalOpen} handleUserApprove={handleUserApprove} approve={userState} /> : <AskingModal modalOpen={modalOpen} setModalOpen={setModalOpen} handleUserApprove={handleUserApprove} approve={userState} />}\n            <Snackbar\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n                open={snackOpen}\n                onClose={() => setSnackOpen(false)}\n                autoHideDuration={3000}\n            // key={vertical + horizontal}\n            >\n                <Alert onClose={() => setSnackOpen(false)} severity=\"error\" variant=\"filled\">\n                    خطایی رخ داده است\n                </Alert>\n            </Snackbar>\n            <Backdrop className=\"backdrop-loading\" open={isLoading} >\n                <CircularProgress color=\"primary\" />\n            </Backdrop>\n            <div className=\"bodyForm_s mx-auto\">\n                <div className=\" d-flex align-items-center w-auto mx-auto me-5\">\n                    <img src=\"/assets/drawer/Polygon.svg\" />\n                    <p className=\"font_title_name me-1\">ایمیل </p>\n                </div>\n                <div className=\"row container-fluid col-12 mx-auto\">\n                    <div className=\"row mt-4 col-12 p-0\">\n                        <div className=\"col-6 d-flex \">\n                            <p className=\"col-2 font_title_name\">{contextData.fields?.userInfoFields.userEmail.fieldDisplay}</p>\n                            <div className=\"col-9\">\n                                <Field\n                                    type=\"text\"\n                                    name=\"email\"\n                                    placeholder=\"ایمیل کاربر\"\n                                    className=\"form-control bg_input input_text\"\n                                    disabled\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"mt-5 d-flex align-items-center mx-auto me-2\">\n                        <img src=\"/assets/drawer/Polygon.svg\" />\n                        <p className=\"font_title_name me-1\">اطلاعات شخصی </p>\n                    </div>\n                    <div className=\"col-6 d-flex  mt-4\">\n                        <p className=\"col-2 font_title_name\">{contextData.fields?.userInfoFields.firstName.fieldDisplay}</p>\n                        <div className=\"col-9\">\n                            <Field\n                                type=\"text\"\n                                name=\"first_name\"\n                                className=\"form-control bg_input input_text\"\n                                disabled\n                            />\n                        </div>\n                    </div>\n                    <div className=\"col-6 d-flex  mt-4\">\n                        <p className=\"col-2 font_title_name\">{contextData.fields?.userInfoFields.lastName.fieldDisplay}</p>\n                        <div className=\"col-9\">\n                            <Field\n                                type=\"text\"\n                                name=\"last_name\"\n                                className=\"form-control bg_input input_text\"\n                                disabled\n                            />\n                        </div>\n                    </div>\n                    <div className=\"col-6 d-flex  mt-4\">\n                        <p className=\"col-2 font_title_name\">{contextData.fields?.userInfoFields.identifyCode.fieldDisplay}</p>\n                        <div className=\"col-9\">\n                            <Field\n                                type=\"text\"\n                                name=\"national_code\"\n                                className=\"form-control bg_input input_text\"\n                                disabled\n                            />\n                        </div>\n                    </div>\n                    <div className=\"col-6 d-flex  mt-4\">\n                        <p className=\"col-2 font_title_name\">{contextData.fields?.userInfoFields.birthDay.fieldDisplay}</p>\n                        <div className=\"col-9\">\n                            <Field\n                                type=\"text\"\n                                name=\"birth_date\"\n                                className=\"form-control bg_input input_text\"\n                                disabled\n                            />\n                        </div>\n                    </div>\n                    <div className=\"col-6 d-flex  mt-4\">\n                        <p className=\"col-2 font_title_name\">{contextData.fields?.userInfoFields.phoneNum.fieldDisplay}</p>\n                        <div className=\"col-9\">\n                            <Field\n                                type=\"text\"\n                                name=\"phone\"\n                                className=\"form-control bg_input input_text\"\n                                disabled\n                            />\n                        </div>\n                    </div>\n                    <div className=\"col-6 d-flex  mt-4\">\n                        <p className=\"col-2 font_title_name\">{contextData.fields?.userInfoFields.mobileNum.fieldDisplay}</p>\n                        <div className=\"col-9\">\n                            <Field\n                                type=\"text\"\n                                name=\"mobile\"\n                                className=\"form-control bg_input input_text\"\n                                disabled\n                            />\n                        </div>\n                    </div>\n                    <div className=\"col d-flex mt-4\">\n                        <p className=\"col-1 font_title_name\"> {contextData.fields?.userInfoFields.address.fieldDisplay}</p>\n                        <div className=\"col-10 flex-nowrap\" style={{ width: \"87.5%\" }}>\n                            <Field\n                                type=\"text\"\n                                name=\"address\"\n                                className=\"form-control bg_input input_text\"\n                                disabled\n                            />\n                        </div>\n                    </div>\n                    <div className=\"mt-4\">\n                        <div className=\"mt-5 d-flex align-items-center mx-auto me-2\">\n                            <img src=\"/assets/drawer/Polygon.svg\" />\n                            <p className=\"font_title_name me-1\">اطلاعات بانکی </p>\n                        </div>\n                    </div>\n                    <div>\n                        {\n                            Boolean(userDetail?.cards?.length) &&\n                            userDetail.cards.map((item, index) => (\n                                <div className=\"row col-12 mt-4 mx-auto\" key={index}>\n                                    <div className=\"col-6 d-flex  mt-4\">\n                                        <p className=\"col-2 font_title_name\">{contextData.fields?.userInfoFields.cardNum.fieldDisplay}</p>\n                                        <div className=\"col-9\">\n                                            <Field\n                                                type=\"text\"\n                                                name=\"card_number\"\n                                                value={item.card_number}\n                                                disabled\n                                                className=\"form-control bg_input input_text\"\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-6 d-flex  mt-4\">\n                                        <p className=\"col-2 font_title_name\">{contextData.fields?.userInfoFields.shabaNum.fieldDisplay}</p>\n                                        <div className=\"col-9\">\n                                            <Field\n                                                type=\"text\"\n                                                name=\"sheba_number\"\n                                                disabled\n                                                value={item.sheba_number}\n                                                className=\"form-control bg_input input_text\"\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            ))\n                        }\n                    </div>\n                    <div className=\" mt-4\">\n                        <div className=\"mt-4\">\n                            <div className=\"mt-5 d-flex align-items-center mx-auto me-2\">\n                                <img src=\"/assets/drawer/Polygon.svg\" />\n                                <p className=\"font_title_name me-1\">احراز هویت </p>\n                            </div>\n                        </div>\n                        <div className=\"pe-5\">\n                            {\n                                Boolean(userDetail?.media?.filter(item => item.media_type === \"auth\")?.length) && (\n                                    <img className=\"img-fluid rounded-3\" style={{ maxWidth: \"528px\" }} src={userDetail.media.filter(item => item.media_type === \"auth\")[0].exact_url} />\n                                )\n                            }\n                        </div>\n\n                    </div>\n                </div>\n                <div className=\"d-flex justify-content-end mt-3 ps-5 py-5\">\n                    <Button className=\"\"         //save button\n                        id=\"save-button\"\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => {\n\n                        }}\n                        disabled\n                    >\n                        ویرایش اطلاعات\n                    </Button>\n                    <Button className=\"me-2 bg-danger text-white\"\n                        variant=\"contained\"\n                        id=\"authentication-button2\"\n                        onClick={() => {\n                            setUserState(\"rejected\")\n                            setModalOpen(true)\n                        }}\n                        disabled={userDetail?.approve_state === \"rejected\"}\n                    >\n                        رد کاربر\n                    </Button>\n                    <Button className=\"me-2\"\n                        variant=\"contained\"\n                        id=\"authentication-button\"\n                        color=\"primary\"\n                        onClick={() => {\n                            setUserState(\"approved\")\n                            setModalOpen(true)\n                        }}\n                        disabled={userDetail?.approve_state === \"approved\"}\n                    >\n                        تایید کاربر\n                    </Button>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default UserInfoForm;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userOrders/index.js",["1148","1149","1150","1151","1152","1153"],"import React from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Button } from '@material-ui/core';\n\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../../../utils/hooks\";\n\nimport { ADMIN_BASE_URL, BASE_URL, TRADING_APP, USERS_ORDERS } from '../../../../utils/constants';\n\nimport { timeToStr, UrlQuery } from '../../../../utils/utils';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Filters from './filters';\n\nimport { numDiscriminant } from '../../../../utils/discriminant';\nimport { round_ten_thousand } from '../../../../utils/math-round';\n\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\nfunction CustomPagination() {\n\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n  return (\n\n    <Pagination\n\n      className={classes.root}\n\n      shape=\"rounded\"\n\n      color=\"primary\"\n\n      // variant=\"contained\"\n\n      count={state.pagination.pageCount}\n\n      page={state.pagination.page + 1}\n\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n\n    />\n\n  );\n\n}\n\nfunction UserOrdersDataGrid(props) {\n\n  const history = useHistory()\n\n  const columns = [\n\n    {\n\n      field: 'tracking_code',\n\n      headerName: 'شناسه',\n\n      flex: 1,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (params) => `${params.row?.tracking_code.slice(0, 8)}`\n\n    },\n\n    {\n\n      field: 'type',\n\n      headerName: 'سمت سفارش',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (params) => (\n\n        <div className=\"d-flex\">\n\n          {params.row?.trade_type === \"sell\" ? <span className=\"text-danger\">فروش</span> : <span className=\"text-success\">خرید</span>}\n\n        </div>\n\n      )\n\n    },\n\n    {\n\n      field: 'trade_type',\n\n      headerName: 'نوع سفارش',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (params) => (\n\n        <div className=\"d-flex\">\n\n          {params.row?.trade_type === \"limit\" ? \"محدود\" : \"سریع\"}\n\n        </div>\n\n      )\n\n    },\n\n    {\n\n      field: 'dest_wallet',\n\n      headerName: 'نوع ارز',\n\n      flex: 0.5,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n    },\n\n    {\n\n      field: 'unit_price',\n\n      headerName: 'قیمت سفارش',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) => numDiscriminant(params.value)\n\n    },\n\n    {\n\n      field: 'average_unit_price',\n\n      headerName: ' میانگین قیمت سفارش',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) => numDiscriminant(params.value)\n\n\n    },\n\n    {\n\n      field: 'quantity',\n\n      headerName: 'مقدار',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) => numDiscriminant(params.value)\n\n\n    },\n\n    {\n\n      field: 'total',\n\n      headerName: 'مبلغ کل',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) => numDiscriminant((params?.row?.unit_price) * (params?.row?.quantity))\n\n    },\n\n    {\n\n      field: 'progress',\n\n      headerName: 'پرشده',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => {\n        let fill = values.value / values.row.quantity\n        return <>\n          {(round_ten_thousand(fill === Infinity ? 1 : fill) * 100)}%\n        </>\n      }\n\n    },\n\n    {\n\n      field: 'created_at',\n\n      headerName: 'تاریخ',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n\n    },\n\n    {\n\n      field: 'status',\n\n      headerName: 'وضعیت',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) => <div className=\"d-flex justify-content-center w-100\">\n        {\n\n          params?.value === \"in_progress\" ? (<Button variant=\"outlined\" onClick={() => { }} className=\"ms-2 border-danger text-danger\">لغو سفارش</Button>)\n\n            : (\n\n              params?.value === \"success\" ? 'انجام شده' :\n                params?.value === \"cancel_by_user\" ? 'توسط کاربر لغو شده' :\n                  params?.value === \"failed\" ? 'ناموفق' :\n                    params?.value === \"pending\" ? 'درحال انتظار' : ''\n\n\n            )\n\n        }\n\n      </div>\n\n    }\n\n  ];\n\n  const [params, setParams] = React.useState({ order: \"-updated_at\", size: 10, page: 1 })\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n  const { id } = useParams()\n\n  React.useEffect(() => {\n\n    if (id) {\n\n      console.log(\"result\", params)\n\n      doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_ORDERS, { ...params, owner_id: id }))\n\n    }\n\n  }, [params])\n\n  return (\n\n    <div className=\"content\">\n\n      <div className=\"mt-5\"></div>\n\n      <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto mt-5 pt-5\">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1\">سفارش‌ها </p>\n\n        </div>\n\n        <Filters params={params} setParams={setParams} />\n\n      </div>\n\n      <div className=\"d-flex px-3\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n\n          <DataGrid\n\n            style={{ border: 0 }}\n\n            autoHeight\n\n            classes={{\n\n              root: \"grid-header-wrapper-alt\"\n\n            }}\n\n            rows={data?.items ?? []}\n\n            loading={isLoading}\n\n            columns={columns}\n\n            getRowClassName={\n\n              params => 'grid-content-alt'\n\n            }\n\n            headerHeight={50}\n\n            rowHeight={52}\n\n            isRowSelectable={false}\n\n            components={{\n\n              Pagination: CustomPagination\n\n            }}\n\n            pageSize={10}\n\n            rowCount={data?.total}\n\n            paginationMode=\"server\"\n\n            onPageChange={(param) => doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_ORDERS, { ...params, owner_id: id, page: param + 1 }))}\n\n            disableSelectionOnClick\n\n            disableColumnMenu\n\n          />\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default UserOrdersDataGrid\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userTransactionHistory/index.js",["1154","1155","1156","1157","1158","1159","1160","1161","1162"],"import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\nimport { Pagination } from '@material-ui/lab';\nimport { useFetchApi } from \"../../../../utils/hooks\";\nimport { ACCOUNTING_APP, ADMIN_BASE_URL, USERS_TRANSACTION_HISTORY } from '../../../../utils/constants';\nimport { timeToStr, UrlQuery } from '../../../../utils/utils';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Filters from './filters';\nimport { numDiscriminant } from '../../../../utils/discriminant';\n\nconst useStyles = makeStyles({\n  root: {\n    // display: 'flex',\n    margin: '0 auto',\n  },\n});\n\nfunction CustomPagination() {\n  const { state, apiRef } = useGridSlotComponentProps();\n  const classes = useStyles();\n\n  return (\n    <Pagination\n      className={classes.root}\n      shape=\"rounded\"\n      color=\"primary\"\n      // variant=\"contained\"\n      count={state.pagination.pageCount}\n      page={state.pagination.page + 1}\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    />\n  );\n}\n\nfunction UserTransactionHistoryDataGrid(props) {\n\n  const history = useHistory()\n\n  const columns = [\n    {\n      field: 'tracking_code',\n      headerName: 'شناسه',\n      flex: 1,\n      type: 'string',\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (values) => `${values.row?.tracking_code.slice(0, 8)}`\n    },\n    {\n      field: 'type',\n      headerName: 'نوع تراکنش',\n      flex: 1,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (values) => {\n        let className = ''\n        let text = ''\n        switch (values.row?.type) {\n          case \"sell\":\n            className = \"text-danger\"\n            text = \"فروش\"\n            break;\n          case \"buy\":\n            className = \"text-success\"\n            text = \"خرید\"\n            break;\n          case \"increase\":\n            className = \"text-success\"\n            text = \"واریز\"\n            break;\n          case \"decrease\":\n            className = \"text-danger\"\n            text = \"برداشت\"\n            break;\n        }\n        return <div className=\"d-flex\">\n          <span className={className}>{text}</span>\n        </div>\n      }\n    },\n    {\n      field: 'crypto_type',\n      headerName: 'نوع ارز',\n      flex: 0.5,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (values) => values.row.wallet.c_type.toUpperCase()\n    },\n    {\n      field: 'quantity_with_fee',\n      headerName: 'مقدار',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 0.5,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (values) =>\n        <div>\n          {numDiscriminant(values.value)}\n          <span className=\"ms-1\">{values.row.wallet.c_type.toUpperCase()}</span>\n        </div>\n\n    },\n    {\n      field: 'commission',\n      headerName: 'کارمزد',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 0.5,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (values) =>\n        <div>\n          {values.value}\n          <span className=\"ms-1\">{values.row.wallet.c_type.toUpperCase()}</span>\n        </div>\n    },\n    {\n      field: 'description',\n      headerName: 'توضیحات',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: values => values.value ? values.value : '_'\n    },\n    {\n      field: 'created_at',\n      headerName: 'تاریخ',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n    },\n    {\n      field: 'status',\n      headerName: 'وضعیت',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (values) => {\n        let text = values.row?.status === \"success\" ? \"موفق\" : \"ناموفق\"\n        let pic = values.row?.status === \"success\" ? \"/assets/drawer/check_circle-24px.svg\" : \"/assets/drawer/cancel-24px (1).svg\"\n        return <div className=\"d-flex justify-content-center w-100\">\n          <img src={pic} />\n          {text}\n        </div>\n      }\n    },\n  ];\n\n  const [params, setParams] = React.useState({ page: 0, size: 10 })\n  const { id } = useParams()\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n  const updateData = () => {\n\n    data?.results?.map((item, index) => {\n\n      let update = data?.users_info?.filter((itm, idx) => idx === index)\n\n      console.log(\"update\", update);\n\n      return item.user = update\n\n    })\n\n  }\n\n  React.useEffect(() => {\n    if (id) {\n      doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(USERS_TRANSACTION_HISTORY, { ...params, owner_id: id }))\n    }\n  }, [params])\n\n  React.useEffect(() => {\n\n    updateData()\n\n  }, [data])\n  return (\n    <div className=\"content\">\n      <div className=\"mt-5\"></div>\n      <div className=\" d-flex align-items-center w-auto mx-auto mt-5 pt-5\">\n        <div className=\"d-flex\">\n          <img src=\"/assets/drawer/Polygon.svg\" />\n          <p className=\"font_title_name me-1\">تراکنش‌ها </p>\n        </div>\n        <Filters params={params} setParams={setParams} />\n      </div>\n      <div className=\"d-flex px-3\">\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n          <DataGrid\n            style={{ border: 0 }}\n            autoHeight\n            classes={{\n              root: \"grid-header-wrapper-alt\"\n            }}\n            rows={data?.results ?? []}\n            loading={isLoading}\n            columns={columns}\n            getRowClassName={\n              params => 'grid-content-alt'\n            }\n            rowHeight={52}\n            isRowSelectable={false}\n            components={{\n              Pagination: CustomPagination\n            }}\n            pageSize={10}\n            rowCount={data?.results?.length}\n            paginationMode=\"server\"\n            onPageChange={(param) => doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(USERS_TRANSACTION_HISTORY, { ...params, owner_id: id, page: param }))}\n            disableSelectionOnClick\n            disableColumnMenu\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserTransactionHistoryDataGrid\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userTrades/index.js",["1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181"],"import React from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Button } from '@material-ui/core';\n\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../../../utils/hooks\";\n\nimport { ADMIN_BASE_URL, TRADING_APP, USERS_TRADES } from '../../../../utils/constants';\n\nimport { timeToStr, UrlQuery } from '../../../../utils/utils';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Filters from './filters';\n\nimport { numDiscriminant } from '../../../../utils/discriminant';\n\nimport { round_hundred_thousand } from '../../../../utils/math-round'\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\nfunction CustomPagination() {\n\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n\n  return (\n\n    <Pagination\n\n      className={classes.root}\n\n      shape=\"rounded\"\n\n      color=\"primary\"\n\n      // variant=\"contained\"\n\n      count={state.pagination.pageCount}\n\n      page={state.pagination.page + 1}\n\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n\n    />\n\n  );\n\n}\n\nfunction UserTradesDataGrid(props) {\n\n  const history = useHistory()\n\n  const { id } = useParams()\n\n\n  const columns = [\n\n    {\n\n      field: 'tracking_code',\n\n      headerName: 'شناسه',\n\n      flex: 1,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (params) => `${params.row?.tracking_code.slice(0, 8)}`\n\n    },\n\n    {\n\n      field: 'type',\n\n      headerName: 'سمت سفارش',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (params) => (\n\n        <div className=\"d-flex\">\n\n          {params.row?.buy_order?.owner_id == id ? params.row?.buy_order?.type === \"sell\" ? <span className=\"text-danger\">فروش</span> : <span className=\"text-success\">خرید</span> : params.row?.sell_order?.type === \"sell\" ? <span className=\"text-danger\">فروش</span> : <span className=\"text-success\">خرید</span>}\n\n        </div>\n\n      )\n\n    },\n\n    {\n\n      field: 'dest_wallet',\n\n      headerName: 'نوع ارز',\n\n      flex: 0.5,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (params) => (\n\n        <div className=\"d-flex\">\n\n          {params.row?.buy_order?.owner_id == id ? <span className=\"\">{params.row?.buy_order.dest_wallet}-{params.row?.buy_order.origin_wallet}</span> : <span className=\"\">{params.row?.sell_order.dest_wallet}-{params.row?.sell_order.origin_wallet}</span>}\n\n        </div>\n\n      )\n\n    },\n\n    {\n\n      field: 'unit_price',\n\n      headerName: 'قیمت معامله',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) =>\n        <div>\n          {numDiscriminant(params.row?.buy_order.owner_id == id ? params.row?.buy_order.unit_price ? params.row?.buy_order.unit_price : params.row?.buy_order.average_unit_price : params.row?.sell_order.owner_id == id ? params.row?.sell_order.unit_price ? params.row?.sell_order.unit_price : params.row?.sell_order.average_unit_price : null)}\n          {params.row?.buy_order?.owner_id == id ? params.row?.buy_order?.type === \"sell\" ? <span className=\"ms-1\">{params.row?.buy_order?.dest_wallet}</span> : <span className=\"ms-1\">{params.row?.buy_order?.origin_wallet}</span> : params.row?.sell_order?.type === \"sell\" ? <span className=\"ms-1\">{params.row?.sell_order?.dest_wallet}</span> : <span className=\"ms-1\">{params.row?.sell_order?.origin_wallet}</span>}\n        </div>\n\n    },\n\n    {\n\n      field: 'quantity',\n\n      headerName: 'مقدار',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) =>\n        <div>\n          {numDiscriminant(params.value)}\n          {params.row?.buy_order?.owner_id == id ? params.row?.buy_order?.type === \"sell\" ? <span className=\"ms-1\">{params.row?.buy_order?.origin_wallet}</span> : <span className=\"ms-1\">{params.row?.buy_order?.dest_wallet}</span> : params.row?.sell_order?.type === \"sell\" ? <span className=\"ms-1\">{params.row?.sell_order?.origin_wallet}</span> : <span className=\"ms-1\">{params.row?.sell_order?.dest_wallet}</span>}\n        </div>\n\n\n    },\n\n    {\n\n      field: 'amount',\n\n      headerName: 'مبلغ کل',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) =>\n        <div>\n          {/* {numDiscriminant((params?.row?.amount) * (params?.row?.quantity))} */}\n          {numDiscriminant(params.value)}\n          {params.row?.buy_order?.owner_id == id ? params.row?.buy_order?.type === \"sell\" ? <span className=\"ms-1\">{params.row?.buy_order?.dest_wallet}</span> : <span className=\"ms-1\">{params.row?.buy_order?.origin_wallet}</span> : params.row?.sell_order?.type === \"sell\" ? <span className=\"ms-1\">{params.row?.sell_order?.dest_wallet}</span> : <span className=\"ms-1\">{params.row?.sell_order?.origin_wallet}</span>}\n\n        </div>\n\n    },\n\n    {\n\n      field: 'commission',\n\n      headerName: 'کارمزد',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 0.5,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) => {\n        let commission = params.row?.buy_order.owner_id == id ? params.row?.buy_order.commission_percentage : params.row?.sell_order.owner_id == id ? params.row?.sell_order.commission_percentage : null\n        let originWallet = params.row?.buy_order.origin_wallet === \"btc\" ? \" بیتکوین\" : params.row?.buy_order.origin_wallet === \"usdt\" ? \"تتر\" : params.row?.buy_order.origin_wallet === \"irr\" ? \"تومان\" : params.row?.buy_order.origin_wallet === \"eth\" ? \"اتریوم\" : params.row?.buy_order.origin_wallet === \"trx\" ? \"ترون\" : params.row?.buy_order.origin_wallet === \"eos\" ? \"ایاس\" : params.row?.buy_order.origin_wallet === \"ada\" ? \"آدا\" : params.row?.buy_order.origin_wallet === \"xlm\" ? \"استلار\" : params.row?.buy_order.origin_wallet === \"ltc\" ? \"لایت کوین\" : params.row?.buy_order.origin_wallet === \"bnb\" ? \"بایننس کوین\" : params.row?.buy_order.origin_wallet === \"doge\" ? \"دوج\" : params.row?.buy_order.origin_wallet === \"bch\" ? \"بیتکوین کش\" : null\n        let destWallet = params.row?.buy_order.dest_wallet === \"btc\" ? \"بیتکوین\" : params.row?.buy_order.dest_wallet === \"irr\" ? \"تومان\" : params.row?.buy_order.dest_wallet === \"usdt\" ? \"تتر\" : params.row?.buy_order.dest_wallet === \"eth\" ? \"اتریوم\" : params.row?.buy_order.dest_wallet === \"trx\" ? \"ترون\" : params.row?.buy_order.dest_wallet === \"eos\" ? \"ایاس\" : params.row?.buy_order.dest_wallet === \"ada\" ? \"آدا\" : params.row?.buy_order.dest_wallet === \"xlm\" ? \"استلار\" : params.row?.buy_order.dest_wallet === \"ltc\" ? \"لایت کوین\" : params.row?.buy_order.dest_wallet === \"bnb\" ? \"بایننس کوین\" : params.row?.buy_order.dest_wallet === \"doge\" ? \"دوج\" : params.row?.buy_order.dest_wallet === \"bch\" ? \"بیتکوین کش\" : null\n\n        return (\n\n          <div className=\"d-flex\">\n            {params.row?.buy_order?.owner_id == id ? commission * params.row?.quantity === 0 ? 0 : `${numDiscriminant(round_hundred_thousand(commission * params.row?.quantity))} ${destWallet}` : commission * params.row?.amount === 0 ? 0 : `${numDiscriminant(round_hundred_thousand(commission * params.row?.amount))}${originWallet}`}\n          </div>\n\n        )\n      }\n    },\n\n    {\n\n      field: 'status',\n\n      headerName: 'دریافتی',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) => {\n        let commission = params.row?.buy_order.owner_id == id ? params.row?.buy_order.commission_percentage : params.row?.sell_order.owner_id == id ? params.row?.sell_order.commission_percentage : null\n        let originWallet = params.row?.buy_order.origin_wallet === \"btc\" ? \" بیتکوین\" : params.row?.buy_order.origin_wallet === \"usdt\" ? \"تتر\" : params.row?.buy_order.origin_wallet === \"irr\" ? \"تومان\" : params.row?.buy_order.origin_wallet === \"eth\" ? \"اتریوم\" : params.row?.buy_order.origin_wallet === \"trx\" ? \"ترون\" : params.row?.buy_order.origin_wallet === \"eos\" ? \"ایاس\" : params.row?.buy_order.origin_wallet === \"ada\" ? \"آدا\" : params.row?.buy_order.origin_wallet === \"xlm\" ? \"استلار\" : params.row?.buy_order.origin_wallet === \"ltc\" ? \"لایت کوین\" : params.row?.buy_order.origin_wallet === \"bnb\" ? \"بایننس کوین\" : params.row?.buy_order.origin_wallet === \"doge\" ? \"دوج\" : params.row?.buy_order.origin_wallet === \"bch\" ? \"بیتکوین کش\" : null\n        let destWallet = params.row?.buy_order.dest_wallet === \"btc\" ? \"بیتکوین\" : params.row?.buy_order.dest_wallet === \"irr\" ? \"تومان\" : params.row?.buy_order.dest_wallet === \"usdt\" ? \"تتر\" : params.row?.buy_order.dest_wallet === \"eth\" ? \"اتریوم\" : params.row?.buy_order.dest_wallet === \"trx\" ? \"ترون\" : params.row?.buy_order.dest_wallet === \"eos\" ? \"ایاس\" : params.row?.buy_order.dest_wallet === \"ada\" ? \"آدا\" : params.row?.buy_order.dest_wallet === \"xlm\" ? \"استلار\" : params.row?.buy_order.dest_wallet === \"ltc\" ? \"لایت کوین\" : params.row?.buy_order.dest_wallet === \"bnb\" ? \"بایننس کوین\" : params.row?.buy_order.dest_wallet === \"doge\" ? \"دوج\" : params.row?.buy_order.dest_wallet === \"bch\" ? \"بیتکوین کش\" : null\n\n        return (<div className=\"d-flex justify-content-center w-100\">\n\n          {params.row?.buy_order?.owner_id == id ? `${numDiscriminant(round_hundred_thousand(params.row?.quantity - (commission * params.row?.quantity)))} ${destWallet}` : `${numDiscriminant(round_hundred_thousand(params.row?.amount - (commission * params.row?.amount)))} ${originWallet}`}\n\n\n          {\n\n            params?.row?.status === \"in_progress\" ? ('')\n\n              : ('')\n\n          }\n\n        </div>)\n      }\n\n    },\n\n    {\n\n      field: 'created_at',\n\n      headerName: 'تاریخ',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n\n    },\n\n  ];\n\n  const [params, setParams] = React.useState({ status__in: \"success\", size: 10, page: 1 })\n\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n  React.useEffect(() => {\n\n    if (id) {\n\n      doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_TRADES, { ...params, owner_id: id }))\n\n    }\n\n  }, [params])\n  console.log(\"data created at\", data)\n\n  return (\n\n    <div className=\"content\">\n\n      <div className=\"mt-5\"></div>\n\n      <div className=\" d-flex align-items-center w-auto mx-auto mt-5 pt-5\">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1\">معاملات </p>\n\n        </div>\n\n        <Filters params={params} setParams={setParams} />\n\n      </div>\n\n      <div className=\"d-flex px-3\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n\n          <DataGrid\n\n            style={{ border: 0 }}\n\n            autoHeight\n\n            classes={{\n\n              root: \"grid-header-wrapper-alt\"\n\n            }}\n\n            rows={data?.items ?? []}\n\n            loading={isLoading}\n\n            columns={columns}\n\n            getRowClassName={\n\n              params => 'grid-content-alt'\n\n            }\n\n            rowHeight={52}\n\n            isRowSelectable={false}\n\n            components={{\n\n              Pagination: CustomPagination\n\n            }}\n\n            pageSize={10}\n\n            rowCount={data?.total}\n\n            paginationMode=\"server\"\n\n            onPageChange={(param) => doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_TRADES, { ...params, owner_id: id, page: param + 1 }))}\n\n            disableSelectionOnClick\n\n            disableColumnMenu\n\n          />\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default UserTradesDataGrid\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userWithdraws/index.js",["1182","1183","1184","1185","1186","1187","1188","1189","1190","1191"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\nimport { Pagination } from '@material-ui/lab';\nimport { useFetchApi } from \"../../../../utils/hooks\";\nimport { ACCOUNTING_APP, ADMIN_BASE_URL, USERS_TRANSACTION_HISTORY, WITHDRAWS_LIST } from '../../../../utils/constants';\nimport { timeToStr, UrlQuery } from '../../../../utils/utils';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Filters from './filters';\nimport { numDiscriminant } from '../../../../utils/discriminant';\nimport { round_hundred_thousand } from '../../../../utils/math-round';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport copy from '../../../../assets/content_copy-24px.svg'\nimport CopyToClipboard from '../../../../utils/copy-to-clipboard';\n\n\nconst useStyles = makeStyles({\n  root: {\n    // display: 'flex',\n    margin: '0 auto',\n  },\n});\n\nfunction CustomPagination() {\n  const { state, apiRef } = useGridSlotComponentProps();\n  const classes = useStyles();\n\n  return (\n    <Pagination\n      className={classes.root}\n      shape=\"rounded\"\n      color=\"primary\"\n      // variant=\"contained\"\n      count={state.pagination.pageCount}\n      page={state.pagination.page + 1}\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    />\n  );\n}\n\nfunction UserWithdrawsDataGrid(props) {\n\n  const [showToolTip, setShowToolTip] = useState(false);\n\n  const history = useHistory()\n\n  const renderToolTipSuccess = <Tooltip id=\"copied\">Copied!</Tooltip>\n\n  const renderNothing = <div />\n\n  const columns = [\n    {\n      field: 'tracking_code',\n      headerName: 'شناسه',\n      flex: 1,\n      type: 'string',\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (params) => `${params.row?.tracking_code.slice(0, 8)}`\n    },\n    {\n      field: 'crypto',\n      headerName: 'نوع ارز',\n      flex: 0.5,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (params) => params.row?.wallet?.c_type\n    },\n    {\n      field: 'amount',\n      headerName: 'مقدار',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 0.5,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (params) =>\n        <div>\n          {numDiscriminant(params.value)}\n          {params.row?.wallet?.c_type}\n        </div>\n    },\n    {\n      field: 'dest_address',\n      headerName: 'مقصد برداشت',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (values) => {\n\n        let renderTooltip = (props) => (\n\n          <Tooltip id=\"button-tooltip\" {...props}>\n\n            {values.value}\n\n          </Tooltip>\n\n        );\n\n\n        return (\n          <>\n\n            <OverlayTrigger\n\n              placement=\"top\"\n\n              delay={{ show: 250, hide: 400 }}\n\n              overlay={renderTooltip}\n\n            >\n\n              <Button>\n\n                {values.value?.slice(-5)}...\n\n              </Button>\n\n            </OverlayTrigger>\n\n            <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={showToolTip ? renderToolTipSuccess : renderNothing} rootClose>\n\n              <span id=\"basic-addon3\"\n\n                onClick={() => {\n\n                  CopyToClipboard(values.value)\n\n\n                  setShowToolTip(true)\n\n                  setTimeout(() => { setShowToolTip(false) }, 2000);\n\n                }}\n\n              >\n\n                <img alt=\"\" src={copy} class=\"w-50\" role=\"button\" />\n\n              </span>\n\n            </OverlayTrigger>\n\n          </>\n        )\n      }\n    },\n    {\n      field: 'amount_with_fee',\n      headerName: 'کارمزد',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 0.5,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (params) =>\n        <div>\n          {round_hundred_thousand(params?.row?.amount - params.value) + ' ' + params.row.wallet.c_type}\n        </div>\n\n    },\n    {\n      field: 'created_at',\n      headerName: 'تاریخ',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n    },\n    {\n      field: 'status',\n      headerName: 'وضعیت',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (params) => <div className=\"d-flex justify-content-center w-100\">\n        {\n          params?.row?.status === \"in_progress\" ? ('در حال بررسی')\n            : params?.row?.status === \"success\" ? ('انجام شده')\n              : params?.row?.status === \"canceled\" ? 'انجام نشده'\n                : params?.row?.status === \"failed\" ? 'ناموفق'\n                  : params?.row?.status === \"rejected\" ? 'لغو شده'\n                    : null\n        }\n      </div>\n    },\n    {\n      field: 'tracking_codes',\n      headerName: 'کدرهگیری',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: .5,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (params) => `${params.row?.tracking_code.slice(0, 8)}`\n    },\n  ];\n  const [params, setParams] = React.useState({ page: 1, size: 10 })\n\n  const { id } = useParams()\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n  const [{ data: withdrawData, isLoading: withdrawLoading }, updateWithdraw] = useFetchApi(undefined, {});\n\n  const updateData = () => {\n\n    data?.results?.map((item, index) => {\n\n      let update = data?.users_info?.filter((itm, idx) => idx === index)\n\n      console.log(\"update\", update);\n\n      return item.user = update\n\n    })\n\n  }\n  React.useEffect(() => {\n    if (id) {\n      doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(WITHDRAWS_LIST, { ...params, owner_id: id }))\n    }\n  }, [])\n\n  React.useEffect(() => {\n\n    updateData()\n\n  }, [data])\n\n\n\n  return (\n    <div className=\"content\">\n      <div className=\"mt-5\"></div>\n      <div className=\" d-flex align-items-center w-auto mx-auto mt-5 pt-5\">\n        <div className=\"d-flex\">\n          <img src=\"/assets/drawer/Polygon.svg\" />\n          <div className=\"font_title_name me-1 d-block\" style={{ minWidth: \"150px\" }}>درخواست برداشت </div>\n        </div>\n        <Filters params={params} setParams={setParams} />\n      </div>\n      <div className=\"d-flex px-3\">\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n          <DataGrid\n            style={{ border: 0 }}\n            autoHeight\n            classes={{\n              root: \"grid-header-wrapper-alt\"\n            }}\n            rows={data?.results ?? []}\n            loading={isLoading}\n            columns={columns}\n            getRowClassName={\n              params => 'grid-content-alt'\n            }\n            rowHeight={52}\n            isRowSelectable={false}\n            components={{\n              Pagination: CustomPagination\n            }}\n            pageSize={10}\n            rowCount={data?.results?.length}\n            paginationMode=\"server\"\n            onPageChange={(param) => doFetch(\"GET\", ACCOUNTING_APP, UrlQuery(WITHDRAWS_LIST, { ...params, owner_id: id, page: param + 1 }))}\n            disableSelectionOnClick\n            disableColumnMenu\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserWithdrawsDataGrid\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userWallets/index.js",["1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216","1217"],"import React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\nimport { Pagination } from '@material-ui/lab';\nimport { useFetchApi } from \"../../../../utils/hooks\";\nimport { ACCOUNTING_APP, USERS_TRANSACTION_HISTORY, USERS_WALLET } from '../../../../utils/constants';\nimport { UrlQuery } from '../../../../utils/utils';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Chart from \"react-apexcharts\";\nimport ApexCharts from 'apexcharts';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport CopyToClipboard from '../../../../utils/copy-to-clipboard';\nimport copy from '../../../../assets/content_copy-24px.svg'\nimport WalletChart from './walletChart';\nimport WalletApi from '../../../../utils/wallet';\nimport { numDiscriminant } from '../../../../utils/discriminant'\nimport { round } from '../../../../utils/math-round'\nimport { UserContext } from '../../../../context/provider';\n\nconst useStyles = makeStyles({\n  root: {\n    // display: 'flex',\n    margin: '0 auto',\n  },\n});\n\nconst stat = {\n\n  series: [472000, 220000, 250000],\n  options: {\n    labels: [\"بیت کوین BTC\", \"تتر USDT\", \"اتریوم ETH\"],\n    chart: {\n      id: \"graphId\"\n    },\n    responsive: [{\n      breakpoint: 480,\n      options: {\n        chart: {\n          width: 200\n        },\n        legend: {\n          position: 'bottom'\n        }\n      }\n    }],\n    legend: {\n      fontSize: '16px',\n      fontFamily: 'IranSans',\n      fontWeight: 600,\n      formatter: function (seriesName, opts) {\n        return [opts.w.globals.series[opts.seriesIndex], seriesName]\n      }\n    }\n  },\n}\n\nfunction CustomPagination() {\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n  return (\n    <Pagination\n      className={classes.root}\n      shape=\"rounded\"\n      color=\"primary\"\n      // variant=\"contained\"\n      count={state.pagination.pageCount}\n      page={state.pagination.page + 1}\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    />\n  );\n}\n\nfunction UserWalletsDataGrid(props) {\n  const [showToolTip, setShowToolTip] = useState(false);\n  const [chartValue, setChartValue] = useState([]);\n  const contextData = useContext(UserContext);\n\n  const priceValue = []\n\n  const history = useHistory()\n  const renderToolTipSuccess = <Tooltip id=\"copied\">Copied!</Tooltip>\n  const renderNothing = <div />\n  const runPrice = (item) => {\n\n    let price = item.price && item.price[0] && item.price[0].current_price ? item.quantity * item.price[0].current_price * contextData.usdtIrr?.current_price : item.quantity\n\n    priceValue.push(price)\n\n    return price\n\n  }\n  const columns = [\n    {\n      field: 'tracking_code',\n      headerName: 'نوع کیف پول',\n      flex: 1,\n      type: 'string',\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (values) => (\n\n        <div className=\"d-flex\">\n\n          <span>{values.row?.c_type}</span>\n\n        </div>\n\n      )\n    },\n    {\n      field: 'quantity',\n      headerName: 'مقدار',\n      flex: 1,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (param) => {\n        let txt = \"\";\n        switch (param.row?.c_type) {\n          case \"irr\":\n            txt = \"ریال\";\n          case \"usdt\":\n            txt = \"تتر\";\n          case \"eth\":\n            txt = \"اتریوم\";\n          case \"btc\":\n            txt = \"بیتکوین\";\n          case \"trx\":\n            txt = \"ترون\";\n          case \"eos\":\n            txt = \"ایاس\";\n          case \"ada\":\n            txt = \"آدا\";\n          case \"xlm\":\n            txt = \"استلار\";\n          case \"ltc\":\n            txt = \"لایت کوین\";\n          case \"bnb\":\n            txt = \"بایننس کوین\";\n          case \"doge\":\n            txt = \"دوج\";\n          case \"bch\":\n            txt = \"بیتکوین کش\";\n          default:\n            txt = \"\"\n        }\n        console.log(\"param\", txt)\n\n        return <span>{param.value} {txt}</span>\n      }\n    },\n    {\n      field: 'commission2',\n      headerName: 'ارزش تومانی',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (param) => param.row?.c_type === \"irr\" ? numDiscriminant(round(param.row?.quantity)) : param.row?.quantity === 0 ? 0 : numDiscriminant(round(runPrice(param.row)))\n\n    },\n    {\n      field: 'addresses',\n      headerName: 'آدرس کیف پول',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 0.5,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (param) => {\n        return param.value && param.value[0]?.address\n      },\n      renderCell: (param) => {\n\n        let renderTooltip = (props) => (\n\n          <Tooltip id=\"button-tooltip\" {...props}>\n\n            {param.value && param.value[0]?.address}\n\n          </Tooltip>\n\n        );\n\n\n        return (\n          <>\n\n            <OverlayTrigger\n\n              placement=\"top\"\n\n              delay={{ show: 250, hide: 400 }}\n\n              overlay={renderTooltip}\n\n            >\n\n              <Button>\n\n                {param.value && param.value[0]?.address?.slice(-5)}...\n\n              </Button>\n\n            </OverlayTrigger>\n\n            <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={showToolTip ? renderToolTipSuccess : renderNothing} rootClose>\n\n              <span id=\"basic-addon3\"\n\n                onClick={() => {\n\n                  CopyToClipboard(param.value && param.value[0]?.address)\n\n\n                  setShowToolTip(true)\n\n                  setTimeout(() => { setShowToolTip(false) }, 2000);\n\n                }}\n\n              >\n\n                <img alt=\"\" src={copy} class=\"w-50\" role=\"button\" />\n\n              </span>\n\n            </OverlayTrigger>\n\n          </>\n        )\n      }\n    },\n    {\n      field: 'created_at',\n      headerName: 'واریز',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 0.5,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n    },\n  ];\n\n  const { id } = useParams()\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n  const toggle = (e) => {\n    ApexCharts.exec('graphId', 'toggleSeries', e.target.value);\n  }\n\n  console.log(\"id\", data)\n  React.useEffect(() => {\n    if (id) {\n      doFetch(\"GET\", ACCOUNTING_APP, USERS_WALLET(id))\n    }\n  }, [data.length])\n\n  React.useEffect(() => {\n\n    if (data) {\n      data.map(item => chartValue.push({ name: item.c_type, quantity: item.quantity, value: item.quantity }))\n    }\n  }, [data]);\n  console.log(\"wallet\", data)\n  console.log(\"chart value\", chartValue)\n\n  return (\n    <div className=\"content\">\n      <WalletApi walletData={data} />\n      <div className=\"mt-5\"></div>\n      <div className=\" d-flex align-items-center w-auto mx-auto mt-5 pt-5\">\n        <img src=\"/assets/drawer/Polygon.svg\" />\n        <p className=\"font_title_name me-1\">کیف پول‌ها </p>\n      </div>\n      <div className=\"d-flex px-3\">\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n          <DataGrid\n            style={{ border: 0 }}\n            autoHeight\n            classes={{\n              root: \"grid-header-wrapper-alt\"\n            }}\n            rows={data ?? []}\n            loading={isLoading}\n            columns={columns}\n            getRowClassName={\n              params => 'grid-content-alt'\n            }\n            rowHeight={52}\n            getRowId={(rows) => rows?.tracking_code}\n            hideFooterPagination\n            isRowSelectable={false}\n            components={{\n              Pagination: false\n            }}\n            disableSelectionOnClick\n            disableColumnMenu\n          />\n        </div>\n      </div>\n      <div className=\" d-flex align-items-center w-auto mx-auto mt-5 pt-5\">\n        <img src=\"/assets/drawer/Polygon.svg\" />\n        <p className=\"font_title_name me-1\">سهم از دارایی کیف پول</p>\n      </div>\n      <div className=\"content-dark\">\n        <span className=\"text-white\">\n          ارزش تخمینی کل دارایی : 2522225555\n        </span>\n        <div className=\"w-100 d-flex container-fluid\">\n          <WalletChart chartValue={chartValue && chartValue} />\n          {/* <Chart height=\"320\" options={stat.options} series={stat.series} type=\"donut\" /> */}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserWalletsDataGrid\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userLoginActivity/index.js",["1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228"],"import React from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Button } from '@material-ui/core';\n\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../../../utils/hooks\";\n\nimport { ADMIN_BASE_URL, BASE_URL, TRADING_APP, USERS_ORDERS, USERS_ACTIVITY, IAM_APP, TICKET_DETAIL } from '../../../../utils/constants';\n\nimport { timeToStr, UrlQuery } from '../../../../utils/utils';\n\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport Filters from './filters';\n\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\nfunction CustomPagination() {\n\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n  return (\n\n    <Pagination\n\n      className={classes.root}\n\n      shape=\"rounded\"\n\n      color=\"primary\"\n\n      // variant=\"contained\"\n\n      count={state.pagination.pageCount}\n\n      page={state.pagination.page + 1}\n\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n\n    />\n\n  );\n\n}\n\nfunction UserLoginActivity(props) {\n\n  const history = useHistory()\n\n  const columns = [\n\n    {\n\n      field: 'created_at',\n\n      headerName: 'تاریخ',\n\n      flex: 1,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      valueFormatter: params => timeToStr(params.value, \"jYYYY/jMM/jDD\")\n      // renderCell: (params) => `${params.row?.tracking_code.slice(0, 8)}`\n\n    },\n\n\n    {\n\n      field: 'created_atـhour',\n\n      headerName: 'ساعت',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      valueFormatter: params => timeToStr(params.row.created_at, \"HH:mm\")\n\n    },\n    {\n\n      field: 'user_ip',\n\n      headerName: 'آدرس IP',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n    },\n\n    {\n\n      field: 'browser',\n\n      headerName: 'شناسه مرورگر',\n\n      flex: 0.5,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n    },\n\n    {\n\n      field: 'login_successful',\n\n      headerName: 'وضعیت',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (values) => {\n        let text = values.value ? \"موفق\" : \"ناموفق\"\n        let pic = values.value ? \"/assets/drawer/check_circle-24px.svg\" : \"/assets/drawer/cancel-24px (1).svg\"\n        return <div className=\"d-flex justify-content-center w-100\">\n          <img src={pic} />\n          {text}\n        </div>\n      }\n    },\n\n    // {\n\n    //   field: 'average_unit_price',\n\n    //   headerName: ' میانگین قیمت سفارش',\n\n    //   sortable: false,\n\n    //   align: 'center',\n\n    //   flex: 1,\n\n    //   headerClassName: 'grid-header',\n\n    //   headerAlign: 'center',\n\n    // },\n\n    // {\n\n    //   field: 'quantity',\n\n    //   headerName: 'مقدار',\n\n    //   // description: 'This column has a value getter and is not sortable.',\n\n    //   sortable: false,\n\n    //   align: 'center',\n\n    //   flex: 0.5,\n\n    //   headerClassName: 'grid-header',\n\n    //   headerAlign: 'center',\n\n    // },\n\n    // {\n\n    //   field: 'total',\n\n    //   headerName: 'مبلغ کل',\n\n    //   // description: 'This column has a value getter and is not sortable.',\n\n    //   sortable: false,\n\n    //   align: 'center',\n\n    //   flex: 1,\n\n    //   headerClassName: 'grid-header',\n\n    //   headerAlign: 'center',\n\n    //   // renderCell: (params) => parseInt(params?.row?.unit_price) * parseInt(params?.row?.quantity)\n\n    // },\n\n    // {\n\n    //   field: 'progress',\n\n    //   headerName: 'پرشده',\n\n    //   // description: 'This column has a value getter and is not sortable.',\n\n    //   sortable: false,\n\n    //   align: 'center',\n\n    //   flex: 0.5,\n\n    //   headerClassName: 'grid-header',\n\n    //   headerAlign: 'center',\n\n    // },\n\n    // {\n\n    //   field: 'created_at',\n\n    //   headerName: 'تاریخ',\n\n    //   // description: 'This column has a value getter and is not sortable.',\n\n    //   sortable: false,\n\n    //   align: 'center',\n\n    //   flex: 1,\n\n    //   headerClassName: 'grid-header',\n\n    //   headerAlign: 'center',\n\n    //   // valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n\n    // },\n\n    // {\n\n    //   field: 'status',\n\n    //   headerName: 'وضعیت',\n\n    //   // description: 'This column has a value getter and is not sortable.',\n\n    //   sortable: false,\n\n    //   align: 'center',\n\n    //   flex: 1,\n\n    //   headerClassName: 'grid-header',\n\n    //   headerAlign: 'center',\n\n    //   // renderCell: (params) => <div className=\"d-flex justify-content-center w-100\">\n    //   //   {\n\n    //   //   params?.value === \"in_progress\" ? (<Button variant=\"outlined\" onClick={() => { }} className=\"ms-2 border-danger text-danger\">لغو سفارش</Button>)\n\n    //   //     : (\n\n    //   //       params?.value === \"success\" ? 'انجام شده' : \n    //   //       params?.value === \"cancel_by_user\" ? 'توسط کاربر لغو شده' : \n    //   //       params?.value === \"failed\" ? 'ناموفق' : \n    //   //       params?.value === \"pending\" ? 'درحال انتظار':'' \n\n\n    //   //     )\n\n    //   //   }\n\n    //   // </div>\n\n    // }\n\n  ];\n\n  const [params, setParams] = React.useState({ page: 1, size: 10 })\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n  const { id } = useParams()\n\n  React.useEffect(() => {\n\n    if (id) {\n\n\n      // doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_ORDERS, { ...params, owner_id: id }))\n      doFetch(\"GET\", IAM_APP, UrlQuery(USERS_ACTIVITY(id), { ...params }))\n      // doFetch(\"GET\", IAM_APP, USERS_ACTIVITY(id))\n      // doFetch(\"GET\", IAM_APP, TICKET_DETAIL(id))\n\n\n    }\n\n  }, [])\n  console.log(\"data ==>\", data)\n  return (\n\n    <div className=\"content\">\n\n      <div className=\"mt-5\"></div>\n\n      <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto mt-5 pt-5\">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1\">سفارش‌ها </p>\n\n        </div>\n\n        <Filters params={params} setParams={setParams} />\n\n      </div>\n\n      <div className=\"d-flex px-3\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n          {Object.keys(data).length > 0 ?\n            <>\n              <DataGrid\n\n                style={{ border: 0 }}\n\n                autoHeight\n\n                classes={{\n\n                  root: \"grid-header-wrapper-alt\"\n\n                }}\n\n                rows={data.items ?? []}\n\n                loading={isLoading}\n\n                columns={columns}\n\n                getRowClassName={\n\n                  params => 'grid-content-alt'\n\n                }\n\n                headerHeight={50}\n\n                rowHeight={52}\n\n                isRowSelectable={false}\n\n                components={{\n\n                  Pagination: CustomPagination\n\n                }}\n\n                pageSize={10}\n\n                rowCount={data?.total}\n\n                paginationMode=\"server\"\n\n                onPageChange={(param) => doFetch(\"GET\", IAM_APP, UrlQuery(USERS_ACTIVITY(id), { ...params, owner_id: id, page: param + 1 }))}\n\n                disableSelectionOnClick\n\n                disableColumnMenu\n\n              />\n            </>\n            : \"\"}\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default UserLoginActivity\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userTrades/filters.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userOrders/filters.js",["1229"],"import React from 'react'\nimport { TextField, MenuItem, Grid, Select\n  //  IconButton, InputAdornment \n} from \"@material-ui/core\";\n// import SearchIcon from \"@material-ui/icons/Search\";\n\n\nfunction Filters(props) {\n\n    const [tradeType, setTradeType] = React.useState('');\n\n    const handleSelectChange = (e) => {\n        props.setParams( state => ({...state, [e.target.name]: e.target.value}) );\n    }\n\n    return (\n        <Grid className=\"mb-3 ps-4\" justify=\"flex-end\" container spacing={1}>\n            <Grid item xs={2}>\n                <label className=\"text-white ms-2 mt-2\">نوع سفارش</label>\n                <Select name=\"trade_type\" value={tradeType} displayEmpty onChange={ e => {handleSelectChange(e); setTradeType(e.target.value)}} select size=\"small\">\n                    <MenuItem value=\"\">همه سفارش‌ها</MenuItem>\n                    <MenuItem value=\"market\">سریع</MenuItem>\n                    <MenuItem value=\"limit\">محدود</MenuItem>\n                </Select>    \n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Filters\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userLoginActivity/filters.js",["1230"],"import React from 'react'\nimport { TextField, MenuItem, Grid, Select\n  //  IconButton, InputAdornment \n} from \"@material-ui/core\";\n// import SearchIcon from \"@material-ui/icons/Search\";\n\n\nfunction Filters(props) {\n\n    const [tradeType, setTradeType] = React.useState('');\n\n    const handleSelectChange = (e) => {\n        props.setParams( state => ({...state, [e.target.name]: e.target.value}) );\n    }\n\n    return (\n        <Grid className=\"mb-3 ps-4\" justify=\"flex-end\" container spacing={1}>\n            <Grid item xs={2}>\n                <label className=\"text-white ms-2 mt-2\">نوع سفارش</label>\n                <Select name=\"match_type\" value={tradeType} displayEmpty onChange={ e => {handleSelectChange(e); setTradeType(e.target.value)}} select size=\"small\">\n                    <MenuItem value=\"\">همه سفارش‌ها</MenuItem>\n                    <MenuItem value=\"market\">سریع</MenuItem>\n                    <MenuItem value=\"limit\">محدود</MenuItem>\n                </Select>    \n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Filters\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userWithdraws/filters.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userTransactionHistory/filters.js",["1231"],"import React from 'react'\nimport { TextField, MenuItem, Grid, Select\n  //  IconButton, InputAdornment \n} from \"@material-ui/core\";\n// import SearchIcon from \"@material-ui/icons/Search\";\n\n\nfunction Filters(props) {\n\n    const [type, setType] = React.useState('')\n    const handleSelectChange = (e) => {\n        props.setParams( state => ({...state, [e.target.name]: e.target.value}) );\n    }\n\n    return (\n        <Grid className=\"mb-3 ps-4\" justify=\"flex-end\" container spacing={1}>\n            <Grid item xs={1}>\n                <Select name=\"type\" value={type} displayEmpty onChange={ e => {handleSelectChange(e); setType(e.target.value)}} select size=\"small\">\n                    <MenuItem value=\"\">همه تراکنش‌ها</MenuItem>\n                    <MenuItem value=\"increase\">واریز</MenuItem>\n                    <MenuItem value=\"decrease\">برداشت</MenuItem>\n                    <MenuItem value=\"buy\">خرید</MenuItem>\n                    <MenuItem value=\"sell\">فروش</MenuItem>\n                </Select>    \n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Filters\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/users/userWallets/walletChart.js",["1232","1233"],"// import \"./styles.css\";\nimport React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Cell, Legend } from \"recharts\";\n\nconst renderLegend = (props) => {\n    const { payload } = props;\n  \n    return (\n      <ul>\n        {\n          payload.map((entry, index) => (\n            <li key={`item-${index}`} style={{color:`${entry.color}`}}>\n                {console.log(\"value\",entry)}\n                {entry.payload.name}\n                {entry.payload.quantity}\n                \n            </li>\n          ))\n        }\n      </ul>\n    );\n  }\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 }\n];\n\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.7;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\nexport default function WalletChart({chartValue}) {\n  return (\n    <PieChart width={500} height={350}>\n    <Legend align=\"right\" verticalAlign=\"top\" height={80} content={renderLegend} />\n      <Pie\n        data={chartValue.length && chartValue}\n        cx={134}\n        cy={134}\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={100}\n        innerRadius={60}\n        fill=\"#8884d8\"\n        dataKey=\"value\"\n      >\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n}\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/admins/index.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/admins/userDatagrid/index.js",["1234","1235","1236","1237","1238","1239","1240"],"import React from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Button, Grid } from '@material-ui/core';\n\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../../../utils/hooks\";\n\nimport { IAM_APP, USERS_LIST } from '../../../../utils/constants';\n\nimport { UrlQuery } from '../../../../utils/utils';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { Nav, Tab } from 'react-bootstrap';\n\nimport { Switch } from 'antd';\n\nimport Filters from './filters';\n\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\n\nfunction CustomPagination() {\n\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n\n  return (\n\n    <Pagination\n\n      className={classes.root}\n\n      shape=\"rounded\"\n\n      color=\"primary\"\n\n      // variant=\"contained\"\n\n      count={state.pagination.pageCount}\n\n      page={state.pagination.page + 1}\n\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n\n    />\n\n  );\n\n}\n\nconst handleSwitchChange = (e) => {\n\n  // props.setParams(state => ({ ...state, origin_wallet: e }));\n\n}\n\n\nfunction UsersDataGrid(props) {\n\n  const history = useHistory()\n\n\n  const columns = [\n    {\n      field: 'number',\n\n      headerName: 'شماره',\n\n      flex: 1,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      valueFormatter: (params) => `${params.id}`\n\n    },\n    {\n\n      field: 'name',\n\n      headerName: 'نام کاربر',\n\n      flex: 1,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      valueFormatter: (params) => `${params.row?.credentials?.first_name ?? '-'} ${params.row?.credentials?.last_name ?? ''}`\n\n    },\n    {\n\n      field: 'role',\n\n      headerName: 'نقش ادمین',\n\n      flex: 1,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      valueFormatter: (params) => `${params.row?.credentials?.first_name ?? '-'} ${params.row?.credentials?.last_name ?? ''}`\n\n    },\n\n    {\n\n      field: 'phone',\n\n      headerName: 'شماره تلفن',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      valueFormatter: (params) => `${params.row?.mobile}`\n\n    },\n\n    {\n\n      field: 'nationalNo',\n\n      headerName: 'کدملی',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      valueFormatter: (params) => `${params.row?.credentials?.national_code ?? '-'}`\n\n    },\n\n    {\n\n      field: 'age2',\n\n      headerName: 'وضعیت',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (params) => <div className=\"d-flex justify-content-end w-100\">\n\n        <Switch className=\"mx-auto w-50\" checkedChildren=\"فعال\" unCheckedChildren=\"غیر فعال\" defaultChecked />\n\n      </div>\n\n    },\n\n    {\n\n      field: '',\n\n      headerName: '',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 1,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) => <div className=\"d-flex justify-content-end w-100\">\n\n        <Button color=\"primary\" variant=\"contained\" onClick={() => { history.push(`admins/detail/${params.row?.id}`) }} className=\"ms-2\">ویرایش اطلاعات</Button>\n\n      </div>\n\n      ,\n\n    },\n\n  ];\n\n\n\n  const [params, setParams] = React.useState({ size: 10, page: 1 })\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n\n\n  React.useEffect(() => {\n\n    doFetch(\"GET\", IAM_APP, UrlQuery(USERS_LIST, params))\n\n  }, [params])\n\n\n\n  return (\n\n    <div className=\"content\">\n\n      <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto \">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1 text-nowrap\">ادمین ها </p>\n\n        </div>\n\n        <Filters params={params} setParams={setParams} />\n\n      </div>\n\n      <div className=\"d-flex px-3\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n\n          <DataGrid\n\n            style={{ border: 0 }}\n\n            autoHeight\n\n            rows={data?.items ?? []}\n\n            loading={isLoading}\n\n            columns={columns}\n\n            getRowClassName={\n\n              params => 'grid-content'\n\n            }\n\n            rowHeight={58}\n\n            isRowSelectable={false}\n\n            components={{\n\n              Pagination: CustomPagination\n\n            }}\n\n            pageSize={10}\n\n            rowCount={data?.total}\n\n            paginationMode=\"server\"\n\n            onPageChange={(param) => doFetch(\"GET\", IAM_APP, UrlQuery(USERS_LIST, { ...params, page: param + 1 }))}\n\n            disableSelectionOnClick\n\n            disableColumnMenu\n\n          />\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default UsersDataGrid\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/admins/userDatagrid/filters.js",["1241","1242","1243"],"import React, { useState } from 'react'\nimport { TextField, MenuItem, Grid, IconButton, InputAdornment, InputBase, withStyles, Select, Button } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useHistory } from 'react-router-dom';\n\n\nfunction Filters(props) {\n\n    const [mobile, setMobile] = useState('')\n\n    const [type, setType] = useState('');\n\n    const [group, setGroup] = useState('');\n\n    const history = useHistory()\n\n\n    const handleSelectChange = (e) => {\n        props.setParams(state => ({ ...state, [e.target.name]: e.target.value }));\n    }\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n\n            },\n\n        },\n\n    }))(InputBase);\n\n    React.useEffect(() => {\n        if (mobile === '') {\n            props.setParams(state => state)\n        }\n    }, [mobile])\n\n    return (\n        <Grid className=\"mb-3 ps-2\" justify=\"flex-end\" container spacing={1}>\n            <Grid item className=\"d-flex\">\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}> نقش</label>\n                <Select name=\"approve_state__in\" value={type} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setType(e.target.value) }} select size=\"small\">\n                    <MenuItem value=\"\">همه</MenuItem>\n                    <MenuItem value=\"approved\">احرازهویت شده</MenuItem>\n                    <MenuItem value=\"rejected\">رد شده</MenuItem>\n                    <MenuItem value=\"pending\">درحال انتظار</MenuItem>\n                    <MenuItem value=\"initialized\">احرازهویت نشده</MenuItem>\n                </Select>\n            </Grid>\n            <Grid item ><TextField\n                value={mobile}\n                type=\"search\"\n                onChange={e => setMobile(e.target.value)}\n                name=\"search\"\n                size=\"small\"\n                placeholder=\"جست و جو\"\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment>\n                            <IconButton onClick={() => props.setParams(state => ({ ...state, search: mobile }))}>\n                                <SearchIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    )\n                }}\n            />\n            </Grid>\n            <Button color=\"secondary\" variant=\"contained\" onClick={() => { history.push(`admins/add`) }} className=\"ms-2\">افزودن ادمین جدید</Button>\n\n            <Grid>\n\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Filters\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/admins/usersForm/selectedForm/index.js",["1244"],"import React, { useContext } from 'react';\nimport { UserContext } from '../../../../../context/provider';\nimport Form from '../index'\nimport './style.scss';\n\nconst AdminsSelectedForm = () => {\n  const data = useContext(UserContext);\n\n  return (\n    <div className=\"formsContainer\">\n      <Form />\n    </div>\n  );\n}\n\nexport default AdminsSelectedForm;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/admins/usersForm/index.js",["1245","1246","1247","1248","1249","1250","1251","1252"],"import React, { useContext, useEffect } from \"react\";\nimport { UserContext } from '../../../../context/provider';\nimport { Field, Formik } from \"formik\";\nimport { Link, useLocation, useParams, withRouter } from \"react-router-dom\";\nimport './adminPanel_products_Form.scss'\n// import { USERS_DETAIL } from \"../../../../utils/routerConstants\";\nimport { IAM_APP, USERS_DETAIL } from \"../../../../utils/constants\";\nimport { useFetchApi } from \"../../../../utils/hooks\";\nimport { Select } from \"antd\";\nimport { Button } from \"@material-ui/core\";\n\nconst { Option } = Select;\n\nconst required = (value) => (value ? undefined : \"Required\");\n\nconst Error = ({ name }) => (\n  <Field\n    name={name}\n    render={({ form: { touched, errors } }) =>\n      touched[name] && errors[name] ? <span>{errors[name]}</span> : null\n    }\n  />\n);\n\nconst Form = ({ history }) => {\n  function useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }\n  var index;\n  var query = useQuery();\n  index = query.get(\"id\")\n  const { id } = useParams();\n\n  console.log(`query:${id}`);\n\n  const dataContext = useContext(UserContext);\n  const [{ data: userDetail, isLoading, hasError }, doFetch] = useFetchApi(undefined, {});\n\n  useEffect(() => {\n    if (id) {\n      doFetch(\"GET\", IAM_APP, USERS_DETAIL(id))\n    }\n  }, [])\n  console.log(\"userDetail\", userDetail);\n  return (\n    <div className=\"bodyForm_s-admin mx-auto\">\n      <div className=\" d-flex align-items-center w-auto mx-auto me-5\">\n        <img src=\"/assets/drawer/Polygon.svg\" />\n        <p className=\"font_title_name me-1\">ایمیل </p>\n      </div>\n      <Formik\n        initialValues={{}}\n        enableReinitialize={true}\n      // validate={this.validate}\n      // onSubmit={this.handleSubmit}\n      >\n        {props => (\n          <form onSubmit={props.handleSubmit}>\n            <Link className=\"position-absolute d-flex text-decoration-none start-0 top-0 m-3 ms-5\" style={{ color: \"#10D078\" }} to={'/users/admins'} >بازگشت به لیست کاربران {`->`} </Link>\n\n            <div className=\"row container-fluid col-12 mx-auto\">\n              <div className=\"row mt-4 col-12 p-0\">\n                <div className=\"col-6 d-flex \">\n                  <p className=\"col-2 font_title_name\">نام و نام خانوادگی</p>\n                  <div className=\"col-9\">\n                    <Field\n                      value={`${userDetail?.credentials?.first_name} ${userDetail?.credentials?.last_name}`}\n                      type=\"text\"\n                      name=\"email\"\n                      placeholder=\"نام و نام خانوادگی کاربر\"\n                      className=\"form-control bg_input input_text\"\n                      disabled\n                    />\n                  </div>\n                </div>\n                <div className=\"col-6 d-flex \">\n                  <p className=\"col-2 font_title_name\">کدملی</p>\n                  <div className=\"col-9\">\n                    <Field\n                      value={userDetail?.credentials?.national_code}\n                      type=\"text\"\n                      name=\"email\"\n                      placeholder=\"کدملی کاربر\"\n                      className=\"form-control bg_input input_text\"\n                      disabled\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"row mt-4 col-12 p-0\">\n                <div className=\"col-6 d-flex \">\n                  <p className=\"col-2 font_title_name\">شماره موبایل</p>\n                  <div className=\"col-9\">\n                    <Field\n                      value={userDetail?.mobile}\n                      type=\"text\"\n                      name=\"email\"\n                      placeholder=\"شماره موبایل کاربر\"\n                      className=\"form-control bg_input input_text\"\n                      disabled\n                    />\n                  </div>\n                </div>\n                <div className=\"col-6 d-flex \">\n                  <p className=\"col-2 font_title_name\">نقش ادمین</p>\n                  <div className=\"col-9\">\n                    <Select\n                      showSearch\n\n                      defaultActiveFirstOption={true}\n\n                      style={{ width: \"-webkit-fill-available\" }}\n\n                      defaultValue=\"احرازهویت\"\n\n                      placeholder=\"جستجو نقش ادمین \"\n\n                      optionFilterProp=\"children\"\n\n                      filterOption={(input, option) =>\n\n                        option.title.toLowerCase().indexOf(input.toLowerCase()) >= 0 || option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0\n\n                      }\n\n                      filterSort={(optionA, optionB) =>\n\n                        optionA.value.toLowerCase().localeCompare(optionB.value.toLowerCase())\n\n                      }\n                      onChange={(e) => console.log(\"e\", e)}\n\n                      dropdownClassName=\"text-right\"\n                    >\n\n                      {[\"احرازهویت\", \"پشتیبانی\", \"سوپرادمین\"].map((item, index) =>\n\n                        <Option\n\n                          title={item}\n\n                          key={index}\n\n                          value={item}\n\n                        >\n\n                          {item}\n\n                        </Option>\n\n                      )}\n\n                    </Select>\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-end mt-3 ps-5 py-5\">\n                <Button className=\"\"\n                  id=\"save-button\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {\n\n                  }}\n                  disabled\n                >\n                  لغو\n                </Button>\n                <Button className=\"me-2\"\n                  variant=\"contained\"\n                  id=\"authentication-button\"\n                  color=\"primary\"\n                  onClick={() => {\n                    // setUserState(\"approved\")\n                    // setModalOpen(true)\n                  }}\n                // disabled={userDetail?.approve_state === \"approved\"}\n                >\n                  ثبت تغییرات\n                </Button>\n              </div>\n            </div>\n          </form>)}\n      </Formik>\n    </div>\n  );\n}\n\nexport default withRouter(Form);\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/robots/index.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/robots/userRobotsDatagrid/index.js",["1253","1254","1255","1256","1257","1258","1259"],"import React from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Button, Grid } from '@material-ui/core';\n\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\n\nimport { Pagination } from '@material-ui/lab';\n\nimport { useFetchApi } from \"../../../../utils/hooks\";\n\nimport { IAM_APP, USERS_LIST } from '../../../../utils/constants';\n\nimport { UrlQuery } from '../../../../utils/utils';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { Nav, Tab } from 'react-bootstrap';\n\nimport { Switch } from 'antd';\n\nimport Filters from './filters';\n\n\nconst useStyles = makeStyles({\n\n  root: {\n\n    // display: 'flex',\n\n    margin: '0 auto',\n\n  },\n\n});\n\n\nfunction CustomPagination() {\n\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  const classes = useStyles();\n\n\n  return (\n\n    <Pagination\n\n      className={classes.root}\n\n      shape=\"rounded\"\n\n      color=\"primary\"\n\n      // variant=\"contained\"\n\n      count={state.pagination.pageCount}\n\n      page={state.pagination.page + 1}\n\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n\n    />\n\n  );\n\n}\n\nconst handleSwitchChange = (e) => {\n\n  // props.setParams(state => ({ ...state, origin_wallet: e }));\n\n}\n\n\nfunction UserRobotsTable(props) {\n\n  const history = useHistory()\n\n\n  const columns = [\n    {\n\n      field: 'name',\n\n      headerName: 'نام ربات',\n\n      flex: 2,\n\n      type: 'string',\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      valueFormatter: (params) => `${params.row?.credentials?.first_name ?? '-'} ${params.row?.credentials?.last_name ?? ''}`\n\n    },\n\n    {\n\n      field: 'phone',\n\n      headerName: 'شماره موبایل',\n\n      flex: 2,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      valueFormatter: (params) => `${params.row?.mobile}`\n\n    },\n\n    {\n\n      field: 'age2',\n\n      headerName: 'وضعیت',\n\n      flex: 1,\n\n      sortable: false,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      align: 'center',\n\n      renderCell: (params) => <div className=\"d-flex justify-content-end w-100\">\n\n        <Switch className=\"mx-auto w-50\" checkedChildren=\"فعال\" unCheckedChildren=\"غیر فعال\" defaultChecked />\n\n      </div>\n\n    },\n\n    {\n\n      field: '',\n\n      headerName: '',\n\n      // description: 'This column has a value getter and is not sortable.',\n\n      sortable: false,\n\n      align: 'center',\n\n      flex: 3,\n\n      headerClassName: 'grid-header',\n\n      headerAlign: 'center',\n\n      renderCell: (params) => <div className=\"d-flex justify-content-end w-100 ms-3\">\n\n        <Button color=\"primary\" variant=\"contained\" onClick={() => { history.push(`robots/detail/${params.row?.id}`) }} className=\"ms-2\">تنظیمات</Button>\n\n      </div>\n\n      ,\n\n    },\n\n  ];\n\n\n\n  const [params, setParams] = React.useState({ size: 10, page: 1 })\n\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n\n\n  React.useEffect(() => {\n\n    doFetch(\"GET\", IAM_APP, UrlQuery(USERS_LIST, params))\n\n  }, [params])\n\n\n\n  return (\n\n    <div className=\"content\">\n\n      <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto \">\n\n        <div className=\"d-flex\">\n\n          <img src=\"/assets/drawer/Polygon.svg\" />\n\n          <p className=\"font_title_name me-1 text-nowrap\">ربات ها </p>\n\n        </div>\n\n        <Filters params={params} setParams={setParams} />\n\n      </div>\n\n      <div className=\"d-flex px-3\">\n\n        <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n\n          <DataGrid\n\n            style={{ border: 0 }}\n\n            autoHeight\n\n            rows={data?.items ?? []}\n\n            loading={isLoading}\n\n            columns={columns}\n\n            getRowClassName={\n\n              params => 'grid-content'\n\n            }\n\n            rowHeight={58}\n\n            isRowSelectable={false}\n\n            components={{\n\n              Pagination: CustomPagination\n\n            }}\n\n            pageSize={10}\n\n            rowCount={data?.total}\n\n            paginationMode=\"server\"\n\n            onPageChange={(param) => doFetch(\"GET\", IAM_APP, UrlQuery(USERS_LIST, { ...params, page: param + 1 }))}\n\n            disableSelectionOnClick\n\n            disableColumnMenu\n\n          />\n\n        </div>\n\n      </div>\n\n    </div>\n\n  )\n\n}\n\n\n\nexport default UserRobotsTable\n\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/robots/userRobotsDatagrid/filters.js",["1260","1261","1262"],"import React, { useState } from 'react'\nimport { TextField, MenuItem, Grid, IconButton, InputAdornment, InputBase, withStyles, Select, Button } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useHistory } from 'react-router-dom';\n\n\nfunction Filters(props) {\n\n    const [mobile, setMobile] = useState('')\n\n    const [type, setType] = useState('');\n\n    const [group, setGroup] = useState('');\n\n    const history = useHistory()\n\n\n    const handleSelectChange = (e) => {\n        props.setParams(state => ({ ...state, [e.target.name]: e.target.value }));\n    }\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n\n            },\n\n        },\n\n    }))(InputBase);\n\n    React.useEffect(() => {\n        if (mobile === '') {\n            props.setParams(state => state)\n        }\n    }, [mobile])\n\n    return (\n        <Grid className=\"mb-3 ps-2\" justify=\"flex-end\" container spacing={1}>\n            <Grid item className=\"d-flex\">\n                <label className=\"text-white ms-2 mt-2\" style={{ fontSize: 'smaller' }}> نقش</label>\n                <Select name=\"approve_state__in\" value={type} input={<BootstrapInput />} displayEmpty onChange={e => { handleSelectChange(e); setType(e.target.value) }} select size=\"small\">\n                    <MenuItem value=\"\">همه</MenuItem>\n                    <MenuItem value=\"approved\">احرازهویت شده</MenuItem>\n                    <MenuItem value=\"rejected\">رد شده</MenuItem>\n                    <MenuItem value=\"pending\">درحال انتظار</MenuItem>\n                    <MenuItem value=\"initialized\">احرازهویت نشده</MenuItem>\n                </Select>\n            </Grid>\n            <Grid item ><TextField\n                value={mobile}\n                type=\"search\"\n                onChange={e => setMobile(e.target.value)}\n                name=\"search\"\n                size=\"small\"\n                placeholder=\"جست و جو\"\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment>\n                            <IconButton onClick={() => props.setParams(state => ({ ...state, search: mobile }))}>\n                                <SearchIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    )\n                }}\n            />\n            </Grid>\n            <Button color=\"secondary\" variant=\"contained\" onClick={() => { history.push(`robots/add`) }} className=\"ms-2\">افزودن ربات جدید</Button>\n\n            <Grid>\n\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Filters\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/robots/usersForm/selectedForm/index.js",["1263"],"import React, { useContext } from 'react';\nimport { UserContext } from '../../../../../context/provider';\nimport Form from '../index'\nimport './style.scss';\n\nconst RobotsSelectedForm = () => {\n  const data = useContext(UserContext);\n\n  return (\n    <div className=\"formsContainer\">\n      <Form />\n    </div>\n  );\n}\n\nexport default RobotsSelectedForm;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/robots/usersForm/index.js",["1264","1265","1266","1267","1268","1269","1270","1271","1272"],"import React, { useContext, useEffect } from \"react\";\nimport { UserContext } from '../../../../context/provider';\nimport { Field, Formik } from \"formik\";\nimport { Link, useLocation, useParams, withRouter } from \"react-router-dom\";\nimport './adminPanel_products_Form.scss'\n// import { USERS_DETAIL } from \"../../../../utils/routerConstants\";\nimport { IAM_APP, USERS_DETAIL } from \"../../../../utils/constants\";\nimport { useFetchApi } from \"../../../../utils/hooks\";\nimport { Select } from \"antd\";\nimport { Button } from \"@material-ui/core\";\n\nconst { Option } = Select;\n\nconst required = (value) => (value ? undefined : \"Required\");\n\nconst Error = ({ name }) => (\n  <Field\n    name={name}\n    render={({ form: { touched, errors } }) =>\n      touched[name] && errors[name] ? <span>{errors[name]}</span> : null\n    }\n  />\n);\n\nconst Form = ({ history }) => {\n  function useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }\n  var index;\n  var query = useQuery();\n  index = query.get(\"id\")\n  const { id } = useParams();\n\n  console.log(`query:${id}`);\n\n  const dataContext = useContext(UserContext);\n  const [{ data: userDetail, isLoading, hasError }, doFetch] = useFetchApi(undefined, {});\n\n  useEffect(() => {\n    if (id) {\n      doFetch(\"GET\", IAM_APP, USERS_DETAIL(id))\n    }\n  }, [])\n  console.log(\"userDetail\", userDetail);\n  return (\n    <div className=\"bodyForm_s-admin mx-auto\">\n      <div className=\" d-flex align-items-center w-auto mx-auto me-5\">\n        <img src=\"/assets/drawer/Polygon.svg\" />\n        <p className=\"font_title_name me-1\">ایمیل </p>\n      </div>\n      <Formik\n        initialValues={{}}\n        enableReinitialize={true}\n      // validate={this.validate}\n      // onSubmit={this.handleSubmit}\n      >\n        {props => (\n          <form onSubmit={props.handleSubmit}>\n            <Link className=\"position-absolute d-flex text-decoration-none start-0 top-0 m-3 ms-5\" style={{ color: \"#10D078\" }} to={'/users/robots'} >بازگشت به لیست کاربران {`->`} </Link>\n\n            <div className=\"row container-fluid col-12 mx-auto\">\n              <div className=\"row mt-4 col-12 p-0\">\n                <div className=\"col-6 d-flex \">\n                  <p className=\"col-2 font_title_name\">نام ربات</p>\n                  <div className=\"col-9\">\n                    <Field\n                      value={`${userDetail?.credentials?.first_name} ${userDetail?.credentials?.last_name}`}\n                      type=\"text\"\n                      name=\"email\"\n                      placeholder=\"نام ربات\"\n                      className=\"form-control bg_input input_text\"\n                      disabled\n                    />\n                  </div>\n                </div>\n                {/* <div className=\"col-6 d-flex \">\n                  <p className=\"col-2 font_title_name\">کدملی</p>\n                  <div className=\"col-9\">\n                    <Field\n                      value={userDetail?.credentials?.national_code}\n                      type=\"text\"\n                      name=\"email\"\n                      placeholder=\"کدملی کاربر\"\n                      className=\"form-control bg_input input_text\"\n                      disabled\n                    />\n                  </div>\n                </div> */}\n                <div className=\"col-6 d-flex \">\n                  <p className=\"col-2 font_title_name\">شماره موبایل</p>\n                  <div className=\"col-9\">\n                    <Field\n                      value={userDetail?.mobile}\n                      type=\"text\"\n                      name=\"email\"\n                      placeholder=\"شماره موبایل ربات\"\n                      className=\"form-control bg_input input_text\"\n                      disabled\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"row mt-4 col-12 p-0\">\n                <div className=\"col-6 d-flex \">\n                  <p className=\"col-2 font_title_name\">رمزعبور</p>\n                  <div className=\"col-9 d-flex\">\n                    <div className=\"col-8\">\n                      <Field\n                        // value={userDetail?.mobile}\n                        type=\"password\"\n                        name=\"pass\"\n                        placeholder=\"رمزعبور ربات\"\n                        className=\"form-control bg_input input_text\"\n                        disabled\n                      />\n                    </div>\n                    <div className=\"col-4 me-1\">\n                      <Button className=\"me-2\"\n                        variant=\"contained\"\n                        id=\"authentication-button\"\n                        color=\"primary\"\n                        onClick={() => {\n                          // setUserState(\"approved\")\n                          // setModalOpen(true)\n                        }}\n                      // disabled={userDetail?.approve_state === \"approved\"}\n                      >\n                        ایجاد رمزعبور\n                      </Button>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-end mt-3 ps-5 py-5\">\n                {/* <Button className=\"\"\n                  id=\"save-button\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {\n\n                  }}\n                  disabled\n                >\n                  لغو\n                </Button> */}\n                <Button className=\"me-2\"\n                  variant=\"contained\"\n                  id=\"authentication-button\"\n                  color=\"primary\"\n                  onClick={() => {\n                    // setUserState(\"approved\")\n                    // setModalOpen(true)\n                  }}\n                // disabled={userDetail?.approve_state === \"approved\"}\n                >\n                  تایید و ثبت\n                </Button>\n              </div>\n            </div>\n          </form>)}\n      </Formik>\n    </div>\n  );\n}\n\nexport default withRouter(Form);\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/roleManage/roleDetail/index.js",["1273","1274","1275","1276","1277","1278","1279","1280","1281","1282"],"import { Button, Container } from '@material-ui/core';\nimport { Checkbox, notification, Switch } from 'antd';\nimport axios from 'axios';\nimport { Field, Formik } from 'formik';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { UserContext } from '../../../context/provider';\nimport ConfigApi from '../../../utils/config-api';\nimport { useFetchApi } from '../../../utils/hooks';\n// import AddNetwork from './add-network';\n// import './marketSetting.scss'\nimport { BASE_CONFIG_URL, EXCHANGE_CONFIG, CONFIG_COIN } from '../../../utils/constants';\nimport Filters from './filters';\n\n\nconst data = [\n    {\n        name: 'دسترسی یک',\n        checked: true,\n    },\n    {\n        name: 'دسترسی دو',\n        checked: true,\n    },\n    {\n        name: 'دسترسی سه',\n        checked: false,\n\n    },\n    {\n        name: 'دسترسی چهار',\n        checked: true,\n\n    },\n    {\n        name: 'دسترسی پنج',\n        checked: true,\n\n    },\n    {\n        name: 'دسترسی شش',\n        checked: true,\n\n    },\n    {\n        name: 'دسترسی هفت',\n        checked: true,\n\n    },\n];\nconst RoleDetail = () => {\n\n    const { id } = useParams();\n\n    const [cryptoItem, setCryptoItem] = useState();\n\n    const [activeCheck, setActiveCheck] = useState(false);\n\n    const [showCheck, setShowCheck] = useState(false);\n\n    const [addNetwork, setAddNetwork] = useState(false);\n\n    const cryptoContext = useContext(UserContext);\n\n    const history = useHistory()\n\n    let networkList = [1];\n\n    const [params, setParams] = React.useState({ size: 10, page: 1 })\n\n    const openNotification = describe => {\n\n        notification.success({\n\n            message: `پیغام ثبت تغییرات `,\n\n            description: describe,\n\n            placement: \"bottomRight\",\n\n            className: \"bg-success\",\n\n            style: { zIndex: '50000' }\n\n\n\n        });\n\n        notification.config({\n\n            rtl: false\n\n        })\n\n    };\n    const handleSettingApprove = (values) => {\n        const configUrl = `${BASE_CONFIG_URL}${EXCHANGE_CONFIG}${CONFIG_COIN(id?.toLowerCase())}`\n        // let config = {\n        //     headers: {\n        //         'Referrer-Policy': 'strict-origin-when-cross-origin',\n        //     }\n        //   }\n\n        let payload = {\n            is_active: activeCheck,\n            is_show: showCheck,\n            icon: values.icon,\n            symbol: values.symbol,\n            title: values.title,\n            title_en: values.title_en,\n            minimum_price_usdt: values.minimum_price_usdt,\n            minimum_price_irr: values.minimum_price_irr,\n            decimals: values.decimals,\n            networks: values.networks\n        }\n        axios.put(configUrl, payload)\n            .then(resp => console.log(\"resp\", resp))\n            .finally(() => {\n                openNotification('تغییرات با موفقیت ثبت شد')\n                history.push('/rolemanage')\n            })\n    }\n    function onChange(checkedValues) {\n        console.log('checked = ', checkedValues);\n    }\n\n\n    useEffect(() => {\n        if (id) {\n            cryptoContext.configData?.map(item => item.Value.symbol === id && setCryptoItem(item))\n        }\n    }, [id, cryptoContext.configData]);\n    useEffect(() => {\n        if (cryptoItem?.Value?.is_active) {\n            setActiveCheck(true)\n        }\n        if (cryptoItem?.Value?.is_show) {\n            setShowCheck(true)\n        }\n    }, [cryptoItem]);\n    return (\n\n        <div className=\"cryptoSetting\">\n\n            <ConfigApi />\n\n            {/* {console.log(\"id\", cryptoItem)} */}\n            <p className=\"text-white pe-4\">ویرایش نقش</p>\n\n            <div className=\"content\">\n\n                <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n                    <div className=\"d-flex\">\n\n                        <img src=\"/assets/drawer/Polygon.svg\" />\n\n                        <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>لیست دسترسی‌ها </p>\n\n                    </div>\n\n                    <Link className=\"text-decoration-none ms-3\" style={{ color: \"#10D078\" }} to={'/rolemanage'} >بازگشت به لیست نقش‌ها {`->`} </Link>\n\n                </div>\n\n                <Filters params={params} setParams={setParams} />\n\n\n                <Container className=\"w-100 py-3 bg-dark\">\n                    <Checkbox.Group style={{ width: '100%' }} onChange={onChange}>\n                        <Row>\n                            {data?.map(item =>\n                                <Col span={8}>\n                                    <Checkbox className=\"text-light\" defaultChecked={item.checked} value={item.name}>{item.name}</Checkbox>\n                                </Col>\n                            )}\n                        </Row>\n                    </Checkbox.Group>\n                </Container>\n\n            </div>\n\n        </div>\n    );\n}\n\nexport default RoleDetail;\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/roleManage/index.js",[],"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/roleManage/roleDataGrid/index.js",["1283","1284","1285","1286","1287"],"import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Grid, IconButton } from '@material-ui/core';\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\nimport { Pagination } from '@material-ui/lab';\nimport { Edit, Delete } from '@material-ui/icons';\nimport { useFetchApi } from \"../../../utils/hooks\";\nimport { USERS_TRANSACTION_HISTORY } from '../../../utils/constants';\nimport { UrlQuery } from '../../../utils/utils';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Filters from './filters';\n\n\nconst useStyles = makeStyles({\n    root: {\n        // display: 'flex',\n        margin: '0 auto',\n    },\n});\n\nfunction CustomPagination() {\n    const { state, apiRef } = useGridSlotComponentProps();\n    const classes = useStyles();\n\n    return (\n        <Pagination\n            className={classes.root}\n            shape=\"rounded\"\n            color=\"primary\"\n            // variant=\"contained\"\n            count={state.pagination.pageCount}\n            page={state.pagination.page + 1}\n            onChange={(event, value) => apiRef.current.setPage(value - 1)}\n        />\n    );\n}\n\nconst rows = [\n    {\n        id: 1,\n        tracking_code: \"412515\",\n        owner_id: \"fjasfkljas\",\n        national_code: \"55457575\",\n        origin_wallet: \"btc\",\n        quantity: \"2.3\",\n        dest_wallet: \"\",\n        action: \"approve\",\n        status: \"in_progress\",\n    },\n    {\n        id: 2,\n        tracking_code: \"412515\",\n        owner_id: \"fjasfkljas\",\n        national_code: \"55457575\",\n        origin_wallet: \"btc\",\n        quantity: \"2.3\",\n        dest_wallet: \"\",\n        action: \"approve\",\n        status: \"in_progress\",\n    },\n    {\n        id: 3,\n        tracking_code: \"412515\",\n        owner_id: \"fjasfkljas\",\n        national_code: \"55457575\",\n        origin_wallet: \"btc\",\n        quantity: \"2.3\",\n        dest_wallet: \"\",\n        action: \"approve\",\n        status: \"in_progress\",\n    },\n]\n\nfunction RoleDataGrid(props) {\n\n    const history = useHistory()\n\n    const columns = [\n        {\n            field: 'id',\n            headerName: 'شماره',\n            flex: 1,\n            type: 'string',\n            sortable: false,\n            headerClassName: 'grid-header',\n            headerAlign: 'center',\n            align: 'center',\n            // renderCell: (values) => `${values.row?.tracking_code.slice(0, 8)}`\n        },\n        {\n            field: 'owner_id',\n            headerName: 'نام نقش',\n            // description: 'This column has a value getter and is not sortable.',\n            sortable: false,\n            align: 'center',\n            flex: 1,\n            headerClassName: 'grid-header',\n            headerAlign: 'center',\n        },\n        {\n            field: 'created_at',\n            headerName: 'ویرایش',\n            // description: 'This column has a value getter and is not sortable.',\n            sortable: false,\n            align: 'right',\n            flex: 3,\n            headerClassName: 'grid-header',\n            headerAlign: 'right',\n            renderCell: (values) => (\n                <IconButton variant=\"outlined\" size=\"small\" color=\"secondary\" onClick={() => { history.push(`/rolemanage/detail/${values?.row?.id}`) }} small className=\"ms-4 bg-white\"><Edit /></IconButton>\n            )\n        },\n        {\n            field: 'status',\n            headerName: 'حذف',\n            // description: 'This column has a value getter and is not sortable.',\n            sortable: false,\n            align: 'center',\n            flex: 1,\n            headerClassName: 'grid-header',\n            headerAlign: 'center',\n            renderCell: (values) => <IconButton variant=\"outlined\" size=\"small\" onClick={() => { }} className=\"ms-2 text-danger bg-white\"><Delete /></IconButton>\n        }\n    ];\n\n    const [params, setParams] = React.useState({ order: \"-updated_at\", size: 10, page: 0 })\n\n    const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    React.useEffect(() => {\n        // doFetch(\"GET\", UrlQuery(USERS_TRANSACTION_HISTORY, {...params}) )\n    }, [params])\n\n    return (\n        <div className=\"content\">\n            <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n                <div className=\"d-flex\">\n                    <img src=\"/assets/drawer/Polygon.svg\" />\n                    <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>مدیریت امتیازها</p>\n                </div>\n                {/* <Filters params={params} setParams={setParams} /> */}\n                <Grid className=\"mb-3 ps-2\" justify=\"flex-end\" container spacing={1}>\n                    <Button color=\"secondary\" variant=\"contained\" onClick={() => { history.push('/rolemanage/add') }} className=\"ms-2\">افزودن نقش جدید</Button>\n                    <Button color=\"secondary\" variant=\"contained\" onClick={() => { }} className=\"ms-2 bg-transparent\" style={{ border: \"1px solid #558EFA\", color: \"#558EFA\" }}>ویرایش دسترسی ها</Button>\n                </Grid>\n            </div>\n            <div className=\"d-flex px-3\">\n                <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n                    <DataGrid\n                        style={{ border: 0 }}\n                        autoHeight\n                        // rows={data?.items ?? []}\n                        rows={rows}\n                        loading={isLoading}\n                        columns={columns}\n                        getRowClassName={\n                            params => 'grid-content'\n                        }\n                        headerHeight={50}\n                        rowHeight={52}\n                        isRowSelectable={false}\n                        components={{\n                            Pagination: CustomPagination\n                        }}\n                        pageSize={10}\n                        rowCount={data?.total}\n                        paginationMode=\"server\"\n                        onPageChange={(param) => doFetch(\"GET\", UrlQuery(USERS_TRANSACTION_HISTORY, { ...params, page: param }))}\n                        disableSelectionOnClick\n                        disableColumnMenu\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RoleDataGrid\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/roleManage/roleDataGrid/filters.js",["1288"],"import React, { useState } from 'react'\nimport { TextField, MenuItem, Grid, \n   IconButton, InputAdornment, Select, withStyles, InputBase\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\n\nfunction Filters(props) {\n\n    const [tradeType, setTradeType] = useState('');\n    const [originWallet, setOriginWallet] = useState('');\n    const [nationalCode, setNationalCode] = React.useState('')\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n\n            },\n\n        },\n\n    }))(InputBase);\n    const handleSelectChange = (e) => {\n        props.setParams( state => ({...state, [e.target.name]: e.target.value}) );\n    }\n\n    return (\n        <Grid className=\"mb-3 ps-4\" justify=\"flex-end\" container spacing={1}>\n            <Grid item xs={2}>\n                <label className=\"text-white ms-2 mt-2\">نوع ارز</label>\n                <Select name=\"origin_wallet\" value={originWallet} displayEmpty onChange={ e => {handleSelectChange(e); setOriginWallet(e.target.value)}} select size=\"small\">\n                    <MenuItem value=\"\">همه ارزها</MenuItem>\n                    <MenuItem value=\"irr\">ریال</MenuItem>\n                    <MenuItem value=\"btc\">بیت کوین</MenuItem>\n                </Select>    \n            </Grid>\n            <Grid item xs={2}>\n                <label className=\"text-white ms-2 mt-2\">نوع سفارش</label>\n                <Select name=\"match_type\" value={tradeType} displayEmpty onChange={ e => {handleSelectChange(e); setTradeType(e.target.value)}} select size=\"small\">\n                    <MenuItem value=\"\">همه سفارش‌ها</MenuItem>\n                    <MenuItem value=\"market\">سریع</MenuItem>\n                    <MenuItem value=\"limit\">محدود</MenuItem>\n                </Select>    \n            </Grid>\n            <Grid item className=\"mt-2\" >\n                <TextField \n                    value={nationalCode} \n                    type=\"search\" \n                    onChange={ e => setNationalCode(e.target.value)} \n                    name=\"national_code\" \n                    size=\"small\" \n                    placeholder=\"جست و جو\"\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment>\n                            <IconButton onClick={ () => props.setParams( state => ({...state, national_code: nationalCode}))}>\n                                <SearchIcon />\n                            </IconButton>\n                            </InputAdornment>\n                        )\n                        }}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Filters\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/roleManage/roleDetail/filters.js",["1289","1290","1291","1292","1293","1294","1295","1296"],"import React, { useState } from 'react'\nimport {\n    TextField, MenuItem, Grid,\n    IconButton, InputAdornment, Select, withStyles, InputBase\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\n\nfunction Filters(props) {\n\n    const [tradeType, setTradeType] = useState('');\n    const [originWallet, setOriginWallet] = useState('');\n    const [nationalCode, setNationalCode] = useState('')\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'smaller',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n\n            },\n\n        },\n\n    }))(InputBase);\n    const handleSelectChange = (e) => {\n        props.setParams(state => ({ ...state, [e.target.name]: e.target.value }));\n    }\n\n    return (\n        <Grid className=\"mb-3 pe-3 mt-1\" justify=\"flex-start\" container spacing={1}>\n            <Grid item className=\"mt-2\" >\n                <TextField\n                    value={nationalCode}\n                    type=\"search\"\n                    onChange={e => setNationalCode(e.target.value)}\n                    name=\"national_code\"\n                    size=\"small\"\n                    placeholder=\"جست و جو\"\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment>\n                                <IconButton onClick={() => props.setParams(state => ({ ...state, national_code: nationalCode }))}>\n                                    <SearchIcon />\n                                </IconButton>\n                            </InputAdornment>\n                        )\n                    }}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Filters\n","/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/roleManage/roleAdd/index.js",["1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309","1310","1311"],"import { Button, Container, IconButton, InputAdornment, TextField } from '@material-ui/core';\nimport { Checkbox, Grid, notification, Switch } from 'antd';\nimport axios from 'axios';\nimport { Field, Formik } from 'formik';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { UserContext } from '../../../context/provider';\nimport ConfigApi from '../../../utils/config-api';\nimport { useFetchApi } from '../../../utils/hooks';\n// import AddNetwork from './add-network';\n// import './marketSetting.scss'\nimport { BASE_CONFIG_URL, EXCHANGE_CONFIG, CONFIG_COIN } from '../../../utils/constants';\n// import Filters from './filters';\nimport SearchIcon from \"@material-ui/icons/Search\";\n\n\nconst data = [\n    {\n        name: 'دسترسی یک',\n        checked: true,\n    },\n    {\n        name: 'دسترسی دو',\n        checked: true,\n    },\n    {\n        name: 'دسترسی سه',\n        checked: false,\n\n    },\n    {\n        name: 'دسترسی چهار',\n        checked: true,\n\n    },\n    {\n        name: 'دسترسی پنج',\n        checked: true,\n\n    },\n    {\n        name: 'دسترسی شش',\n        checked: true,\n\n    },\n    {\n        name: 'دسترسی هفت',\n        checked: true,\n\n    },\n];\nconst RoleAdd = () => {\n\n    const { id } = useParams();\n    const [roleName, setRoleName] = useState('');\n    const [role, setRole] = useState('');\n    const [cryptoItem, setCryptoItem] = useState();\n\n    const [activeCheck, setActiveCheck] = useState(false);\n\n    const [showCheck, setShowCheck] = useState(false);\n\n    const [addNetwork, setAddNetwork] = useState(false);\n\n    const cryptoContext = useContext(UserContext);\n\n    const history = useHistory()\n\n    let networkList = [1];\n\n    const [params, setParams] = React.useState({ size: 10, page: 1 })\n    const [children, setChildren] = useState([]);\n    const openNotification = describe => {\n\n        notification.success({\n\n            message: `پیغام ثبت تغییرات `,\n\n            description: describe,\n\n            placement: \"bottomRight\",\n\n            className: \"bg-success\",\n\n            style: { zIndex: '50000' }\n\n\n\n        });\n\n        notification.config({\n\n            rtl: false\n\n        })\n\n    };\n    const handleSettingApprove = (values) => {\n        const configUrl = `${BASE_CONFIG_URL}${EXCHANGE_CONFIG}${CONFIG_COIN(id?.toLowerCase())}`\n        // let config = {\n        //     headers: {\n        //         'Referrer-Policy': 'strict-origin-when-cross-origin',\n        //     }\n        //   }\n\n        let payload = {\n            is_active: activeCheck,\n            is_show: showCheck,\n            icon: values.icon,\n            symbol: values.symbol,\n            title: values.title,\n            title_en: values.title_en,\n            minimum_price_usdt: values.minimum_price_usdt,\n            minimum_price_irr: values.minimum_price_irr,\n            decimals: values.decimals,\n            networks: values.networks\n        }\n        axios.put(configUrl, payload)\n            .then(resp => console.log(\"resp\", resp))\n            .finally(() => {\n                openNotification('تغییرات با موفقیت ثبت شد')\n                history.push('/rolemanage')\n            })\n    }\n    function onChange(checkedValues) {\n        console.log('checked = ', checkedValues);\n        setChildren(checkedValues)\n    }\n    const handleChangeInput = (values) => { console.log(\"v\", values) }\n\n    useEffect(() => {\n        if (id) {\n            cryptoContext.configData?.map(item => item.Value.symbol === id && setCryptoItem(item))\n        }\n    }, [id, cryptoContext.configData]);\n    useEffect(() => {\n        if (cryptoItem?.Value?.is_active) {\n            setActiveCheck(true)\n        }\n        if (cryptoItem?.Value?.is_show) {\n            setShowCheck(true)\n        }\n    }, [cryptoItem]);\n    return (\n\n        <div className=\"cryptoSetting\">\n\n            <ConfigApi />\n\n            {/* {console.log(\"id\", cryptoItem)} */}\n            <p className=\"text-white pe-4\">ویرایش نقش</p>\n\n            <div className=\"content\">\n\n                <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n\n                    <div className=\"d-flex\">\n\n                        <img src=\"/assets/drawer/Polygon.svg\" />\n\n                        <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>لیست دسترسی‌ها </p>\n\n                    </div>\n\n                    {/* <Link className=\"text-decoration-none ms-3\" style={{ color: \"#10D078\" }} to={'/rolemanage'} >بازگشت به لیست نقش‌ها {`->`} </Link> */}\n                </div>\n                <Row className='m-auto w-100 my-4'>\n                    <Col sm={6}>\n                        <div className=\"d-flex w-100\" style={{ maxHeight: \"34px\" }}>\n                            <label className=\"text-end text-white d-flex align-items-center\" style={{ minWidth: \"90px\" }} htmlFor=\"rial_buying_commission\">نام نقش</label>\n                            <input\n                                type=\"text\"\n                                name=\"role_name\"\n                                placeholder=\"نام نقش جدید را بنویسید\"\n                                required\n                                onChange={handleChangeInput}\n                                className=\"form-control bg_input input_text\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                {/* <Filters params={params} setParams={setParams} /> */}\n                <div className=\"mb-3 pe-3 mt-1\">\n                    <div className=\"mt-2\" >\n                        <TextField\n                            value={role}\n                            type=\"search\"\n                            onChange={e => setRole(e.target.value)}\n                            name=\"national_code\"\n                            // size=\"small\"\n                            className=\"w-100\"\n                            placeholder=\"جست و جو\"\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment>\n                                        <IconButton onClick={() => setParams(state => ({ ...state, role: role }))}>\n                                            <SearchIcon />\n                                        </IconButton>\n                                    </InputAdornment>\n                                )\n                            }}\n                        />\n                    </div>\n                </div>\n                <div className=\"d-flex\">\n                    {children?.map(item => <div className='border border-secondary m-2 px-2 py-1 rounded-pill font_style_selected_pc d-flex h-100' style={{ cursor: \"pointer\" }}><p className=\"m-0 p-0\">{item}</p><div className='border border-secondary me-1 px-2 rounded-pill text-secondary'>x</div></div>)}\n                    {console.log(children)}\n                </div>\n                <Container className=\"w-100 py-3 bg-dark\">\n                    <Checkbox.Group style={{ width: '100%' }} onChange={onChange}>\n                        <Row>\n                            {data?.map(item =>\n                                <Col span={8}>\n                                    <Checkbox className=\"text-light\" defaultChecked={item.checked} value={item.name}>{item.name}</Checkbox>\n                                </Col>\n                            )}\n                        </Row>\n                    </Checkbox.Group>\n                </Container>\n\n            </div>\n\n        </div>\n    );\n}\n\nexport default RoleAdd;\n",{"ruleId":"1312","replacedBy":"1313"},{"ruleId":"1314","replacedBy":"1315"},{"ruleId":"1316","severity":1,"message":"1317","line":7,"column":42,"nodeType":"1318","messageId":"1319","endLine":7,"endColumn":50},{"ruleId":"1316","severity":1,"message":"1320","line":7,"column":52,"nodeType":"1318","messageId":"1319","endLine":7,"endColumn":68},{"ruleId":"1316","severity":1,"message":"1321","line":30,"column":7,"nodeType":"1318","messageId":"1319","endLine":30,"endColumn":12},{"ruleId":"1316","severity":1,"message":"1322","line":59,"column":12,"nodeType":"1318","messageId":"1319","endLine":59,"endColumn":19},{"ruleId":"1316","severity":1,"message":"1323","line":59,"column":21,"nodeType":"1318","messageId":"1319","endLine":59,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1324","line":61,"column":12,"nodeType":"1318","messageId":"1319","endLine":61,"endColumn":26},{"ruleId":"1316","severity":1,"message":"1325","line":61,"column":28,"nodeType":"1318","messageId":"1319","endLine":61,"endColumn":45},{"ruleId":"1316","severity":1,"message":"1326","line":64,"column":11,"nodeType":"1318","messageId":"1319","endLine":64,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1327","line":138,"column":20,"nodeType":"1318","messageId":"1319","endLine":138,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1328","line":140,"column":20,"nodeType":"1318","messageId":"1319","endLine":140,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1329","line":140,"column":31,"nodeType":"1318","messageId":"1319","endLine":140,"endColumn":39},{"ruleId":"1316","severity":1,"message":"1330","line":142,"column":19,"nodeType":"1318","messageId":"1319","endLine":142,"endColumn":32},{"ruleId":"1316","severity":1,"message":"1331","line":142,"column":44,"nodeType":"1318","messageId":"1319","endLine":142,"endColumn":66},{"ruleId":"1316","severity":1,"message":"1332","line":142,"column":77,"nodeType":"1318","messageId":"1319","endLine":142,"endColumn":98},{"ruleId":"1333","severity":1,"message":"1334","line":156,"column":43,"nodeType":"1335","messageId":"1336","endLine":156,"endColumn":45},{"ruleId":"1337","severity":1,"message":"1338","line":193,"column":8,"nodeType":"1339","endLine":193,"endColumn":16,"suggestions":"1340"},{"ruleId":"1341","severity":1,"message":"1342","line":204,"column":21,"nodeType":"1343","endLine":204,"endColumn":62},{"ruleId":"1316","severity":1,"message":"1317","line":4,"column":42,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":50},{"ruleId":"1316","severity":1,"message":"1320","line":4,"column":52,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":68},{"ruleId":"1316","severity":1,"message":"1344","line":5,"column":9,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":30},{"ruleId":"1316","severity":1,"message":"1345","line":36,"column":37,"nodeType":"1318","messageId":"1319","endLine":36,"endColumn":48},{"ruleId":"1316","severity":1,"message":"1329","line":39,"column":58,"nodeType":"1318","messageId":"1319","endLine":39,"endColumn":66},{"ruleId":"1337","severity":1,"message":"1346","line":47,"column":8,"nodeType":"1339","endLine":47,"endColumn":10,"suggestions":"1347"},{"ruleId":"1337","severity":1,"message":"1348","line":53,"column":8,"nodeType":"1339","endLine":53,"endColumn":25,"suggestions":"1349"},{"ruleId":"1341","severity":1,"message":"1342","line":70,"column":21,"nodeType":"1343","endLine":70,"endColumn":62},{"ruleId":"1316","severity":1,"message":"1350","line":2,"column":8,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":19},{"ruleId":"1316","severity":1,"message":"1350","line":2,"column":8,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1351","line":105,"column":8,"nodeType":"1339","endLine":105,"endColumn":10,"suggestions":"1352"},{"ruleId":"1316","severity":1,"message":"1350","line":2,"column":8,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":19},{"ruleId":"1337","severity":1,"message":"1353","line":26,"column":8,"nodeType":"1339","endLine":26,"endColumn":10,"suggestions":"1354"},{"ruleId":"1337","severity":1,"message":"1355","line":32,"column":8,"nodeType":"1339","endLine":32,"endColumn":28,"suggestions":"1356"},{"ruleId":"1341","severity":1,"message":"1342","line":39,"column":21,"nodeType":"1343","endLine":39,"endColumn":61},{"ruleId":"1316","severity":1,"message":"1350","line":4,"column":8,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":19},{"ruleId":"1316","severity":1,"message":"1357","line":17,"column":23,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":35},{"ruleId":"1316","severity":1,"message":"1358","line":18,"column":23,"nodeType":"1318","messageId":"1319","endLine":18,"endColumn":35},{"ruleId":"1316","severity":1,"message":"1359","line":19,"column":23,"nodeType":"1318","messageId":"1319","endLine":19,"endColumn":35},{"ruleId":"1316","severity":1,"message":"1360","line":20,"column":23,"nodeType":"1318","messageId":"1319","endLine":20,"endColumn":35},{"ruleId":"1316","severity":1,"message":"1361","line":22,"column":11,"nodeType":"1318","messageId":"1319","endLine":22,"endColumn":20},{"ruleId":"1362","severity":1,"message":"1363","line":37,"column":22,"nodeType":"1364","messageId":"1365","endLine":37,"endColumn":26},{"ruleId":"1337","severity":1,"message":"1353","line":42,"column":8,"nodeType":"1339","endLine":42,"endColumn":10,"suggestions":"1366"},{"ruleId":"1337","severity":1,"message":"1367","line":51,"column":8,"nodeType":"1339","endLine":51,"endColumn":48,"suggestions":"1368"},{"ruleId":"1341","severity":1,"message":"1342","line":62,"column":21,"nodeType":"1343","endLine":62,"endColumn":61},{"ruleId":"1316","severity":1,"message":"1350","line":2,"column":8,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":19},{"ruleId":"1316","severity":1,"message":"1350","line":2,"column":8,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":19},{"ruleId":"1316","severity":1,"message":"1350","line":4,"column":8,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":19},{"ruleId":"1316","severity":1,"message":"1350","line":6,"column":8,"nodeType":"1318","messageId":"1319","endLine":6,"endColumn":19},{"ruleId":"1316","severity":1,"message":"1350","line":2,"column":8,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":19},{"ruleId":"1316","severity":1,"message":"1350","line":2,"column":8,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":19},{"ruleId":"1316","severity":1,"message":"1350","line":2,"column":8,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":19},{"ruleId":"1316","severity":1,"message":"1369","line":1,"column":17,"nodeType":"1318","messageId":"1319","endLine":1,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1370","line":17,"column":22,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1371","line":81,"column":42,"nodeType":"1318","messageId":"1319","endLine":81,"endColumn":58},{"ruleId":"1341","severity":1,"message":"1342","line":112,"column":11,"nodeType":"1343","endLine":112,"endColumn":52},{"ruleId":"1372","severity":1,"message":"1373","line":361,"column":12,"nodeType":"1374","messageId":"1375","endLine":361,"endColumn":21,"fix":"1376"},{"ruleId":"1372","severity":1,"message":"1377","line":361,"column":23,"nodeType":"1374","messageId":"1375","endLine":361,"endColumn":42,"fix":"1378"},{"ruleId":"1372","severity":1,"message":"1379","line":361,"column":44,"nodeType":"1374","messageId":"1375","endLine":361,"endColumn":61,"fix":"1380"},{"ruleId":"1316","severity":1,"message":"1329","line":361,"column":53,"nodeType":"1318","messageId":"1319","endLine":361,"endColumn":61},{"ruleId":"1316","severity":1,"message":"1345","line":363,"column":35,"nodeType":"1318","messageId":"1319","endLine":363,"endColumn":46},{"ruleId":"1337","severity":1,"message":"1381","line":373,"column":6,"nodeType":"1339","endLine":373,"endColumn":14,"suggestions":"1382"},{"ruleId":"1341","severity":1,"message":"1342","line":385,"column":11,"nodeType":"1343","endLine":385,"endColumn":52},{"ruleId":"1316","severity":1,"message":"1383","line":7,"column":33,"nodeType":"1318","messageId":"1319","endLine":7,"endColumn":45},{"ruleId":"1316","severity":1,"message":"1370","line":9,"column":22,"nodeType":"1318","messageId":"1319","endLine":9,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1384","line":37,"column":7,"nodeType":"1318","messageId":"1319","endLine":37,"endColumn":11},{"ruleId":"1316","severity":1,"message":"1329","line":172,"column":29,"nodeType":"1318","messageId":"1319","endLine":172,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1338","line":176,"column":8,"nodeType":"1339","endLine":176,"endColumn":16,"suggestions":"1385"},{"ruleId":"1341","severity":1,"message":"1342","line":182,"column":17,"nodeType":"1343","endLine":182,"endColumn":58},{"ruleId":"1337","severity":1,"message":"1386","line":29,"column":8,"nodeType":"1339","endLine":29,"endColumn":20,"suggestions":"1387"},{"ruleId":"1316","severity":1,"message":"1370","line":9,"column":22,"nodeType":"1318","messageId":"1319","endLine":9,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1388","line":70,"column":11,"nodeType":"1318","messageId":"1319","endLine":70,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1329","line":235,"column":29,"nodeType":"1318","messageId":"1319","endLine":235,"endColumn":37},{"ruleId":"1316","severity":1,"message":"1389","line":236,"column":18,"nodeType":"1318","messageId":"1319","endLine":236,"endColumn":28},{"ruleId":"1316","severity":1,"message":"1390","line":236,"column":41,"nodeType":"1318","messageId":"1319","endLine":236,"endColumn":54},{"ruleId":"1316","severity":1,"message":"1391","line":246,"column":9,"nodeType":"1318","messageId":"1319","endLine":246,"endColumn":21},{"ruleId":"1337","severity":1,"message":"1338","line":256,"column":8,"nodeType":"1339","endLine":256,"endColumn":16,"suggestions":"1392"},{"ruleId":"1341","severity":1,"message":"1342","line":263,"column":17,"nodeType":"1343","endLine":263,"endColumn":58},{"ruleId":"1316","severity":1,"message":"1393","line":4,"column":29,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":40},{"ruleId":"1337","severity":1,"message":"1394","line":49,"column":8,"nodeType":"1339","endLine":49,"endColumn":20,"suggestions":"1395"},{"ruleId":"1316","severity":1,"message":"1396","line":3,"column":9,"nodeType":"1318","messageId":"1319","endLine":3,"endColumn":15},{"ruleId":"1316","severity":1,"message":"1370","line":10,"column":22,"nodeType":"1318","messageId":"1319","endLine":10,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1388","line":76,"column":9,"nodeType":"1318","messageId":"1319","endLine":76,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1329","line":141,"column":29,"nodeType":"1318","messageId":"1319","endLine":141,"endColumn":37},{"ruleId":"1341","severity":1,"message":"1342","line":151,"column":17,"nodeType":"1343","endLine":151,"endColumn":58},{"ruleId":"1316","severity":1,"message":"1396","line":5,"column":10,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1397","line":13,"column":10,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":24},{"ruleId":"1316","severity":1,"message":"1370","line":17,"column":22,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1388","line":79,"column":9,"nodeType":"1318","messageId":"1319","endLine":79,"endColumn":16},{"ruleId":"1398","severity":1,"message":"1399","line":289,"column":82,"nodeType":"1400","messageId":"1365","endLine":289,"endColumn":84},{"ruleId":"1398","severity":1,"message":"1399","line":319,"column":56,"nodeType":"1400","messageId":"1365","endLine":319,"endColumn":58},{"ruleId":"1398","severity":1,"message":"1399","line":319,"column":129,"nodeType":"1400","messageId":"1365","endLine":319,"endColumn":131},{"ruleId":"1316","severity":1,"message":"1401","line":387,"column":63,"nodeType":"1318","messageId":"1319","endLine":387,"endColumn":73},{"ruleId":"1316","severity":1,"message":"1402","line":389,"column":36,"nodeType":"1318","messageId":"1319","endLine":389,"endColumn":50},{"ruleId":"1316","severity":1,"message":"1403","line":389,"column":62,"nodeType":"1318","messageId":"1319","endLine":389,"endColumn":72},{"ruleId":"1337","severity":1,"message":"1338","line":415,"column":6,"nodeType":"1339","endLine":415,"endColumn":14,"suggestions":"1404"},{"ruleId":"1337","severity":1,"message":"1405","line":423,"column":6,"nodeType":"1339","endLine":423,"endColumn":8,"suggestions":"1406"},{"ruleId":"1337","severity":1,"message":"1407","line":435,"column":6,"nodeType":"1339","endLine":435,"endColumn":29,"suggestions":"1408"},{"ruleId":"1341","severity":1,"message":"1342","line":445,"column":11,"nodeType":"1343","endLine":445,"endColumn":52},{"ruleId":"1316","severity":1,"message":"1396","line":5,"column":10,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1397","line":13,"column":26,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":40},{"ruleId":"1316","severity":1,"message":"1370","line":17,"column":22,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1388","line":77,"column":9,"nodeType":"1318","messageId":"1319","endLine":77,"endColumn":16},{"ruleId":"1409","severity":1,"message":"1410","line":153,"column":13,"nodeType":"1411","messageId":"1412","endLine":170,"endColumn":14},{"ruleId":"1409","severity":1,"message":"1410","line":192,"column":15,"nodeType":"1411","messageId":"1412","endLine":209,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1413","line":336,"column":13,"nodeType":"1318","messageId":"1319","endLine":336,"endColumn":22},{"ruleId":"1409","severity":1,"message":"1410","line":344,"column":13,"nodeType":"1411","messageId":"1412","endLine":359,"endColumn":14},{"ruleId":"1409","severity":1,"message":"1410","line":377,"column":15,"nodeType":"1411","messageId":"1412","endLine":392,"endColumn":16},{"ruleId":"1341","severity":1,"message":"1342","line":439,"column":11,"nodeType":"1343","endLine":439,"endColumn":28},{"ruleId":"1316","severity":1,"message":"1329","line":455,"column":29,"nodeType":"1318","messageId":"1319","endLine":455,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1338","line":477,"column":6,"nodeType":"1339","endLine":477,"endColumn":14,"suggestions":"1414"},{"ruleId":"1337","severity":1,"message":"1415","line":484,"column":6,"nodeType":"1339","endLine":484,"endColumn":12,"suggestions":"1416"},{"ruleId":"1341","severity":1,"message":"1342","line":495,"column":11,"nodeType":"1343","endLine":495,"endColumn":52},{"ruleId":"1316","severity":1,"message":"1417","line":21,"column":10,"nodeType":"1318","messageId":"1319","endLine":21,"endColumn":15},{"ruleId":"1316","severity":1,"message":"1388","line":78,"column":9,"nodeType":"1318","messageId":"1319","endLine":78,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1329","line":395,"column":29,"nodeType":"1318","messageId":"1319","endLine":395,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1338","line":405,"column":6,"nodeType":"1339","endLine":405,"endColumn":14,"suggestions":"1418"},{"ruleId":"1341","severity":1,"message":"1342","line":417,"column":11,"nodeType":"1343","endLine":417,"endColumn":52},{"ruleId":"1316","severity":1,"message":"1419","line":11,"column":26,"nodeType":"1318","messageId":"1319","endLine":11,"endColumn":34},{"ruleId":"1316","severity":1,"message":"1420","line":11,"column":36,"nodeType":"1318","messageId":"1319","endLine":11,"endColumn":61},{"ruleId":"1316","severity":1,"message":"1370","line":15,"column":22,"nodeType":"1318","messageId":"1319","endLine":15,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1421","line":21,"column":10,"nodeType":"1318","messageId":"1319","endLine":21,"endColumn":26},{"ruleId":"1316","severity":1,"message":"1422","line":21,"column":28,"nodeType":"1318","messageId":"1319","endLine":21,"endColumn":36},{"ruleId":"1316","severity":1,"message":"1423","line":21,"column":46,"nodeType":"1318","messageId":"1319","endLine":21,"endColumn":54},{"ruleId":"1316","severity":1,"message":"1388","line":132,"column":9,"nodeType":"1318","messageId":"1319","endLine":132,"endColumn":16},{"ruleId":"1333","severity":1,"message":"1424","line":262,"column":57,"nodeType":"1335","messageId":"1425","endLine":262,"endColumn":59},{"ruleId":"1341","severity":1,"message":"1342","line":478,"column":15,"nodeType":"1343","endLine":478,"endColumn":66},{"ruleId":"1341","severity":1,"message":"1342","line":492,"column":15,"nodeType":"1343","endLine":492,"endColumn":64},{"ruleId":"1341","severity":1,"message":"1342","line":544,"column":15,"nodeType":"1343","endLine":544,"endColumn":66},{"ruleId":"1341","severity":1,"message":"1342","line":558,"column":15,"nodeType":"1343","endLine":558,"endColumn":64},{"ruleId":"1316","severity":1,"message":"1329","line":582,"column":29,"nodeType":"1318","messageId":"1319","endLine":582,"endColumn":37},{"ruleId":"1316","severity":1,"message":"1426","line":584,"column":18,"nodeType":"1318","messageId":"1319","endLine":584,"endColumn":30},{"ruleId":"1316","severity":1,"message":"1427","line":584,"column":43,"nodeType":"1318","messageId":"1319","endLine":584,"endColumn":58},{"ruleId":"1337","severity":1,"message":"1338","line":621,"column":6,"nodeType":"1339","endLine":621,"endColumn":14,"suggestions":"1428"},{"ruleId":"1337","severity":1,"message":"1415","line":629,"column":6,"nodeType":"1339","endLine":629,"endColumn":12,"suggestions":"1429"},{"ruleId":"1341","severity":1,"message":"1342","line":644,"column":11,"nodeType":"1343","endLine":644,"endColumn":52},{"ruleId":"1316","severity":1,"message":"1420","line":15,"column":10,"nodeType":"1318","messageId":"1319","endLine":15,"endColumn":35},{"ruleId":"1316","severity":1,"message":"1370","line":19,"column":22,"nodeType":"1318","messageId":"1319","endLine":19,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1419","line":23,"column":26,"nodeType":"1318","messageId":"1319","endLine":23,"endColumn":34},{"ruleId":"1316","severity":1,"message":"1430","line":29,"column":8,"nodeType":"1318","messageId":"1319","endLine":29,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1421","line":31,"column":10,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":26},{"ruleId":"1316","severity":1,"message":"1422","line":31,"column":28,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":36},{"ruleId":"1316","severity":1,"message":"1423","line":31,"column":46,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":54},{"ruleId":"1316","severity":1,"message":"1388","line":112,"column":9,"nodeType":"1318","messageId":"1319","endLine":112,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1329","line":546,"column":29,"nodeType":"1318","messageId":"1319","endLine":546,"endColumn":37},{"ruleId":"1316","severity":1,"message":"1426","line":550,"column":18,"nodeType":"1318","messageId":"1319","endLine":550,"endColumn":30},{"ruleId":"1316","severity":1,"message":"1427","line":550,"column":43,"nodeType":"1318","messageId":"1319","endLine":550,"endColumn":58},{"ruleId":"1337","severity":1,"message":"1338","line":588,"column":6,"nodeType":"1339","endLine":588,"endColumn":14,"suggestions":"1431"},{"ruleId":"1337","severity":1,"message":"1415","line":595,"column":6,"nodeType":"1339","endLine":595,"endColumn":12,"suggestions":"1432"},{"ruleId":"1341","severity":1,"message":"1342","line":608,"column":11,"nodeType":"1343","endLine":608,"endColumn":52},{"ruleId":"1316","severity":1,"message":"1419","line":4,"column":10,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1433","line":72,"column":13,"nodeType":"1318","messageId":"1319","endLine":72,"endColumn":28},{"ruleId":"1341","severity":1,"message":"1342","line":39,"column":17,"nodeType":"1343","endLine":39,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":50,"column":17,"nodeType":"1343","endLine":50,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":61,"column":17,"nodeType":"1343","endLine":61,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":72,"column":17,"nodeType":"1343","endLine":72,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":83,"column":17,"nodeType":"1343","endLine":83,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":39,"column":17,"nodeType":"1343","endLine":39,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":50,"column":17,"nodeType":"1343","endLine":50,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":61,"column":17,"nodeType":"1343","endLine":61,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":72,"column":17,"nodeType":"1343","endLine":72,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":83,"column":17,"nodeType":"1343","endLine":83,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":259,"column":38,"nodeType":"1343","endLine":259,"endColumn":78},{"ruleId":"1341","severity":1,"message":"1342","line":260,"column":38,"nodeType":"1343","endLine":260,"endColumn":72},{"ruleId":"1341","severity":1,"message":"1342","line":264,"column":38,"nodeType":"1343","endLine":264,"endColumn":160},{"ruleId":"1341","severity":1,"message":"1342","line":265,"column":38,"nodeType":"1343","endLine":265,"endColumn":80},{"ruleId":"1316","severity":1,"message":"1396","line":3,"column":8,"nodeType":"1318","messageId":"1319","endLine":3,"endColumn":14},{"ruleId":"1316","severity":1,"message":"1434","line":8,"column":8,"nodeType":"1318","messageId":"1319","endLine":8,"endColumn":17},{"ruleId":"1341","severity":1,"message":"1342","line":65,"column":17,"nodeType":"1343","endLine":65,"endColumn":83},{"ruleId":"1341","severity":1,"message":"1342","line":73,"column":21,"nodeType":"1343","endLine":76,"endColumn":23},{"ruleId":"1341","severity":1,"message":"1342","line":39,"column":17,"nodeType":"1343","endLine":39,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":50,"column":17,"nodeType":"1343","endLine":50,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":61,"column":17,"nodeType":"1343","endLine":61,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":72,"column":17,"nodeType":"1343","endLine":72,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":83,"column":17,"nodeType":"1343","endLine":83,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":39,"column":17,"nodeType":"1343","endLine":39,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":50,"column":17,"nodeType":"1343","endLine":50,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":61,"column":17,"nodeType":"1343","endLine":61,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":72,"column":17,"nodeType":"1343","endLine":72,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":83,"column":17,"nodeType":"1343","endLine":83,"endColumn":55},{"ruleId":"1312","replacedBy":"1435"},{"ruleId":"1314","replacedBy":"1436"},{"ruleId":"1341","severity":1,"message":"1342","line":39,"column":17,"nodeType":"1343","endLine":39,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":50,"column":17,"nodeType":"1343","endLine":50,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":61,"column":17,"nodeType":"1343","endLine":61,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":72,"column":17,"nodeType":"1343","endLine":72,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":83,"column":17,"nodeType":"1343","endLine":83,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":39,"column":17,"nodeType":"1343","endLine":39,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":50,"column":17,"nodeType":"1343","endLine":50,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":61,"column":17,"nodeType":"1343","endLine":61,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":72,"column":17,"nodeType":"1343","endLine":72,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":83,"column":17,"nodeType":"1343","endLine":83,"endColumn":55},{"ruleId":"1316","severity":1,"message":"1326","line":14,"column":11,"nodeType":"1318","messageId":"1319","endLine":14,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1437","line":17,"column":10,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":21},{"ruleId":"1316","severity":1,"message":"1438","line":19,"column":10,"nodeType":"1318","messageId":"1319","endLine":19,"endColumn":24},{"ruleId":"1316","severity":1,"message":"1439","line":19,"column":26,"nodeType":"1318","messageId":"1319","endLine":19,"endColumn":38},{"ruleId":"1316","severity":1,"message":"1440","line":33,"column":12,"nodeType":"1318","messageId":"1319","endLine":33,"endColumn":21},{"ruleId":"1316","severity":1,"message":"1441","line":33,"column":23,"nodeType":"1318","messageId":"1319","endLine":33,"endColumn":35},{"ruleId":"1316","severity":1,"message":"1442","line":39,"column":12,"nodeType":"1318","messageId":"1319","endLine":39,"endColumn":22},{"ruleId":"1316","severity":1,"message":"1443","line":39,"column":24,"nodeType":"1318","messageId":"1319","endLine":39,"endColumn":37},{"ruleId":"1316","severity":1,"message":"1444","line":4,"column":5,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":14},{"ruleId":"1316","severity":1,"message":"1445","line":6,"column":5,"nodeType":"1318","messageId":"1319","endLine":6,"endColumn":15},{"ruleId":"1316","severity":1,"message":"1446","line":6,"column":17,"nodeType":"1318","messageId":"1319","endLine":6,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1447","line":12,"column":8,"nodeType":"1318","messageId":"1319","endLine":12,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1437","line":17,"column":10,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":21},{"ruleId":"1316","severity":1,"message":"1438","line":19,"column":10,"nodeType":"1318","messageId":"1319","endLine":19,"endColumn":24},{"ruleId":"1316","severity":1,"message":"1439","line":19,"column":26,"nodeType":"1318","messageId":"1319","endLine":19,"endColumn":38},{"ruleId":"1316","severity":1,"message":"1444","line":4,"column":5,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":14},{"ruleId":"1316","severity":1,"message":"1445","line":6,"column":5,"nodeType":"1318","messageId":"1319","endLine":6,"endColumn":15},{"ruleId":"1316","severity":1,"message":"1446","line":6,"column":17,"nodeType":"1318","messageId":"1319","endLine":6,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1447","line":12,"column":8,"nodeType":"1318","messageId":"1319","endLine":12,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1444","line":4,"column":5,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":14},{"ruleId":"1316","severity":1,"message":"1445","line":6,"column":5,"nodeType":"1318","messageId":"1319","endLine":6,"endColumn":15},{"ruleId":"1316","severity":1,"message":"1446","line":6,"column":17,"nodeType":"1318","messageId":"1319","endLine":6,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1447","line":12,"column":8,"nodeType":"1318","messageId":"1319","endLine":12,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1448","line":1,"column":29,"nodeType":"1318","messageId":"1319","endLine":1,"endColumn":38},{"ruleId":"1341","severity":1,"message":"1342","line":34,"column":21,"nodeType":"1343","endLine":34,"endColumn":62},{"ruleId":"1316","severity":1,"message":"1397","line":13,"column":26,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":40},{"ruleId":"1316","severity":1,"message":"1420","line":13,"column":42,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":67},{"ruleId":"1316","severity":1,"message":"1370","line":17,"column":22,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1388","line":76,"column":9,"nodeType":"1318","messageId":"1319","endLine":76,"endColumn":16},{"ruleId":"1341","severity":1,"message":"1342","line":350,"column":11,"nodeType":"1343","endLine":350,"endColumn":28},{"ruleId":"1316","severity":1,"message":"1329","line":386,"column":29,"nodeType":"1318","messageId":"1319","endLine":386,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1338","line":406,"column":6,"nodeType":"1339","endLine":406,"endColumn":14,"suggestions":"1449"},{"ruleId":"1337","severity":1,"message":"1415","line":412,"column":6,"nodeType":"1339","endLine":412,"endColumn":12,"suggestions":"1450"},{"ruleId":"1341","severity":1,"message":"1342","line":424,"column":11,"nodeType":"1343","endLine":424,"endColumn":52},{"ruleId":"1316","severity":1,"message":"1397","line":13,"column":26,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":40},{"ruleId":"1316","severity":1,"message":"1420","line":13,"column":42,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":67},{"ruleId":"1316","severity":1,"message":"1370","line":17,"column":22,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1388","line":81,"column":9,"nodeType":"1318","messageId":"1319","endLine":81,"endColumn":16},{"ruleId":"1333","severity":1,"message":"1424","line":240,"column":57,"nodeType":"1335","messageId":"1425","endLine":240,"endColumn":59},{"ruleId":"1341","severity":1,"message":"1342","line":380,"column":11,"nodeType":"1343","endLine":380,"endColumn":28},{"ruleId":"1316","severity":1,"message":"1329","line":393,"column":29,"nodeType":"1318","messageId":"1319","endLine":393,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1338","line":413,"column":6,"nodeType":"1339","endLine":413,"endColumn":14,"suggestions":"1451"},{"ruleId":"1337","severity":1,"message":"1415","line":420,"column":6,"nodeType":"1339","endLine":420,"endColumn":12,"suggestions":"1452"},{"ruleId":"1341","severity":1,"message":"1342","line":432,"column":11,"nodeType":"1343","endLine":432,"endColumn":52},{"ruleId":"1316","severity":1,"message":"1397","line":13,"column":26,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":40},{"ruleId":"1316","severity":1,"message":"1370","line":17,"column":22,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1388","line":89,"column":11,"nodeType":"1318","messageId":"1319","endLine":89,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1329","line":376,"column":29,"nodeType":"1318","messageId":"1319","endLine":376,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1338","line":398,"column":6,"nodeType":"1339","endLine":398,"endColumn":14,"suggestions":"1453"},{"ruleId":"1337","severity":1,"message":"1415","line":406,"column":6,"nodeType":"1339","endLine":406,"endColumn":12,"suggestions":"1454"},{"ruleId":"1341","severity":1,"message":"1342","line":419,"column":11,"nodeType":"1343","endLine":419,"endColumn":52},{"ruleId":"1337","severity":1,"message":"1455","line":60,"column":8,"nodeType":"1339","endLine":60,"endColumn":10,"suggestions":"1456"},{"ruleId":"1316","severity":1,"message":"1457","line":1,"column":17,"nodeType":"1318","messageId":"1319","endLine":1,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1458","line":5,"column":11,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":20},{"ruleId":"1316","severity":1,"message":"1459","line":5,"column":22,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1460","line":40,"column":38,"nodeType":"1318","messageId":"1319","endLine":40,"endColumn":52},{"ruleId":"1316","severity":1,"message":"1461","line":41,"column":18,"nodeType":"1318","messageId":"1319","endLine":41,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1462","line":41,"column":44,"nodeType":"1318","messageId":"1319","endLine":41,"endColumn":64},{"ruleId":"1316","severity":1,"message":"1463","line":44,"column":9,"nodeType":"1318","messageId":"1319","endLine":44,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1338","line":76,"column":4,"nodeType":"1339","endLine":76,"endColumn":6,"suggestions":"1464"},{"ruleId":"1341","severity":1,"message":"1342","line":82,"column":13,"nodeType":"1343","endLine":82,"endColumn":54},{"ruleId":"1316","severity":1,"message":"1457","line":1,"column":17,"nodeType":"1318","messageId":"1319","endLine":1,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1458","line":5,"column":11,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":20},{"ruleId":"1316","severity":1,"message":"1459","line":5,"column":22,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1460","line":40,"column":38,"nodeType":"1318","messageId":"1319","endLine":40,"endColumn":52},{"ruleId":"1316","severity":1,"message":"1461","line":41,"column":18,"nodeType":"1318","messageId":"1319","endLine":41,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1462","line":41,"column":44,"nodeType":"1318","messageId":"1319","endLine":41,"endColumn":64},{"ruleId":"1316","severity":1,"message":"1463","line":44,"column":9,"nodeType":"1318","messageId":"1319","endLine":44,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1338","line":76,"column":4,"nodeType":"1339","endLine":76,"endColumn":6,"suggestions":"1465"},{"ruleId":"1341","severity":1,"message":"1342","line":82,"column":13,"nodeType":"1343","endLine":82,"endColumn":54},{"ruleId":"1316","severity":1,"message":"1457","line":1,"column":17,"nodeType":"1318","messageId":"1319","endLine":1,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1458","line":5,"column":11,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":20},{"ruleId":"1316","severity":1,"message":"1459","line":5,"column":22,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1460","line":40,"column":38,"nodeType":"1318","messageId":"1319","endLine":40,"endColumn":52},{"ruleId":"1316","severity":1,"message":"1461","line":41,"column":18,"nodeType":"1318","messageId":"1319","endLine":41,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1462","line":41,"column":44,"nodeType":"1318","messageId":"1319","endLine":41,"endColumn":64},{"ruleId":"1316","severity":1,"message":"1463","line":44,"column":9,"nodeType":"1318","messageId":"1319","endLine":44,"endColumn":20},{"ruleId":"1337","severity":1,"message":"1338","line":76,"column":4,"nodeType":"1339","endLine":76,"endColumn":6,"suggestions":"1466"},{"ruleId":"1341","severity":1,"message":"1342","line":82,"column":13,"nodeType":"1343","endLine":82,"endColumn":54},{"ruleId":"1316","severity":1,"message":"1397","line":13,"column":26,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":40},{"ruleId":"1316","severity":1,"message":"1370","line":17,"column":22,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1388","line":88,"column":9,"nodeType":"1318","messageId":"1319","endLine":88,"endColumn":16},{"ruleId":"1333","severity":1,"message":"1424","line":241,"column":57,"nodeType":"1335","messageId":"1425","endLine":241,"endColumn":59},{"ruleId":"1316","severity":1,"message":"1329","line":401,"column":29,"nodeType":"1318","messageId":"1319","endLine":401,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1338","line":423,"column":6,"nodeType":"1339","endLine":423,"endColumn":14,"suggestions":"1467"},{"ruleId":"1337","severity":1,"message":"1415","line":431,"column":6,"nodeType":"1339","endLine":431,"endColumn":12,"suggestions":"1468"},{"ruleId":"1341","severity":1,"message":"1342","line":444,"column":11,"nodeType":"1343","endLine":444,"endColumn":52},{"ruleId":"1312","replacedBy":"1469"},{"ruleId":"1314","replacedBy":"1470"},{"ruleId":"1312","replacedBy":"1471"},{"ruleId":"1314","replacedBy":"1472"},{"ruleId":"1341","severity":1,"message":"1342","line":25,"column":21,"nodeType":"1343","endLine":25,"endColumn":61},{"ruleId":"1316","severity":1,"message":"1437","line":10,"column":10,"nodeType":"1318","messageId":"1319","endLine":10,"endColumn":21},{"ruleId":"1316","severity":1,"message":"1473","line":25,"column":12,"nodeType":"1318","messageId":"1319","endLine":25,"endColumn":22},{"ruleId":"1316","severity":1,"message":"1474","line":25,"column":24,"nodeType":"1318","messageId":"1319","endLine":25,"endColumn":37},{"ruleId":"1341","severity":1,"message":"1342","line":115,"column":25,"nodeType":"1343","endLine":115,"endColumn":65},{"ruleId":"1341","severity":1,"message":"1342","line":276,"column":45,"nodeType":"1343","endLine":276,"endColumn":85},{"ruleId":"1316","severity":1,"message":"1475","line":1,"column":17,"nodeType":"1318","messageId":"1319","endLine":1,"endColumn":23},{"ruleId":"1341","severity":1,"message":"1342","line":22,"column":15,"nodeType":"1343","endLine":22,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":42,"column":15,"nodeType":"1343","endLine":42,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":65,"column":15,"nodeType":"1343","endLine":65,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":85,"column":15,"nodeType":"1343","endLine":85,"endColumn":55},{"ruleId":"1316","severity":1,"message":"1476","line":2,"column":17,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":28},{"ruleId":"1316","severity":1,"message":"1369","line":2,"column":30,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":38},{"ruleId":"1316","severity":1,"message":"1477","line":44,"column":7,"nodeType":"1318","messageId":"1319","endLine":44,"endColumn":11},{"ruleId":"1316","severity":1,"message":"1327","line":45,"column":18,"nodeType":"1318","messageId":"1319","endLine":45,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1328","line":46,"column":18,"nodeType":"1318","messageId":"1319","endLine":46,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1329","line":46,"column":29,"nodeType":"1318","messageId":"1319","endLine":46,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1478","line":51,"column":6,"nodeType":"1339","endLine":51,"endColumn":14,"suggestions":"1479"},{"ruleId":"1316","severity":1,"message":"1480","line":60,"column":7,"nodeType":"1318","messageId":"1319","endLine":60,"endColumn":15},{"ruleId":"1316","severity":1,"message":"1327","line":64,"column":18,"nodeType":"1318","messageId":"1319","endLine":64,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1328","line":65,"column":18,"nodeType":"1318","messageId":"1319","endLine":65,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1329","line":65,"column":29,"nodeType":"1318","messageId":"1319","endLine":65,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1478","line":70,"column":6,"nodeType":"1339","endLine":70,"endColumn":14,"suggestions":"1481"},{"ruleId":"1316","severity":1,"message":"1327","line":119,"column":18,"nodeType":"1318","messageId":"1319","endLine":119,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1328","line":120,"column":18,"nodeType":"1318","messageId":"1319","endLine":120,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1329","line":120,"column":29,"nodeType":"1318","messageId":"1319","endLine":120,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1478","line":125,"column":6,"nodeType":"1339","endLine":125,"endColumn":14,"suggestions":"1482"},{"ruleId":"1316","severity":1,"message":"1476","line":2,"column":17,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":28},{"ruleId":"1316","severity":1,"message":"1369","line":2,"column":30,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":38},{"ruleId":"1316","severity":1,"message":"1483","line":8,"column":7,"nodeType":"1318","messageId":"1319","endLine":8,"endColumn":11},{"ruleId":"1316","severity":1,"message":"1327","line":44,"column":18,"nodeType":"1318","messageId":"1319","endLine":44,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1328","line":45,"column":18,"nodeType":"1318","messageId":"1319","endLine":45,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1329","line":45,"column":29,"nodeType":"1318","messageId":"1319","endLine":45,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1478","line":50,"column":6,"nodeType":"1339","endLine":50,"endColumn":14,"suggestions":"1484"},{"ruleId":"1316","severity":1,"message":"1485","line":4,"column":8,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":23},{"ruleId":"1316","severity":1,"message":"1486","line":10,"column":8,"nodeType":"1318","messageId":"1319","endLine":10,"endColumn":31},{"ruleId":"1341","severity":1,"message":"1342","line":27,"column":15,"nodeType":"1343","endLine":27,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":51,"column":15,"nodeType":"1343","endLine":51,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":71,"column":15,"nodeType":"1343","endLine":71,"endColumn":55},{"ruleId":"1316","severity":1,"message":"1328","line":20,"column":18,"nodeType":"1318","messageId":"1319","endLine":20,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1329","line":20,"column":29,"nodeType":"1318","messageId":"1319","endLine":20,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1338","line":24,"column":6,"nodeType":"1339","endLine":24,"endColumn":14,"suggestions":"1487"},{"ruleId":"1341","severity":1,"message":"1342","line":37,"column":15,"nodeType":"1343","endLine":37,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":61,"column":15,"nodeType":"1343","endLine":61,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":81,"column":15,"nodeType":"1343","endLine":81,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":123,"column":15,"nodeType":"1343","endLine":123,"endColumn":55},{"ruleId":"1316","severity":1,"message":"1488","line":4,"column":10,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1327","line":46,"column":20,"nodeType":"1318","messageId":"1319","endLine":46,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1328","line":48,"column":20,"nodeType":"1318","messageId":"1319","endLine":48,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1329","line":48,"column":31,"nodeType":"1318","messageId":"1319","endLine":48,"endColumn":39},{"ruleId":"1337","severity":1,"message":"1338","line":56,"column":8,"nodeType":"1339","endLine":56,"endColumn":16,"suggestions":"1489"},{"ruleId":"1341","severity":1,"message":"1342","line":64,"column":17,"nodeType":"1343","endLine":64,"endColumn":54},{"ruleId":"1341","severity":1,"message":"1342","line":76,"column":17,"nodeType":"1343","endLine":76,"endColumn":67},{"ruleId":"1341","severity":1,"message":"1342","line":87,"column":17,"nodeType":"1343","endLine":87,"endColumn":55},{"ruleId":"1341","severity":1,"message":"1342","line":98,"column":17,"nodeType":"1343","endLine":98,"endColumn":67},{"ruleId":"1341","severity":1,"message":"1342","line":109,"column":17,"nodeType":"1343","endLine":109,"endColumn":54},{"ruleId":"1316","severity":1,"message":"1488","line":4,"column":10,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1327","line":44,"column":20,"nodeType":"1318","messageId":"1319","endLine":44,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1328","line":46,"column":20,"nodeType":"1318","messageId":"1319","endLine":46,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1329","line":46,"column":31,"nodeType":"1318","messageId":"1319","endLine":46,"endColumn":39},{"ruleId":"1337","severity":1,"message":"1338","line":54,"column":8,"nodeType":"1339","endLine":54,"endColumn":16,"suggestions":"1490"},{"ruleId":"1341","severity":1,"message":"1342","line":62,"column":17,"nodeType":"1343","endLine":62,"endColumn":54},{"ruleId":"1341","severity":1,"message":"1342","line":74,"column":17,"nodeType":"1343","endLine":74,"endColumn":54},{"ruleId":"1341","severity":1,"message":"1342","line":85,"column":17,"nodeType":"1343","endLine":85,"endColumn":54},{"ruleId":"1341","severity":1,"message":"1342","line":96,"column":17,"nodeType":"1343","endLine":96,"endColumn":54},{"ruleId":"1341","severity":1,"message":"1342","line":107,"column":17,"nodeType":"1343","endLine":107,"endColumn":54},{"ruleId":"1337","severity":1,"message":"1491","line":157,"column":8,"nodeType":"1339","endLine":157,"endColumn":72,"suggestions":"1492"},{"ruleId":"1337","severity":1,"message":"1493","line":166,"column":8,"nodeType":"1339","endLine":166,"endColumn":47,"suggestions":"1494"},{"ruleId":"1337","severity":1,"message":"1495","line":176,"column":18,"nodeType":"1496","endLine":176,"endColumn":22},{"ruleId":"1316","severity":1,"message":"1476","line":2,"column":17,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":28},{"ruleId":"1316","severity":1,"message":"1369","line":2,"column":30,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":38},{"ruleId":"1316","severity":1,"message":"1476","line":2,"column":17,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":28},{"ruleId":"1316","severity":1,"message":"1369","line":2,"column":30,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":38},{"ruleId":"1316","severity":1,"message":"1497","line":1,"column":17,"nodeType":"1318","messageId":"1319","endLine":1,"endColumn":30},{"ruleId":"1316","severity":1,"message":"1437","line":3,"column":10,"nodeType":"1318","messageId":"1319","endLine":3,"endColumn":21},{"ruleId":"1316","severity":1,"message":"1444","line":5,"column":41,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":50},{"ruleId":"1316","severity":1,"message":"1446","line":5,"column":52,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":66},{"ruleId":"1316","severity":1,"message":"1445","line":5,"column":68,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":78},{"ruleId":"1316","severity":1,"message":"1447","line":17,"column":8,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1498","line":18,"column":10,"nodeType":"1318","messageId":"1319","endLine":18,"endColumn":15},{"ruleId":"1316","severity":1,"message":"1499","line":25,"column":12,"nodeType":"1318","messageId":"1319","endLine":25,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1500","line":25,"column":18,"nodeType":"1318","messageId":"1319","endLine":25,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1440","line":27,"column":12,"nodeType":"1318","messageId":"1319","endLine":27,"endColumn":21},{"ruleId":"1316","severity":1,"message":"1441","line":27,"column":23,"nodeType":"1318","messageId":"1319","endLine":27,"endColumn":35},{"ruleId":"1316","severity":1,"message":"1501","line":31,"column":12,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":24},{"ruleId":"1316","severity":1,"message":"1502","line":31,"column":26,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":41},{"ruleId":"1316","severity":1,"message":"1503","line":33,"column":12,"nodeType":"1318","messageId":"1319","endLine":33,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1504","line":33,"column":19,"nodeType":"1318","messageId":"1319","endLine":33,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1505","line":42,"column":11,"nodeType":"1318","messageId":"1319","endLine":42,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1506","line":111,"column":14,"nodeType":"1318","messageId":"1319","endLine":111,"endColumn":22},{"ruleId":"1316","severity":1,"message":"1444","line":5,"column":41,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":50},{"ruleId":"1316","severity":1,"message":"1446","line":5,"column":52,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":66},{"ruleId":"1316","severity":1,"message":"1445","line":5,"column":68,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":78},{"ruleId":"1316","severity":1,"message":"1447","line":17,"column":8,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1501","line":31,"column":12,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":24},{"ruleId":"1316","severity":1,"message":"1502","line":31,"column":26,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":41},{"ruleId":"1316","severity":1,"message":"1503","line":33,"column":12,"nodeType":"1318","messageId":"1319","endLine":33,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1504","line":33,"column":19,"nodeType":"1318","messageId":"1319","endLine":33,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1505","line":42,"column":11,"nodeType":"1318","messageId":"1319","endLine":42,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1444","line":5,"column":41,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":50},{"ruleId":"1316","severity":1,"message":"1446","line":5,"column":52,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":66},{"ruleId":"1316","severity":1,"message":"1445","line":5,"column":68,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":78},{"ruleId":"1316","severity":1,"message":"1447","line":17,"column":8,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1499","line":25,"column":12,"nodeType":"1318","messageId":"1319","endLine":25,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1500","line":25,"column":18,"nodeType":"1318","messageId":"1319","endLine":25,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1440","line":27,"column":12,"nodeType":"1318","messageId":"1319","endLine":27,"endColumn":21},{"ruleId":"1316","severity":1,"message":"1441","line":27,"column":23,"nodeType":"1318","messageId":"1319","endLine":27,"endColumn":35},{"ruleId":"1316","severity":1,"message":"1501","line":31,"column":12,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":24},{"ruleId":"1316","severity":1,"message":"1502","line":31,"column":26,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":41},{"ruleId":"1316","severity":1,"message":"1503","line":33,"column":12,"nodeType":"1318","messageId":"1319","endLine":33,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1504","line":33,"column":19,"nodeType":"1318","messageId":"1319","endLine":33,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1505","line":42,"column":11,"nodeType":"1318","messageId":"1319","endLine":42,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1476","line":2,"column":17,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":28},{"ruleId":"1316","severity":1,"message":"1369","line":2,"column":30,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":38},{"ruleId":"1316","severity":1,"message":"1476","line":2,"column":17,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":28},{"ruleId":"1316","severity":1,"message":"1369","line":2,"column":30,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":38},{"ruleId":"1316","severity":1,"message":"1497","line":1,"column":17,"nodeType":"1318","messageId":"1319","endLine":1,"endColumn":30},{"ruleId":"1316","severity":1,"message":"1444","line":5,"column":41,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":50},{"ruleId":"1316","severity":1,"message":"1446","line":5,"column":52,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":66},{"ruleId":"1316","severity":1,"message":"1445","line":5,"column":68,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":78},{"ruleId":"1316","severity":1,"message":"1447","line":17,"column":8,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1498","line":18,"column":10,"nodeType":"1318","messageId":"1319","endLine":18,"endColumn":15},{"ruleId":"1316","severity":1,"message":"1499","line":25,"column":12,"nodeType":"1318","messageId":"1319","endLine":25,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1500","line":25,"column":18,"nodeType":"1318","messageId":"1319","endLine":25,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1440","line":27,"column":12,"nodeType":"1318","messageId":"1319","endLine":27,"endColumn":21},{"ruleId":"1316","severity":1,"message":"1441","line":27,"column":23,"nodeType":"1318","messageId":"1319","endLine":27,"endColumn":35},{"ruleId":"1316","severity":1,"message":"1501","line":31,"column":12,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":24},{"ruleId":"1316","severity":1,"message":"1502","line":31,"column":26,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":41},{"ruleId":"1316","severity":1,"message":"1503","line":33,"column":12,"nodeType":"1318","messageId":"1319","endLine":33,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1504","line":33,"column":19,"nodeType":"1318","messageId":"1319","endLine":33,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1505","line":42,"column":11,"nodeType":"1318","messageId":"1319","endLine":42,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1506","line":111,"column":14,"nodeType":"1318","messageId":"1319","endLine":111,"endColumn":22},{"ruleId":"1316","severity":1,"message":"1444","line":5,"column":41,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":50},{"ruleId":"1316","severity":1,"message":"1446","line":5,"column":52,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":66},{"ruleId":"1316","severity":1,"message":"1445","line":5,"column":68,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":78},{"ruleId":"1316","severity":1,"message":"1447","line":17,"column":8,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1499","line":25,"column":12,"nodeType":"1318","messageId":"1319","endLine":25,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1500","line":25,"column":18,"nodeType":"1318","messageId":"1319","endLine":25,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1440","line":27,"column":12,"nodeType":"1318","messageId":"1319","endLine":27,"endColumn":21},{"ruleId":"1316","severity":1,"message":"1441","line":27,"column":23,"nodeType":"1318","messageId":"1319","endLine":27,"endColumn":35},{"ruleId":"1316","severity":1,"message":"1501","line":31,"column":12,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":24},{"ruleId":"1316","severity":1,"message":"1502","line":31,"column":26,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":41},{"ruleId":"1316","severity":1,"message":"1503","line":33,"column":12,"nodeType":"1318","messageId":"1319","endLine":33,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1504","line":33,"column":19,"nodeType":"1318","messageId":"1319","endLine":33,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1505","line":42,"column":11,"nodeType":"1318","messageId":"1319","endLine":42,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1444","line":5,"column":41,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":50},{"ruleId":"1316","severity":1,"message":"1446","line":5,"column":52,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":66},{"ruleId":"1316","severity":1,"message":"1445","line":5,"column":68,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":78},{"ruleId":"1316","severity":1,"message":"1447","line":17,"column":8,"nodeType":"1318","messageId":"1319","endLine":17,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1440","line":27,"column":12,"nodeType":"1318","messageId":"1319","endLine":27,"endColumn":21},{"ruleId":"1316","severity":1,"message":"1441","line":27,"column":23,"nodeType":"1318","messageId":"1319","endLine":27,"endColumn":35},{"ruleId":"1316","severity":1,"message":"1501","line":31,"column":12,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":24},{"ruleId":"1316","severity":1,"message":"1502","line":31,"column":26,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":41},{"ruleId":"1316","severity":1,"message":"1503","line":33,"column":12,"nodeType":"1318","messageId":"1319","endLine":33,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1504","line":33,"column":19,"nodeType":"1318","messageId":"1319","endLine":33,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1505","line":42,"column":11,"nodeType":"1318","messageId":"1319","endLine":42,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1488","line":4,"column":10,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1327","line":44,"column":20,"nodeType":"1318","messageId":"1319","endLine":44,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1328","line":46,"column":20,"nodeType":"1318","messageId":"1319","endLine":46,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1329","line":46,"column":31,"nodeType":"1318","messageId":"1319","endLine":46,"endColumn":39},{"ruleId":"1337","severity":1,"message":"1338","line":54,"column":8,"nodeType":"1339","endLine":54,"endColumn":16,"suggestions":"1507"},{"ruleId":"1341","severity":1,"message":"1342","line":62,"column":21,"nodeType":"1343","endLine":62,"endColumn":77},{"ruleId":"1341","severity":1,"message":"1342","line":74,"column":21,"nodeType":"1343","endLine":74,"endColumn":72},{"ruleId":"1341","severity":1,"message":"1342","line":85,"column":21,"nodeType":"1343","endLine":85,"endColumn":77},{"ruleId":"1341","severity":1,"message":"1342","line":96,"column":21,"nodeType":"1343","endLine":96,"endColumn":72},{"ruleId":"1341","severity":1,"message":"1342","line":193,"column":13,"nodeType":"1343","endLine":193,"endColumn":30},{"ruleId":"1316","severity":1,"message":"1329","line":237,"column":29,"nodeType":"1318","messageId":"1319","endLine":237,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1338","line":245,"column":6,"nodeType":"1339","endLine":245,"endColumn":14,"suggestions":"1508"},{"ruleId":"1341","severity":1,"message":"1342","line":257,"column":11,"nodeType":"1343","endLine":257,"endColumn":51},{"ruleId":"1337","severity":1,"message":"1509","line":79,"column":8,"nodeType":"1339","endLine":79,"endColumn":16,"suggestions":"1510"},{"ruleId":"1341","severity":1,"message":"1342","line":16,"column":21,"nodeType":"1343","endLine":16,"endColumn":61},{"ruleId":"1341","severity":1,"message":"1342","line":85,"column":21,"nodeType":"1343","endLine":85,"endColumn":61},{"ruleId":"1316","severity":1,"message":"1383","line":7,"column":10,"nodeType":"1318","messageId":"1319","endLine":7,"endColumn":22},{"ruleId":"1316","severity":1,"message":"1511","line":8,"column":21,"nodeType":"1318","messageId":"1319","endLine":8,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1388","line":39,"column":9,"nodeType":"1318","messageId":"1319","endLine":39,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1327","line":177,"column":18,"nodeType":"1318","messageId":"1319","endLine":177,"endColumn":27},{"ruleId":"1316","severity":1,"message":"1329","line":178,"column":29,"nodeType":"1318","messageId":"1319","endLine":178,"endColumn":37},{"ruleId":"1316","severity":1,"message":"1512","line":178,"column":41,"nodeType":"1318","messageId":"1319","endLine":178,"endColumn":48},{"ruleId":"1337","severity":1,"message":"1513","line":186,"column":6,"nodeType":"1339","endLine":186,"endColumn":14,"suggestions":"1514"},{"ruleId":"1316","severity":1,"message":"1396","line":3,"column":10,"nodeType":"1318","messageId":"1319","endLine":3,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1475","line":2,"column":17,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":23},{"ruleId":"1316","severity":1,"message":"1515","line":2,"column":25,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1330","line":82,"column":20,"nodeType":"1318","messageId":"1319","endLine":82,"endColumn":33},{"ruleId":"1316","severity":1,"message":"1331","line":82,"column":46,"nodeType":"1318","messageId":"1319","endLine":82,"endColumn":68},{"ruleId":"1316","severity":1,"message":"1332","line":82,"column":80,"nodeType":"1318","messageId":"1319","endLine":82,"endColumn":101},{"ruleId":"1337","severity":1,"message":"1516","line":127,"column":8,"nodeType":"1339","endLine":127,"endColumn":10,"suggestions":"1517"},{"ruleId":"1337","severity":1,"message":"1518","line":143,"column":8,"nodeType":"1339","endLine":143,"endColumn":20,"suggestions":"1519"},{"ruleId":"1341","severity":1,"message":"1342","line":170,"column":21,"nodeType":"1343","endLine":170,"endColumn":61},{"ruleId":"1341","severity":1,"message":"1342","line":190,"column":25,"nodeType":"1343","endLine":190,"endColumn":65},{"ruleId":"1341","severity":1,"message":"1342","line":272,"column":29,"nodeType":"1343","endLine":272,"endColumn":69},{"ruleId":"1341","severity":1,"message":"1342","line":312,"column":33,"nodeType":"1343","endLine":312,"endColumn":73},{"ruleId":"1341","severity":1,"message":"1342","line":319,"column":37,"nodeType":"1343","endLine":319,"endColumn":185},{"ruleId":"1316","severity":1,"message":"1397","line":13,"column":10,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":24},{"ruleId":"1316","severity":1,"message":"1419","line":13,"column":26,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":34},{"ruleId":"1316","severity":1,"message":"1388","line":69,"column":9,"nodeType":"1318","messageId":"1319","endLine":69,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1329","line":349,"column":29,"nodeType":"1318","messageId":"1319","endLine":349,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1520","line":363,"column":6,"nodeType":"1339","endLine":363,"endColumn":14,"suggestions":"1521"},{"ruleId":"1341","severity":1,"message":"1342","line":375,"column":11,"nodeType":"1343","endLine":375,"endColumn":51},{"ruleId":"1316","severity":1,"message":"1396","line":3,"column":10,"nodeType":"1318","messageId":"1319","endLine":3,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1397","line":7,"column":26,"nodeType":"1318","messageId":"1319","endLine":7,"endColumn":40},{"ruleId":"1316","severity":1,"message":"1388","line":39,"column":9,"nodeType":"1318","messageId":"1319","endLine":39,"endColumn":16},{"ruleId":"1409","severity":1,"message":"1410","line":64,"column":9,"nodeType":"1411","messageId":"1412","endLine":81,"endColumn":10},{"ruleId":"1341","severity":1,"message":"1342","line":163,"column":11,"nodeType":"1343","endLine":163,"endColumn":28},{"ruleId":"1316","severity":1,"message":"1329","line":173,"column":29,"nodeType":"1318","messageId":"1319","endLine":173,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1520","line":193,"column":6,"nodeType":"1339","endLine":193,"endColumn":14,"suggestions":"1522"},{"ruleId":"1337","severity":1,"message":"1415","line":199,"column":6,"nodeType":"1339","endLine":199,"endColumn":12,"suggestions":"1523"},{"ruleId":"1341","severity":1,"message":"1342","line":205,"column":11,"nodeType":"1343","endLine":205,"endColumn":51},{"ruleId":"1316","severity":1,"message":"1396","line":5,"column":10,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1397","line":13,"column":10,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":24},{"ruleId":"1316","severity":1,"message":"1388","line":70,"column":9,"nodeType":"1318","messageId":"1319","endLine":70,"endColumn":16},{"ruleId":"1398","severity":1,"message":"1399","line":119,"column":44,"nodeType":"1400","messageId":"1365","endLine":119,"endColumn":46},{"ruleId":"1398","severity":1,"message":"1399","line":147,"column":44,"nodeType":"1400","messageId":"1365","endLine":147,"endColumn":46},{"ruleId":"1398","severity":1,"message":"1399","line":175,"column":59,"nodeType":"1400","messageId":"1365","endLine":175,"endColumn":61},{"ruleId":"1398","severity":1,"message":"1399","line":175,"column":212,"nodeType":"1400","messageId":"1365","endLine":175,"endColumn":214},{"ruleId":"1398","severity":1,"message":"1399","line":176,"column":44,"nodeType":"1400","messageId":"1365","endLine":176,"endColumn":46},{"ruleId":"1398","severity":1,"message":"1399","line":202,"column":44,"nodeType":"1400","messageId":"1365","endLine":202,"endColumn":46},{"ruleId":"1398","severity":1,"message":"1399","line":230,"column":44,"nodeType":"1400","messageId":"1365","endLine":230,"endColumn":46},{"ruleId":"1398","severity":1,"message":"1399","line":255,"column":57,"nodeType":"1400","messageId":"1365","endLine":255,"endColumn":59},{"ruleId":"1398","severity":1,"message":"1399","line":255,"column":143,"nodeType":"1400","messageId":"1365","endLine":255,"endColumn":145},{"ruleId":"1398","severity":1,"message":"1399","line":262,"column":46,"nodeType":"1400","messageId":"1365","endLine":262,"endColumn":48},{"ruleId":"1398","severity":1,"message":"1399","line":288,"column":57,"nodeType":"1400","messageId":"1365","endLine":288,"endColumn":59},{"ruleId":"1398","severity":1,"message":"1399","line":288,"column":143,"nodeType":"1400","messageId":"1365","endLine":288,"endColumn":145},{"ruleId":"1398","severity":1,"message":"1399","line":294,"column":44,"nodeType":"1400","messageId":"1365","endLine":294,"endColumn":46},{"ruleId":"1316","severity":1,"message":"1329","line":337,"column":29,"nodeType":"1318","messageId":"1319","endLine":337,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1520","line":347,"column":6,"nodeType":"1339","endLine":347,"endColumn":14,"suggestions":"1524"},{"ruleId":"1341","severity":1,"message":"1342","line":360,"column":11,"nodeType":"1343","endLine":360,"endColumn":51},{"ruleId":"1316","severity":1,"message":"1397","line":7,"column":26,"nodeType":"1318","messageId":"1319","endLine":7,"endColumn":40},{"ruleId":"1316","severity":1,"message":"1420","line":7,"column":42,"nodeType":"1318","messageId":"1319","endLine":7,"endColumn":67},{"ruleId":"1316","severity":1,"message":"1388","line":46,"column":9,"nodeType":"1318","messageId":"1319","endLine":46,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1329","line":221,"column":29,"nodeType":"1318","messageId":"1319","endLine":221,"endColumn":37},{"ruleId":"1316","severity":1,"message":"1426","line":222,"column":18,"nodeType":"1318","messageId":"1319","endLine":222,"endColumn":30},{"ruleId":"1316","severity":1,"message":"1427","line":222,"column":43,"nodeType":"1318","messageId":"1319","endLine":222,"endColumn":58},{"ruleId":"1316","severity":1,"message":"1525","line":222,"column":62,"nodeType":"1318","messageId":"1319","endLine":222,"endColumn":76},{"ruleId":"1337","severity":1,"message":"1526","line":241,"column":6,"nodeType":"1339","endLine":241,"endColumn":8,"suggestions":"1527"},{"ruleId":"1337","severity":1,"message":"1415","line":247,"column":6,"nodeType":"1339","endLine":247,"endColumn":12,"suggestions":"1528"},{"ruleId":"1341","severity":1,"message":"1342","line":256,"column":11,"nodeType":"1343","endLine":256,"endColumn":51},{"ruleId":"1316","severity":1,"message":"1420","line":7,"column":26,"nodeType":"1318","messageId":"1319","endLine":7,"endColumn":51},{"ruleId":"1316","severity":1,"message":"1511","line":8,"column":10,"nodeType":"1318","messageId":"1319","endLine":8,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1529","line":10,"column":8,"nodeType":"1318","messageId":"1319","endLine":10,"endColumn":13},{"ruleId":"1316","severity":1,"message":"1530","line":28,"column":7,"nodeType":"1318","messageId":"1319","endLine":28,"endColumn":11},{"ruleId":"1316","severity":1,"message":"1531","line":58,"column":10,"nodeType":"1318","messageId":"1319","endLine":58,"endColumn":26},{"ruleId":"1316","severity":1,"message":"1532","line":78,"column":22,"nodeType":"1318","messageId":"1319","endLine":78,"endColumn":35},{"ruleId":"1316","severity":1,"message":"1388","line":83,"column":9,"nodeType":"1318","messageId":"1319","endLine":83,"endColumn":16},{"ruleId":"1533","severity":1,"message":"1534","line":128,"column":11,"nodeType":"1535","messageId":"1536","endLine":129,"endColumn":25},{"ruleId":"1533","severity":1,"message":"1534","line":130,"column":11,"nodeType":"1535","messageId":"1536","endLine":131,"endColumn":28},{"ruleId":"1533","severity":1,"message":"1534","line":132,"column":11,"nodeType":"1535","messageId":"1536","endLine":133,"endColumn":29},{"ruleId":"1533","severity":1,"message":"1534","line":134,"column":11,"nodeType":"1535","messageId":"1536","endLine":135,"endColumn":26},{"ruleId":"1533","severity":1,"message":"1534","line":136,"column":11,"nodeType":"1535","messageId":"1536","endLine":137,"endColumn":26},{"ruleId":"1533","severity":1,"message":"1534","line":138,"column":11,"nodeType":"1535","messageId":"1536","endLine":139,"endColumn":25},{"ruleId":"1533","severity":1,"message":"1534","line":140,"column":11,"nodeType":"1535","messageId":"1536","endLine":141,"endColumn":28},{"ruleId":"1533","severity":1,"message":"1534","line":142,"column":11,"nodeType":"1535","messageId":"1536","endLine":143,"endColumn":31},{"ruleId":"1533","severity":1,"message":"1534","line":144,"column":11,"nodeType":"1535","messageId":"1536","endLine":145,"endColumn":33},{"ruleId":"1533","severity":1,"message":"1534","line":146,"column":11,"nodeType":"1535","messageId":"1536","endLine":147,"endColumn":25},{"ruleId":"1533","severity":1,"message":"1534","line":148,"column":11,"nodeType":"1535","messageId":"1536","endLine":149,"endColumn":32},{"ruleId":"1533","severity":1,"message":"1537","line":150,"column":11,"nodeType":"1535","messageId":"1538","endLine":151,"endColumn":21},{"ruleId":"1539","severity":1,"message":"1540","line":182,"column":7,"nodeType":"1541","messageId":"1365","endLine":182,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1329","line":257,"column":29,"nodeType":"1318","messageId":"1319","endLine":257,"endColumn":37},{"ruleId":"1316","severity":1,"message":"1542","line":259,"column":9,"nodeType":"1318","messageId":"1319","endLine":259,"endColumn":15},{"ruleId":"1337","severity":1,"message":"1520","line":268,"column":6,"nodeType":"1339","endLine":268,"endColumn":19,"suggestions":"1543"},{"ruleId":"1337","severity":1,"message":"1544","line":275,"column":6,"nodeType":"1339","endLine":275,"endColumn":12,"suggestions":"1545"},{"ruleId":"1341","severity":1,"message":"1342","line":284,"column":9,"nodeType":"1343","endLine":284,"endColumn":49},{"ruleId":"1341","severity":1,"message":"1342","line":314,"column":9,"nodeType":"1343","endLine":314,"endColumn":49},{"ruleId":"1316","severity":1,"message":"1396","line":5,"column":10,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1397","line":13,"column":10,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":24},{"ruleId":"1316","severity":1,"message":"1419","line":13,"column":26,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":34},{"ruleId":"1316","severity":1,"message":"1546","line":13,"column":36,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":47},{"ruleId":"1316","severity":1,"message":"1383","line":13,"column":49,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":61},{"ruleId":"1316","severity":1,"message":"1547","line":13,"column":88,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":101},{"ruleId":"1316","severity":1,"message":"1388","line":66,"column":9,"nodeType":"1318","messageId":"1319","endLine":66,"endColumn":16},{"ruleId":"1341","severity":1,"message":"1342","line":171,"column":11,"nodeType":"1343","endLine":171,"endColumn":28},{"ruleId":"1316","severity":1,"message":"1329","line":322,"column":29,"nodeType":"1318","messageId":"1319","endLine":322,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1526","line":339,"column":6,"nodeType":"1339","endLine":339,"endColumn":8,"suggestions":"1548"},{"ruleId":"1341","severity":1,"message":"1342","line":351,"column":11,"nodeType":"1343","endLine":351,"endColumn":51},{"ruleId":"1316","severity":1,"message":"1444","line":2,"column":10,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":19},{"ruleId":"1316","severity":1,"message":"1444","line":2,"column":10,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":19},{"ruleId":"1316","severity":1,"message":"1444","line":2,"column":10,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":19},{"ruleId":"1316","severity":1,"message":"1476","line":2,"column":17,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":28},{"ruleId":"1316","severity":1,"message":"1369","line":2,"column":30,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":38},{"ruleId":"1316","severity":1,"message":"1549","line":5,"column":18,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":22},{"ruleId":"1316","severity":1,"message":"1550","line":19,"column":10,"nodeType":"1318","messageId":"1319","endLine":19,"endColumn":13},{"ruleId":"1316","severity":1,"message":"1551","line":19,"column":15,"nodeType":"1318","messageId":"1319","endLine":19,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1505","line":70,"column":7,"nodeType":"1318","messageId":"1319","endLine":70,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1329","line":244,"column":29,"nodeType":"1318","messageId":"1319","endLine":244,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1338","line":252,"column":6,"nodeType":"1339","endLine":252,"endColumn":14,"suggestions":"1552"},{"ruleId":"1341","severity":1,"message":"1342","line":264,"column":11,"nodeType":"1343","endLine":264,"endColumn":51},{"ruleId":"1316","severity":1,"message":"1503","line":13,"column":12,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1504","line":13,"column":19,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":27},{"ruleId":"1337","severity":1,"message":"1509","line":82,"column":8,"nodeType":"1339","endLine":82,"endColumn":16,"suggestions":"1553"},{"ruleId":"1316","severity":1,"message":"1483","line":7,"column":9,"nodeType":"1318","messageId":"1319","endLine":7,"endColumn":13},{"ruleId":"1316","severity":1,"message":"1554","line":14,"column":7,"nodeType":"1318","messageId":"1319","endLine":14,"endColumn":15},{"ruleId":"1316","severity":1,"message":"1555","line":16,"column":7,"nodeType":"1318","messageId":"1319","endLine":16,"endColumn":12},{"ruleId":"1316","severity":1,"message":"1556","line":31,"column":3,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":8},{"ruleId":"1316","severity":1,"message":"1557","line":36,"column":9,"nodeType":"1318","messageId":"1319","endLine":36,"endColumn":20},{"ruleId":"1316","severity":1,"message":"1328","line":37,"column":30,"nodeType":"1318","messageId":"1319","endLine":37,"endColumn":39},{"ruleId":"1316","severity":1,"message":"1329","line":37,"column":41,"nodeType":"1318","messageId":"1319","endLine":37,"endColumn":49},{"ruleId":"1337","severity":1,"message":"1516","line":43,"column":6,"nodeType":"1339","endLine":43,"endColumn":8,"suggestions":"1558"},{"ruleId":"1341","severity":1,"message":"1342","line":48,"column":9,"nodeType":"1343","endLine":48,"endColumn":49},{"ruleId":"1316","severity":1,"message":"1549","line":5,"column":18,"nodeType":"1318","messageId":"1319","endLine":5,"endColumn":22},{"ruleId":"1316","severity":1,"message":"1550","line":19,"column":10,"nodeType":"1318","messageId":"1319","endLine":19,"endColumn":13},{"ruleId":"1316","severity":1,"message":"1551","line":19,"column":15,"nodeType":"1318","messageId":"1319","endLine":19,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1505","line":70,"column":7,"nodeType":"1318","messageId":"1319","endLine":70,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1329","line":183,"column":29,"nodeType":"1318","messageId":"1319","endLine":183,"endColumn":37},{"ruleId":"1337","severity":1,"message":"1338","line":191,"column":6,"nodeType":"1339","endLine":191,"endColumn":14,"suggestions":"1559"},{"ruleId":"1341","severity":1,"message":"1342","line":203,"column":11,"nodeType":"1343","endLine":203,"endColumn":51},{"ruleId":"1316","severity":1,"message":"1503","line":13,"column":12,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1504","line":13,"column":19,"nodeType":"1318","messageId":"1319","endLine":13,"endColumn":27},{"ruleId":"1337","severity":1,"message":"1509","line":82,"column":8,"nodeType":"1339","endLine":82,"endColumn":16,"suggestions":"1560"},{"ruleId":"1316","severity":1,"message":"1483","line":7,"column":9,"nodeType":"1318","messageId":"1319","endLine":7,"endColumn":13},{"ruleId":"1316","severity":1,"message":"1561","line":12,"column":9,"nodeType":"1318","messageId":"1319","endLine":12,"endColumn":15},{"ruleId":"1316","severity":1,"message":"1554","line":14,"column":7,"nodeType":"1318","messageId":"1319","endLine":14,"endColumn":15},{"ruleId":"1316","severity":1,"message":"1555","line":16,"column":7,"nodeType":"1318","messageId":"1319","endLine":16,"endColumn":12},{"ruleId":"1316","severity":1,"message":"1556","line":31,"column":3,"nodeType":"1318","messageId":"1319","endLine":31,"endColumn":8},{"ruleId":"1316","severity":1,"message":"1557","line":36,"column":9,"nodeType":"1318","messageId":"1319","endLine":36,"endColumn":20},{"ruleId":"1316","severity":1,"message":"1328","line":37,"column":30,"nodeType":"1318","messageId":"1319","endLine":37,"endColumn":39},{"ruleId":"1316","severity":1,"message":"1329","line":37,"column":41,"nodeType":"1318","messageId":"1319","endLine":37,"endColumn":49},{"ruleId":"1337","severity":1,"message":"1516","line":43,"column":6,"nodeType":"1339","endLine":43,"endColumn":8,"suggestions":"1562"},{"ruleId":"1341","severity":1,"message":"1342","line":48,"column":9,"nodeType":"1343","endLine":48,"endColumn":49},{"ruleId":"1316","severity":1,"message":"1396","line":1,"column":10,"nodeType":"1318","messageId":"1319","endLine":1,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1563","line":2,"column":34,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":40},{"ruleId":"1316","severity":1,"message":"1564","line":4,"column":10,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":15},{"ruleId":"1316","severity":1,"message":"1475","line":4,"column":17,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":23},{"ruleId":"1316","severity":1,"message":"1437","line":10,"column":10,"nodeType":"1318","messageId":"1319","endLine":10,"endColumn":21},{"ruleId":"1316","severity":1,"message":"1473","line":62,"column":12,"nodeType":"1318","messageId":"1319","endLine":62,"endColumn":22},{"ruleId":"1316","severity":1,"message":"1474","line":62,"column":24,"nodeType":"1318","messageId":"1319","endLine":62,"endColumn":37},{"ruleId":"1316","severity":1,"message":"1565","line":68,"column":9,"nodeType":"1318","messageId":"1319","endLine":68,"endColumn":20},{"ruleId":"1316","severity":1,"message":"1566","line":97,"column":11,"nodeType":"1318","messageId":"1319","endLine":97,"endColumn":31},{"ruleId":"1341","severity":1,"message":"1342","line":157,"column":25,"nodeType":"1343","endLine":157,"endColumn":65},{"ruleId":"1316","severity":1,"message":"1370","line":10,"column":22,"nodeType":"1318","messageId":"1319","endLine":10,"endColumn":31},{"ruleId":"1316","severity":1,"message":"1567","line":11,"column":8,"nodeType":"1318","messageId":"1319","endLine":11,"endColumn":15},{"ruleId":"1316","severity":1,"message":"1327","line":126,"column":20,"nodeType":"1318","messageId":"1319","endLine":126,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1329","line":128,"column":31,"nodeType":"1318","messageId":"1319","endLine":128,"endColumn":39},{"ruleId":"1341","severity":1,"message":"1342","line":138,"column":21,"nodeType":"1343","endLine":138,"endColumn":61},{"ruleId":"1316","severity":1,"message":"1326","line":14,"column":11,"nodeType":"1318","messageId":"1319","endLine":14,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1568","line":3,"column":16,"nodeType":"1318","messageId":"1319","endLine":3,"endColumn":24},{"ruleId":"1316","severity":1,"message":"1569","line":4,"column":33,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":39},{"ruleId":"1316","severity":1,"message":"1440","line":11,"column":12,"nodeType":"1318","messageId":"1319","endLine":11,"endColumn":21},{"ruleId":"1316","severity":1,"message":"1441","line":11,"column":23,"nodeType":"1318","messageId":"1319","endLine":11,"endColumn":35},{"ruleId":"1316","severity":1,"message":"1570","line":12,"column":12,"nodeType":"1318","messageId":"1319","endLine":12,"endColumn":24},{"ruleId":"1316","severity":1,"message":"1571","line":12,"column":26,"nodeType":"1318","messageId":"1319","endLine":12,"endColumn":41},{"ruleId":"1316","severity":1,"message":"1326","line":15,"column":11,"nodeType":"1318","messageId":"1319","endLine":15,"endColumn":25},{"ruleId":"1316","severity":1,"message":"1572","line":69,"column":11,"nodeType":"1318","messageId":"1319","endLine":69,"endColumn":29},{"ruleId":"1316","severity":1,"message":"1396","line":1,"column":10,"nodeType":"1318","messageId":"1319","endLine":1,"endColumn":16},{"ruleId":"1316","severity":1,"message":"1549","line":2,"column":20,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":24},{"ruleId":"1316","severity":1,"message":"1563","line":2,"column":40,"nodeType":"1318","messageId":"1319","endLine":2,"endColumn":46},{"ruleId":"1316","severity":1,"message":"1564","line":4,"column":10,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":15},{"ruleId":"1316","severity":1,"message":"1475","line":4,"column":17,"nodeType":"1318","messageId":"1319","endLine":4,"endColumn":23},{"ruleId":"1316","severity":1,"message":"1573","line":7,"column":10,"nodeType":"1318","messageId":"1319","endLine":7,"endColumn":14},{"ruleId":"1316","severity":1,"message":"1437","line":10,"column":10,"nodeType":"1318","messageId":"1319","endLine":10,"endColumn":21},{"ruleId":"1316","severity":1,"message":"1574","line":56,"column":12,"nodeType":"1318","messageId":"1319","endLine":56,"endColumn":20},{"ruleId":"1316","severity":1,"message":"1575","line":56,"column":22,"nodeType":"1318","messageId":"1319","endLine":56,"endColumn":33},{"ruleId":"1316","severity":1,"message":"1473","line":64,"column":12,"nodeType":"1318","messageId":"1319","endLine":64,"endColumn":22},{"ruleId":"1316","severity":1,"message":"1474","line":64,"column":24,"nodeType":"1318","messageId":"1319","endLine":64,"endColumn":37},{"ruleId":"1316","severity":1,"message":"1565","line":70,"column":9,"nodeType":"1318","messageId":"1319","endLine":70,"endColumn":20},{"ruleId":"1316","severity":1,"message":"1576","line":72,"column":12,"nodeType":"1318","messageId":"1319","endLine":72,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1566","line":99,"column":11,"nodeType":"1318","messageId":"1319","endLine":99,"endColumn":31},{"ruleId":"1341","severity":1,"message":"1342","line":160,"column":25,"nodeType":"1343","endLine":160,"endColumn":65},"no-native-reassign",["1577"],"no-negated-in-lhs",["1578"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'names' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'selectUserName' is assigned a value but never used.","'setSelectUserName' is assigned a value but never used.","'BootstrapInput' is assigned a value but never used.","'setParams' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'hasError' is assigned a value but never used.","'submitMessage' is assigned a value but never used.","'submitMessageIsLoading' is assigned a value but never used.","'submitMessageHasError' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'doFetch'. Either include it or remove the dependency array.","ArrayExpression",["1579"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'NotificationImportant' is defined but never used.","'userLoading' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'doFetch', 'getTicket', 'getTicketsReply', and 'id'. Either include them or remove the dependency array.",["1580"],"React Hook React.useEffect has missing dependencies: 'getTicketsReply', 'id', and 'newReply'. Either include them or remove the dependency array.",["1581"],"'CardSection' is defined but never used.","React Hook React.useEffect has a missing dependency: 'checkUserRefreshToken'. Either include it or remove the dependency array.",["1582"],"React Hook React.useEffect has a missing dependency: 'getLevelList'. Either include it or remove the dependency array.",["1583"],"React Hook React.useEffect has missing dependencies: 'getLevelList' and 'updateLevelData'. Either include them or remove the dependency array.",["1584"],"'setMinValue1' is assigned a value but never used.","'setMinValue2' is assigned a value but never used.","'setMinValue3' is assigned a value but never used.","'setMinValue4' is assigned a value but never used.","'maxNumber' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected",["1585"],"React Hook React.useEffect has missing dependencies: 'createLevelData', 'getLevelList', and 'updateLevelData'. Either include them or remove the dependency array.",["1586"],"'useState' is defined but never used.","'useParams' is defined but never used.","'messageIsLoading' is assigned a value but never used.","no-useless-rename","Destructuring assignment data unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"1587","text":"1588"},"Destructuring assignment isLoading unnecessarily renamed.",{"range":"1589","text":"1590"},"Destructuring assignment hasError unnecessarily renamed.",{"range":"1591","text":"1592"},"React Hook React.useEffect has missing dependencies: 'doFetch' and 'doFetchUsers'. Either include them or remove the dependency array.",["1593"],"'USERS_ORDERS' is defined but never used.","'rows' is assigned a value but never used.",["1594"],"React Hook React.useEffect has a missing dependency: 'formikProps'. Either include it or remove the dependency array.",["1595"],"'history' is assigned a value but never used.","'cancelData' is assigned a value but never used.","'cancelLoading' is assigned a value but never used.","'handleCancel' is assigned a value but never used.",["1596"],"'numberRegex' is defined but never used.","React Hook React.useEffect has missing dependencies: 'formikProps' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["1597"],"'Button' is defined but never used.","'ADMIN_BASE_URL' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'tradeError' is assigned a value but never used.","'usersIsLoading' is assigned a value but never used.","'usersError' is assigned a value but never used.",["1598"],"React Hook React.useEffect has a missing dependency: 'doFetchUser'. Either include it or remove the dependency array.",["1599"],"React Hook React.useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.",["1600"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'className' is assigned a value but never used.",["1601"],"React Hook React.useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["1602"],"'round' is defined but never used.",["1603"],"'BASE_URL' is defined but never used.","'USERS_TRANSACTION_HISTORY' is defined but never used.","'CircularProgress' is defined but never used.","'Backdrop' is defined but never used.","'Snackbar' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'withdrawData' is assigned a value but never used.","'withdrawLoading' is assigned a value but never used.",["1604"],["1605"],"'ConfigApi' is defined but never used.",["1606"],["1607"],"'responseMessage' is assigned a value but never used.","'InboxIcon' is defined but never used.",["1577"],["1578"],"'useFetchApi' is defined but never used.","'ACCOUNTING_APP' is defined but never used.","'USERS_WALLET' is defined but never used.","'tradeType' is assigned a value but never used.","'setTradeType' is assigned a value but never used.","'dateString' is assigned a value but never used.","'setDateString' is assigned a value but never used.","'TextField' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'SearchIcon' is defined but never used.","'useEffect' is defined but never used.",["1608"],["1609"],["1610"],["1611"],["1612"],["1613"],"React Hook useEffect has a missing dependency: 'configData'. Either include it or remove the dependency array.",["1614"],"'ReactDOM' is defined but never used.","'Container' is defined but never used.","'Box' is defined but never used.","'aboutUsLoading' is assigned a value but never used.","'aboutUsUpdate' is assigned a value but never used.","'aboutUsUpdateLoading' is assigned a value but never used.","'setContents' is assigned a value but never used.",["1615"],["1616"],["1617"],["1618"],["1619"],["1577"],["1578"],["1577"],["1578"],"'addNetwork' is assigned a value but never used.","'setAddNetwork' is assigned a value but never used.","'Formik' is defined but never used.","'useCallback' is defined but never used.","'list' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'doFetch' and 'type'. Either include them or remove the dependency array.",["1620"],"'cardinal' is assigned a value but never used.",["1621"],["1622"],"'data' is assigned a value but never used.",["1623"],"'FiltersProgress' is defined but never used.","'TradeProgressDonutChart' is defined but never used.",["1624"],"'numDiscriminant' is defined but never used.",["1625"],["1626"],"React Hook useEffect has a missing dependency: 'walletUpdate'. Either include it or remove the dependency array.",["1627"],"React Hook useEffect has a missing dependency: 'walletUpdatePrice'. Either include it or remove the dependency array.",["1628"],"Assignments to the 'ws' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'PureComponent' is defined but never used.","'Radio' is defined but never used.","'type' is assigned a value but never used.","'setType' is assigned a value but never used.","'nationalCode' is assigned a value but never used.","'setNationalCode' is assigned a value but never used.","'group' is assigned a value but never used.","'setGroup' is assigned a value but never used.","'handleSwitchChange' is assigned a value but never used.","'onChange' is defined but never used.",["1629"],["1630"],"React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["1631"],"'UrlQuery' is defined but never used.","'doFetch' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1632"],"'Form' is defined but never used.","React Hook useEffect has missing dependencies: 'doFetch' and 'id'. Either include them or remove the dependency array.",["1633"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1634"],"React Hook React.useEffect has missing dependencies: 'doFetch' and 'id'. Either include them or remove the dependency array.",["1635"],["1636"],["1637"],["1638"],"'updateWithdraw' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'doFetch', 'id', and 'params'. Either include them or remove the dependency array.",["1639"],["1640"],"'Chart' is defined but never used.","'stat' is assigned a value but never used.","'CustomPagination' is defined but never used.","'setChartValue' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","no-dupe-keys","Duplicate key 'renderCell'.","ObjectExpression","'toggle' is assigned a value but never used.",["1641"],"React Hook React.useEffect has a missing dependency: 'chartValue'. Either include it or remove the dependency array.",["1642"],"'TRADING_APP' is defined but never used.","'TICKET_DETAIL' is defined but never used.",["1643"],"'Grid' is defined but never used.","'Nav' is defined but never used.","'Tab' is defined but never used.",["1644"],["1645"],"'required' is assigned a value but never used.","'Error' is assigned a value but never used.","'index' is assigned a value but never used.","'dataContext' is assigned a value but never used.",["1646"],["1647"],["1648"],"'Option' is assigned a value but never used.",["1649"],"'Switch' is defined but never used.","'Field' is defined but never used.","'networkList' is assigned a value but never used.","'handleSettingApprove' is assigned a value but never used.","'Filters' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'originWallet' is assigned a value but never used.","'setOriginWallet' is assigned a value but never used.","'handleSelectChange' is assigned a value but never used.","'Link' is defined but never used.","'roleName' is assigned a value but never used.","'setRoleName' is assigned a value but never used.","'params' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1650","fix":"1651"},{"desc":"1652","fix":"1653"},{"desc":"1654","fix":"1655"},{"desc":"1656","fix":"1657"},{"desc":"1658","fix":"1659"},{"desc":"1660","fix":"1661"},{"desc":"1658","fix":"1662"},{"desc":"1663","fix":"1664"},[6551,6560],"data",[6562,6581],"isLoading",[6583,6600],"hasError",{"desc":"1665","fix":"1666"},{"desc":"1650","fix":"1667"},{"desc":"1668","fix":"1669"},{"desc":"1650","fix":"1670"},{"desc":"1671","fix":"1672"},{"desc":"1650","fix":"1673"},{"desc":"1674","fix":"1675"},{"desc":"1676","fix":"1677"},{"desc":"1650","fix":"1678"},{"desc":"1679","fix":"1680"},{"desc":"1650","fix":"1681"},{"desc":"1650","fix":"1682"},{"desc":"1679","fix":"1683"},{"desc":"1650","fix":"1684"},{"desc":"1679","fix":"1685"},{"desc":"1650","fix":"1686"},{"desc":"1679","fix":"1687"},{"desc":"1650","fix":"1688"},{"desc":"1679","fix":"1689"},{"desc":"1650","fix":"1690"},{"desc":"1679","fix":"1691"},{"desc":"1692","fix":"1693"},{"desc":"1694","fix":"1695"},{"desc":"1694","fix":"1696"},{"desc":"1694","fix":"1697"},{"desc":"1650","fix":"1698"},{"desc":"1679","fix":"1699"},{"desc":"1700","fix":"1701"},{"desc":"1700","fix":"1702"},{"desc":"1700","fix":"1703"},{"desc":"1700","fix":"1704"},{"desc":"1650","fix":"1705"},{"desc":"1650","fix":"1706"},{"desc":"1650","fix":"1707"},{"desc":"1708","fix":"1709"},{"desc":"1710","fix":"1711"},{"desc":"1650","fix":"1712"},{"desc":"1650","fix":"1713"},{"desc":"1714","fix":"1715"},{"desc":"1716","fix":"1717"},{"desc":"1718","fix":"1719"},{"desc":"1720","fix":"1721"},{"desc":"1722","fix":"1723"},{"desc":"1722","fix":"1724"},{"desc":"1679","fix":"1725"},{"desc":"1722","fix":"1726"},{"desc":"1722","fix":"1727"},{"desc":"1679","fix":"1728"},{"desc":"1729","fix":"1730"},{"desc":"1731","fix":"1732"},{"desc":"1722","fix":"1733"},{"desc":"1650","fix":"1734"},{"desc":"1714","fix":"1735"},{"desc":"1718","fix":"1736"},{"desc":"1650","fix":"1737"},{"desc":"1714","fix":"1738"},{"desc":"1718","fix":"1739"},"Update the dependencies array to be: [doFetch, params]",{"range":"1740","text":"1741"},"Update the dependencies array to be: [doFetch, getTicket, getTicketsReply, id]",{"range":"1742","text":"1743"},"Update the dependencies array to be: [getTicketsReply, id, newReply, newReplyLoading]",{"range":"1744","text":"1745"},"Update the dependencies array to be: [checkUserRefreshToken]",{"range":"1746","text":"1747"},"Update the dependencies array to be: [getLevelList]",{"range":"1748","text":"1749"},"Update the dependencies array to be: [getLevelList, updateLevelData, updateLevelLoading]",{"range":"1750","text":"1751"},{"range":"1752","text":"1749"},"Update the dependencies array to be: [createLevelData, createLevelLoading, getLevelList, updateLevelData, updateLevelLoading]",{"range":"1753","text":"1754"},"Update the dependencies array to be: [doFetch, doFetchUsers, params]",{"range":"1755","text":"1756"},{"range":"1757","text":"1741"},"Update the dependencies array to be: [formikProps, props.item]",{"range":"1758","text":"1759"},{"range":"1760","text":"1741"},"Update the dependencies array to be: [formikProps, props, props.item]",{"range":"1761","text":"1762"},{"range":"1763","text":"1741"},"Update the dependencies array to be: [doFetchUser]",{"range":"1764","text":"1765"},"Update the dependencies array to be: [users, params, trades, profile]",{"range":"1766","text":"1767"},{"range":"1768","text":"1741"},"Update the dependencies array to be: [data, updateData]",{"range":"1769","text":"1770"},{"range":"1771","text":"1741"},{"range":"1772","text":"1741"},{"range":"1773","text":"1770"},{"range":"1774","text":"1741"},{"range":"1775","text":"1770"},{"range":"1776","text":"1741"},{"range":"1777","text":"1770"},{"range":"1778","text":"1741"},{"range":"1779","text":"1770"},{"range":"1780","text":"1741"},{"range":"1781","text":"1770"},"Update the dependencies array to be: [configData]",{"range":"1782","text":"1783"},"Update the dependencies array to be: [doFetch]",{"range":"1784","text":"1785"},{"range":"1786","text":"1785"},{"range":"1787","text":"1785"},{"range":"1788","text":"1741"},{"range":"1789","text":"1770"},"Update the dependencies array to be: [doFetch, params, type]",{"range":"1790","text":"1791"},{"range":"1792","text":"1791"},{"range":"1793","text":"1791"},{"range":"1794","text":"1791"},{"range":"1795","text":"1741"},{"range":"1796","text":"1741"},{"range":"1797","text":"1741"},"Update the dependencies array to be: [props.walletData, contextData.priceUpdate, contextData.usdtIrr, walletUpdate]",{"range":"1798","text":"1799"},"Update the dependencies array to be: [props.walletData, contextData.usdtIrr, walletUpdatePrice]",{"range":"1800","text":"1801"},{"range":"1802","text":"1741"},{"range":"1803","text":"1741"},"Update the dependencies array to be: [mobile, props]",{"range":"1804","text":"1805"},"Update the dependencies array to be: [id, params]",{"range":"1806","text":"1807"},"Update the dependencies array to be: [doFetch, id]",{"range":"1808","text":"1809"},"Update the dependencies array to be: [props, userDetail]",{"range":"1810","text":"1811"},"Update the dependencies array to be: [doFetch, id, params]",{"range":"1812","text":"1813"},{"range":"1814","text":"1813"},{"range":"1815","text":"1770"},{"range":"1816","text":"1813"},{"range":"1817","text":"1813"},{"range":"1818","text":"1770"},"Update the dependencies array to be: [data.length, doFetch, id]",{"range":"1819","text":"1820"},"Update the dependencies array to be: [chartValue, data]",{"range":"1821","text":"1822"},{"range":"1823","text":"1813"},{"range":"1824","text":"1741"},{"range":"1825","text":"1805"},{"range":"1826","text":"1809"},{"range":"1827","text":"1741"},{"range":"1828","text":"1805"},{"range":"1829","text":"1809"},[4183,4191],"[doFetch, params]",[2241,2243],"[doFetch, getTicket, getTicketsReply, id]",[2417,2434],"[getTicketsReply, id, newReply, newReplyLoading]",[1764,1766],"[checkUserRefreshToken]",[999,1001],"[getLevelList]",[1181,1201],"[getLevelList, updateLevelData, updateLevelLoading]",[1626,1628],[1950,1990],"[createLevelData, createLevelLoading, getLevelList, updateLevelData, updateLevelLoading]",[6894,6902],"[doFetch, doFetchUsers, params]",[4676,4684],[1040,1052],"[formikProps, props.item]",[7698,7706],[1960,1972],"[formikProps, props, props.item]",[9664,9672],[9754,9756],"[doFetchUser]",[9812,9835],"[users, params, trades, profile]",[7574,7582],[7636,7642],"[data, updateData]",[6521,6529],[11142,11150],[11205,11211],[10849,10857],[10911,10917],[6741,6749],[6802,6808],[7224,7232],[7286,7292],[7491,7499],[7554,7560],[1190,1192],"[configData]",[2316,2318],"[doFetch]",[2312,2314],[2315,2317],[7558,7566],[7621,7627],[1452,1460],"[doFetch, params, type]",[1401,1409],[2478,2486],[1410,1418],[1046,1054],[1461,1469],[1455,1463],[3307,3371],"[props.walletData, contextData.priceUpdate, contextData.usdtIrr, walletUpdate]",[3521,3560],"[props.walletData, contextData.usdtIrr, walletUpdatePrice]",[1527,1535],[3713,3721],[1577,1585],"[mobile, props]",[5324,5332],"[id, params]",[4644,4646],"[doFetch, id]",[5256,5268],"[props, userDetail]",[6062,6070],"[doFetch, id, params]",[5475,5483],[5536,5542],[11148,11156],[6534,6536],[6589,6595],[6766,6779],"[data.length, doFetch, id]",[6946,6952],"[chartValue, data]",[6039,6041],[4034,4042],[1665,1673],[1295,1297],[3123,3131],[1665,1673],[1295,1297]]