{"ast":null,"code":"var _jsxFileName = \"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/about_us.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport EditorJS from '@editorjs/editorjs';\nimport Header from '@editorjs/header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DEFAULT_INITIAL_DATA = () => {\n  return {\n    \"time\": new Date().getTime(),\n    \"blocks\": [{\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": \"This is my awesome editor!\",\n        \"level\": 1\n      }\n    }]\n  };\n};\n\n_c = DEFAULT_INITIAL_DATA;\nconst EDITTOR_HOLDER_ID = 'editorjs';\n\nconst AboutUs = () => {\n  _s();\n\n  const ejInstance = useRef();\n  const [editorData, setEditorData] = React.useState(DEFAULT_INITIAL_DATA); // This will run only once\n\n  useEffect(() => {\n    if (!ejInstance.current) {\n      initEditor();\n    }\n\n    return () => {\n      ejInstance.current.destroy();\n      ejInstance.current = null;\n    };\n  }, []);\n\n  const initEditor = () => {\n    const editor = new EditorJS({\n      holder: EDITTOR_HOLDER_ID,\n      logLevel: \"ERROR\",\n      data: editorData,\n      onReady: () => {\n        ejInstance.current = editor;\n      },\n      onChange: async () => {\n        let content = await this.editorjs.saver.save(); // Put your logic here to save this data to your DB\n\n        setEditorData(content);\n      },\n      autofocus: true,\n      tools: {\n        header: Header\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: EDITTOR_HOLDER_ID,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AboutUs, \"gJ5yROwQwCTKnOaaCLv+eHb8CYg=\");\n\n_c2 = AboutUs;\nexport default AboutUs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DEFAULT_INITIAL_DATA\");\n$RefreshReg$(_c2, \"AboutUs\");","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/about_us.js"],"names":["React","useEffect","useRef","EditorJS","Header","DEFAULT_INITIAL_DATA","Date","getTime","EDITTOR_HOLDER_ID","AboutUs","ejInstance","editorData","setEditorData","useState","current","initEditor","destroy","editor","holder","logLevel","data","onReady","onChange","content","editorjs","saver","save","autofocus","tools","header"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAC/B,SAAO;AACL,YAAQ,IAAIC,IAAJ,GAAWC,OAAX,EADH;AAEL,cAAU,CACR;AACE,cAAQ,QADV;AAEE,cAAQ;AACN,gBAAQ,4BADF;AAEN,iBAAS;AAFH;AAFV,KADQ;AAFL,GAAP;AAYD,CAbH;;KAAMF,oB;AAeJ,MAAMG,iBAAiB,GAAG,UAA1B;;AAEF,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,UAAU,GAAGR,MAAM,EAAzB;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BZ,KAAK,CAACa,QAAN,CAAeR,oBAAf,CAApC,CAFkB,CAIlB;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,UAAU,CAACI,OAAhB,EAAyB;AACvBC,MAAAA,UAAU;AACX;;AACD,WAAO,MAAM;AACXL,MAAAA,UAAU,CAACI,OAAX,CAAmBE,OAAnB;AACAN,MAAAA,UAAU,CAACI,OAAX,GAAqB,IAArB;AACD,KAHD;AAID,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,UAAU,GAAG,MAAM;AACvB,UAAME,MAAM,GAAG,IAAId,QAAJ,CAAa;AAC1Be,MAAAA,MAAM,EAAEV,iBADkB;AAE1BW,MAAAA,QAAQ,EAAE,OAFgB;AAG1BC,MAAAA,IAAI,EAAET,UAHoB;AAI1BU,MAAAA,OAAO,EAAE,MAAM;AACbX,QAAAA,UAAU,CAACI,OAAX,GAAqBG,MAArB;AACD,OANyB;AAO1BK,MAAAA,QAAQ,EAAE,YAAY;AACpB,YAAIC,OAAO,GAAG,MAAM,KAAKC,QAAL,CAAcC,KAAd,CAAoBC,IAApB,EAApB,CADoB,CAEpB;;AACAd,QAAAA,aAAa,CAACW,OAAD,CAAb;AACD,OAXyB;AAY1BI,MAAAA,SAAS,EAAE,IAZe;AAa1BC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAEzB;AADH;AAbmB,KAAb,CAAf;AAiBD,GAlBD;;AAmBA,sBACI;AAAA,2BACF;AAAK,MAAA,EAAE,EAAEI,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvCD;;GAAMC,O;;MAAAA,O;AAyCN,eAAeA,OAAf","sourcesContent":["import React , {useEffect, useRef} from 'react';\nimport EditorJS from '@editorjs/editorjs';\nimport Header from '@editorjs/header'; \n\nconst DEFAULT_INITIAL_DATA = () => {\n    return {\n      \"time\": new Date().getTime(),\n      \"blocks\": [\n        {\n          \"type\": \"header\",\n          \"data\": {\n            \"text\": \"This is my awesome editor!\",\n            \"level\": 1\n          }\n        },\n      ]\n    }\n  }\n   \n  const EDITTOR_HOLDER_ID = 'editorjs';\n\nconst AboutUs = () => {\n    const ejInstance = useRef();\n    const [editorData, setEditorData] = React.useState(DEFAULT_INITIAL_DATA);\n   \n    // This will run only once\n    useEffect(() => {\n      if (!ejInstance.current) {\n        initEditor();\n      }\n      return () => {\n        ejInstance.current.destroy();\n        ejInstance.current = null;\n      }\n    }, []);\n   \n    const initEditor = () => {\n      const editor = new EditorJS({\n        holder: EDITTOR_HOLDER_ID,\n        logLevel: \"ERROR\",\n        data: editorData,\n        onReady: () => {\n          ejInstance.current = editor;\n        },\n        onChange: async () => {\n          let content = await this.editorjs.saver.save();\n          // Put your logic here to save this data to your DB\n          setEditorData(content);\n        },\n        autofocus: true,\n        tools: { \n          header: Header, \n        }, \n      });\n    };\n    return (\n        <div>\n      <div id={EDITTOR_HOLDER_ID}> </div>\n        </div>\n    );\n}\n\nexport default AboutUs;\n"]},"metadata":{},"sourceType":"module"}