{"ast":null,"code":"var _jsxFileName = \"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/policies.js\";\nimport React, { ReactDOM } from \"react\";\nimport CKEditor from \"./classicEditor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Policies extends React.Component {\n  constructor(props) {\n    super(props); //State initialization\n\n    this.state = {\n      content: \"Hello World\",\n      toggle: false\n    };\n    this.setContent = this.setContent.bind(this);\n    this.setToggle = this.setToggle.bind(this);\n  } //------ Test for race condition ------ //\n\n\n  setContent() {\n    if (this.state.toggle) {\n      console.log(\"Setting content\", this.state.content);\n    } // this.setState({\n    //   content: \"Hello World \" + Math.random()\n    // })\n\n  }\n\n  onChange(evt) {// console.log(\"onChange fired with event info: \",evt, \"and data: \",evt.editor.getData());\n    // console.log(\"and data: \",evt.editor.getData());\n  }\n\n  onBlur(evt) {\n    this.setState({\n      toggle: true\n    });\n    console.log(\"onBlur fired with event info: \", evt);\n  }\n\n  afterPaste(evt) {// console.log(\"afterPaste fired with event info: \",evt);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.setContent(),\n          children: \"Set content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n          content: this.state.content,\n          events: {\n            blur: this.onBlur,\n            afterPaste: this.afterPaste,\n            change: this.onChange\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Policies;","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/policies.js"],"names":["React","ReactDOM","CKEditor","Policies","Component","constructor","props","state","content","toggle","setContent","bind","setToggle","console","log","onChange","evt","onBlur","setState","afterPaste","render","blur","change"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,iBAArB;;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN,EADgB,CAGhB;;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,aADE;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAIA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACD,GAXoC,CAarC;;;AACAD,EAAAA,UAAU,GAAE;AACR,QAAI,KAAKH,KAAL,CAAWE,MAAf,EAAuB;AAEnBI,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,KAAKP,KAAL,CAAWC,OAAzC;AACH,KAJO,CAKV;AACA;AACA;;AACD;;AAEDO,EAAAA,QAAQ,CAACC,GAAD,EAAK,CACX;AACA;AACD;;AAEDC,EAAAA,MAAM,CAACD,GAAD,EAAK;AACP,SAAKE,QAAL,CAAc;AACVT,MAAAA,MAAM,EAAE;AADE,KAAd;AAGFI,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CE,GAA7C;AACD;;AAEDG,EAAAA,UAAU,CAACH,GAAD,EAAK,CACb;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,wEAAf;AAAA,gCACA;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKV,UAAL,EAAvB;AAA0C,UAAA,QAAQ,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,QAAD;AACE,UAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,OADtB;AAEE,UAAA,MAAM,EAAE;AACNa,YAAAA,IAAI,EAAE,KAAKJ,MADL;AAENE,YAAAA,UAAU,EAAE,KAAKA,UAFX;AAGNG,YAAAA,MAAM,EAAE,KAAKP;AAHP;AAFV;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeD;;AAxDoC;;AA2DvC,eAAeZ,QAAf","sourcesContent":["import React, { ReactDOM } from \"react\";\nimport CKEditor from \"./classicEditor\";\n\nclass Policies extends React.Component {\n  constructor(props){\n    super(props);\n\n    //State initialization\n    this.state = {\n      content: \"Hello World\",\n      toggle: false\n    };\n    this.setContent = this.setContent.bind(this);\n    this.setToggle = this.setToggle.bind(this)\n  }\n\n  //------ Test for race condition ------ //\n  setContent(){\n      if (this.state.toggle) {\n          \n          console.log(\"Setting content\",this.state.content);\n      }\n    // this.setState({\n    //   content: \"Hello World \" + Math.random()\n    // })\n  }\n\n  onChange(evt){\n    // console.log(\"onChange fired with event info: \",evt, \"and data: \",evt.editor.getData());\n    // console.log(\"and data: \",evt.editor.getData());\n  }\n\n  onBlur(evt){\n      this.setState({\n          toggle: true\n      })\n    console.log(\"onBlur fired with event info: \",evt);\n  }\n\n  afterPaste(evt){\n    // console.log(\"afterPaste fired with event info: \",evt);\n  }\n\n  render() {\n    return (\n        <div className=\"content\">\n        <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n        <button onClick={() => this.setContent()} children='Set content' />\n        <CKEditor\n          content={this.state.content}\n          events={{\n            blur: this.onBlur,\n            afterPaste: this.afterPaste,\n            change: this.onChange\n          }}\n        />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Policies;"]},"metadata":{},"sourceType":"module"}