{"ast":null,"code":"import cookie from 'react-cookies';\nimport qs from 'qs';\nimport { BASE_URL, COOKIE_EXPIRES } from './constants';\nimport momentJalaali from \"moment-jalaali\";\nexport function Arraify(data) {\n  if (!data) return [];\n\n  if (Array.isArray(data)) {\n    return data;\n  } else {\n    return [data];\n  }\n}\n_c = Arraify;\n\nfunction filterNonNull(obj) {\n  return Object.fromEntries(Object.entries(obj).filter(([k, v]) => v));\n}\n\nexport function Header(options = {}) {\n  let token = Token(),\n      headers = new Headers();\n  headers.set('Accept', 'application/json');\n  headers.set('Content-Type', 'application/json');\n  let heads = options;\n  token && headers.set('Authorization', \"Bearer \" + token);\n  options.headers && Object.entries(options.headers).forEach(([k, v]) => headers.set(k, v));\n  options.headers = headers;\n\n  if (heads[\"Content-Type\"]) {\n    options.headers.set(\"Accept\", heads[\"Accept\"]);\n  }\n\n  return options;\n}\n_c2 = Header;\nexport function Url(url = \"\", data = undefined) {\n  if (url.charAt(0) !== '/') {\n    url = '/' + url;\n  }\n\n  return BASE_URL + url + (data ? `?${qs.stringify(filterNonNull(data), {\n    arrayFormat: 'comma'\n  })}` : ``);\n}\n_c3 = Url;\nexport function UrlQuery(url = \"\", data = {}) {\n  return url + `?${qs.stringify(filterNonNull(data), {\n    arrayFormat: 'comma'\n  })}`;\n}\n_c4 = UrlQuery;\nexport function QueryUrl(url) {\n  return qs.parse(url, {\n    ignoreQueryPrefix: true\n  });\n}\n_c5 = QueryUrl;\nexport function Querys(url) {\n  var _query$token;\n\n  let query = qs.parse(url, {\n    ignoreQueryPrefix: true\n  });\n  query.token = query === null || query === void 0 ? void 0 : (_query$token = query.token) === null || _query$token === void 0 ? void 0 : _query$token.replaceAll(' ', '+');\n  return query;\n}\n_c6 = Querys;\nexport function setToken(token) {\n  const expires = new Date();\n  expires.setDate(expires.getDate() + COOKIE_EXPIRES);\n  cookie.save('token', token.access_token, {\n    path: '/',\n    expires\n  });\n  cookie.save('refresh', token.refresh_token, {\n    path: '/'\n  });\n}\nexport function RefreshToken() {\n  let token = cookie.load('admin_refresh');\n\n  if (token === 'undefined') {\n    return undefined;\n  }\n\n  return token;\n}\n_c7 = RefreshToken;\nexport function Token() {\n  let token = cookie.load('admin_token');\n\n  if (token === 'undefined') {\n    return undefined;\n  }\n\n  return token;\n}\n_c8 = Token;\nexport function removeToken() {\n  cookie.remove('admin_token', {\n    path: '/'\n  });\n  cookie.remove('admin_refresh', {\n    path: '/'\n  });\n}\nexport function getTokenObject() {\n  let token = Token();\n\n  if (token !== undefined) {\n    return {\n      Authorization: token\n    };\n  }\n}\nexport function formatNumber(value) {\n  let f = value.match(/\\d+/);\n  if (f) return f[0];\n  return '';\n}\nexport function timeToStr(time, format) {\n  if (time) {\n    return momentJalaali(time).format(format);\n  }\n\n  return \"\";\n}\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Arraify\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Url\");\n$RefreshReg$(_c4, \"UrlQuery\");\n$RefreshReg$(_c5, \"QueryUrl\");\n$RefreshReg$(_c6, \"Querys\");\n$RefreshReg$(_c7, \"RefreshToken\");\n$RefreshReg$(_c8, \"Token\");","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/utils.js"],"names":["cookie","qs","BASE_URL","COOKIE_EXPIRES","momentJalaali","Arraify","data","Array","isArray","filterNonNull","obj","Object","fromEntries","entries","filter","k","v","Header","options","token","Token","headers","Headers","set","heads","forEach","Url","url","undefined","charAt","stringify","arrayFormat","UrlQuery","QueryUrl","parse","ignoreQueryPrefix","Querys","query","replaceAll","setToken","expires","Date","setDate","getDate","save","access_token","path","refresh_token","RefreshToken","load","removeToken","remove","getTokenObject","Authorization","formatNumber","value","f","match","timeToStr","time","format"],"mappings":"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","sourcesContent":["import cookie from 'react-cookies';\nimport qs from 'qs';\nimport {BASE_URL, COOKIE_EXPIRES} from './constants';\nimport momentJalaali from \"moment-jalaali\";\n\n\nexport function Arraify(data){\n    if(!data) return []\n    \n    if(Array.isArray(data)){\n        return data\n    }else{\n        return [data]\n    }\n}\n\nfunction filterNonNull(obj) {\n    return Object.fromEntries(Object.entries(obj).filter(([k, v]) => v));\n}\n\nexport function Header(options = {}) {\n    let token = Token(), headers = new Headers();\n    headers.set('Accept', 'application/json');\n    headers.set('Content-Type', 'application/json');\n    let heads = options;\n\n    token && headers.set('Authorization',\"Bearer \"+ token);\n    options.headers && Object.entries(options.headers).forEach(([k, v]) => headers.set(k, v));\n    options.headers = headers;\n\n    if (heads[\"Content-Type\"]){\n        options.headers.set(\"Accept\", heads[\"Accept\"])\n\n    }\n    return options;\n}\n\nexport function Url(url = \"\", data = undefined) {\n\n     if (url.charAt(0) !== '/') {url = '/' + url}\n    return BASE_URL + url + (data ? `?${qs.stringify(filterNonNull(data), {arrayFormat: 'comma'})}` : ``);\n}\n\nexport function UrlQuery(url = \"\", data = {}){\n    return url + `?${qs.stringify(filterNonNull(data), {arrayFormat: 'comma'})}`\n}\n\n\nexport function QueryUrl(url){\n    return qs.parse(url, { ignoreQueryPrefix: true})\n}\n\n\nexport function Querys(url){\n    let query = qs.parse(url, { ignoreQueryPrefix: true})\n    query.token = query?.token?.replaceAll(' ', '+')\n    return query\n}\n\nexport function setToken(token) {\n    const expires = new Date();\n    expires.setDate(expires.getDate() + COOKIE_EXPIRES);\n    cookie.save('token', token.access_token, {path: '/', expires});\n    cookie.save('refresh', token.refresh_token, {path: '/'})\n}\n\nexport function RefreshToken() {\n    let token = cookie.load('admin_refresh');\n    if (token === 'undefined') {\n        return undefined;\n    }\n    return token;\n}\n\nexport function Token() {\n    let token = cookie.load('admin_token');\n    if (token === 'undefined') {\n        return undefined;\n    }\n\n    return token;\n}\n\nexport function removeToken() {\n    cookie.remove('admin_token', {path: '/'});\n    cookie.remove('admin_refresh', {path: '/'});\n}\n\nexport function getTokenObject() {\n    let token = Token();\n    if (token !== undefined) {\n        return {Authorization: token}\n    }\n}\n\nexport function formatNumber(value) {\n    let f = value.match(/\\d+/);\n    if (f) return f[0];\n    return '';\n}\n\nexport function timeToStr(time, format){\n    if (time){\n        return momentJalaali(time).format(format)\n    }\n    return \"\"\n}\n"]},"metadata":{},"sourceType":"module"}