{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL, PREFIX } from \"./constants\";\nimport { getTokenObject } from \"./utils\";\nexport const api = axios.create({\n  // baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  if (!config.headers.Authorization) {\n    let token = getTokenObject();\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token.Authorization}`;\n    }\n  } // refreshToken()\n\n\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => {\n  console.log(\"resp\", response);\n\n  if (response.status === 201) {\n    let responseMessage = response.data.message ? response.data.message : undefined;\n  }\n\n  return response;\n}, async function (error) {\n  // const originalRequest = error.config;\n  if (error.response.status === 401) {\n    window.location.href = `${PREFIX}/login`;\n  }\n\n  return Promise.reject(error);\n});","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/api.js"],"names":["axios","BASE_URL","PREFIX","getTokenObject","api","create","headers","interceptors","request","use","config","Authorization","token","error","Promise","reject","response","console","log","status","responseMessage","data","message","undefined","window","location","href"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,aAAjC;AAEA,SAASC,cAAT,QAA+B,SAA/B;AAGA,OAAO,MAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAE5B;AAEAC,EAAAA,OAAO,EAAE;AAEL,oBAAgB;AAFX;AAJmB,CAAb,CAAZ;AAYPF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6BC,MAAM,IAAI;AAEnC,MAAI,CAACA,MAAM,CAACJ,OAAP,CAAeK,aAApB,EAAmC;AAE/B,QAAIC,KAAK,GAAGT,cAAc,EAA1B;;AAEA,QAAIS,KAAJ,EAAW;AAEPF,MAAAA,MAAM,CAACJ,OAAP,CAAeK,aAAf,GAAgC,UAASC,KAAK,CAACD,aAAc,EAA7D;AAEH;AAEJ,GAZkC,CAcnC;;;AAEA,SAAOD,MAAP;AAEH,CAlBD,EAkBGG,KAAK,IAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAlBZ;AAqBAT,GAAG,CAACG,YAAJ,CAAiBS,QAAjB,CAA0BP,GAA1B,CAA+BO,QAAD,IAAc;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,QAAnB;;AACA,MAAIA,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAEzB,QAAIC,eAAe,GAAGJ,QAAQ,CAACK,IAAT,CAAcC,OAAd,GAAwBN,QAAQ,CAACK,IAAT,CAAcC,OAAtC,GAAgDC,SAAtE;AAEH;;AAED,SAAOP,QAAP;AAEH,CAVD,EAUG,gBAAgBH,KAAhB,EAAuB;AAEtB;AAEA,MAAIA,KAAK,CAACG,QAAN,CAAeG,MAAf,KAA0B,GAA9B,EAAmC;AAE/BK,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,GAAExB,MAAO,QAAjC;AAEH;;AAED,SAAOY,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AAEH,CAtBD","sourcesContent":["import axios from 'axios';\n\nimport { BASE_URL, PREFIX } from \"./constants\";\n\nimport { getTokenObject } from \"./utils\";\n\n\nexport const api = axios.create({\n\n    // baseURL: BASE_URL,\n\n    headers: {\n\n        'Content-Type': 'application/json'\n\n    },\n\n})\n\napi.interceptors.request.use(config => {\n\n    if (!config.headers.Authorization) {\n\n        let token = getTokenObject()\n\n        if (token) {\n\n            config.headers.Authorization = `Bearer ${token.Authorization}`;\n\n        }\n\n    }\n\n    // refreshToken()\n\n    return config;\n\n}, error => Promise.reject(error));\n\n\napi.interceptors.response.use((response) => {\n    console.log(\"resp\",response)\n    if (response.status === 201) {\n\n        let responseMessage = response.data.message ? response.data.message : undefined\n\n    }\n\n    return response\n\n}, async function (error) {\n\n    // const originalRequest = error.config;\n\n    if (error.response.status === 401) {\n\n        window.location.href = `${PREFIX}/login`\n\n    }\n\n    return Promise.reject(error);\n\n});\n\n"]},"metadata":{},"sourceType":"module"}