{"ast":null,"code":"var _jsxFileName = \"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/messages/newMessage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Field, Formik, Form } from \"formik\";\nimport { Grid, CircularProgress, Button, Checkbox, FormControlLabel, Select, MenuItem, withStyles } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport { USERS_LIST, IAM_APP, USER_SEND_MESSAGES } from \"../../utils/constants\";\nimport { useFetchApi } from '../../utils/hooks';\nimport { UrlQuery } from '../../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewMessage(props) {\n  _s();\n\n  var _data$items2;\n\n  let loginLoading = false;\n  const history = useHistory();\n  const [checked, setChecked] = React.useState(false);\n  const [selectUserName, setSelectUserName] = React.useState([]);\n  const BootstrapInput = withStyles(theme => ({\n    root: {\n      //   'label + &': {\n      //     marginTop: theme.spacing(3),\n      //   },\n      width: \"inherit !important\"\n    },\n    input: {\n      borderRadius: 4,\n      position: 'relative',\n      backgroundColor: 'white',\n      border: '1px solid #ced4da',\n      fontSize: 'initial',\n      padding: '5px 12px 5px 12px',\n      color: 'black',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      direction: \"rtl !important\",\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\"IranSans\"].join(','),\n      '&:focus': {\n        borderRadius: 4,\n        borderColor: '#80bdff',\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        backgroundColor: 'white'\n      }\n    }\n  }))(InputBase);\n  const [params, setParams] = React.useState({});\n  const [{\n    data,\n    isLoading,\n    hasError\n  }, doFetch] = useFetchApi(undefined, []);\n  const [{\n    data: submitMessage,\n    isLoading: submitMessageIsLoading,\n    hasError: submitMessageHasError\n  }, doFetchSubmit] = useFetchApi(undefined, []);\n\n  const handleSubmit = values => {\n    console.log(\"name\", values);\n    loginLoading = true;\n    let usersId = [];\n\n    if (values.toggle) {\n      var _data$items;\n\n      data === null || data === void 0 ? void 0 : (_data$items = data.items) === null || _data$items === void 0 ? void 0 : _data$items.map((item, index) => {\n        usersId.push(item.id);\n      });\n    }\n\n    let payload = {\n      \"message\": {\n        \"title\": values.title,\n        \"body\": values.body\n      },\n      \"users\": usersId.length !== 0 ? usersId : selectUserName\n    };\n    let payloads = {\n      \"message\": {\n        \"title\": \"string\",\n        \"body\": \"string\",\n        \"target_type\": \"person\"\n      },\n      \"users\": [6]\n    }; // doFetchSubmit(\"POST\", IAM_APP , USER_SEND_MESSAGES, payload )\n    // // .then(resp => history.push(\"/messages\"))\n    // history.push(\"/messages\")\n  }; // const handleSelectUsers = () => {\n  // }\n\n\n  React.useEffect(() => {\n    doFetch(\"GET\", IAM_APP, UrlQuery(USERS_LIST, { ...params\n    }));\n  }, [params]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content mt-5 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex w-25\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assests/drawer/Polygon.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font_title_name me-1\",\n          children: \"\\u0627\\u0631\\u0633\\u0627\\u0644 \\u067E\\u06CC\\u0627\\u0645 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"text-decoration-none\",\n        style: {\n          color: \"#10D078\"\n        },\n        to: '/messages',\n        children: [\"\\u0628\\u0627\\u0632\\u06AF\\u0634\\u062A \\u0628\\u0647 \\u062A\\u0627\\u0631\\u06CC\\u062E\\u0686\\u0647 \\u067E\\u06CC\\u0627\\u0645\\u200C\\u0647\\u0627 \", `->`, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          account_number: '',\n          title: '',\n          toggle: false\n        },\n        enableReinitialize: true // validate={this.validate}\n        ,\n        onSubmit: values => handleSubmit(values),\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flexGrow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              justify: \"space-between\",\n              className: \"p-3\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 5,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex w-100\",\n                  style: {\n                    maxHeight: \"34px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"text-end text-white ms-4\",\n                    style: {\n                      minWidth: \"90px\"\n                    },\n                    htmlFor: \"account_number\",\n                    children: \"\\u06A9\\u0627\\u0631\\u0628\\u0631\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    name: \"account_number\",\n                    value: selectUserName,\n                    input: /*#__PURE__*/_jsxDEV(BootstrapInput, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 101\n                    }, this),\n                    displayEmpty: true,\n                    onChange: e => setSelectUserName([e.target.value]),\n                    select: true,\n                    size: \"small\",\n                    children: data === null || data === void 0 ? void 0 : (_data$items2 = data.items) === null || _data$items2 === void 0 ? void 0 : _data$items2.map((item, index) => {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: item.id,\n                        children: [item.credentials.first_name, \" \", item.credentials.last_name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 56\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 5,\n                className: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    type: \"checkbox\",\n                    name: \"toggle\",\n                    className: \"ms-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"text-white me-0\",\n                    htmlFor: \"toggle\",\n                    children: \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628 \\u0647\\u0645\\u0647 \\u06A9\\u0627\\u0631\\u0628\\u0631\\u0627\\u0646\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              justify: \"space-between\",\n              className: \"p-3\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 5,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex w-100\",\n                  style: {\n                    maxHeight: \"34px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"text-end text-white fs-6 ms-4\",\n                    style: {\n                      minWidth: \"90px\"\n                    },\n                    htmlFor: \"title\",\n                    children: \"\\u0639\\u0646\\u0648\\u0627\\u0646 \\u067E\\u06CC\\u0627\\u0645\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    type: \"text\",\n                    name: \"title\",\n                    placeholder: \"\",\n                    required: true,\n                    className: \"form-control bg_input input_text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              justify: \"space-between\",\n              className: \"p-3\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: true,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex w-100\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"text-end text-white fs-6 ms-4\",\n                    style: {\n                      minWidth: \"90px\"\n                    },\n                    htmlFor: \"amount\",\n                    children: \"\\u0645\\u062A\\u0646 \\u067E\\u06CC\\u0627\\u0645\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    as: \"textarea\",\n                    name: \"body\",\n                    placeholder: \"\\u0645\\u062A\\u0646 \\u067E\\u06CC\\u0627\\u0645 \\u0631\\u0627 \\u0628\\u0646\\u0648\\u06CC\\u0633\\u06CC\\u062F\",\n                    required: true,\n                    className: \"form-control bg_input input_text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 pt-3 ms-5 ps-2 d-flex justify-content-end\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: loginLoading,\n                variant: \"contained\",\n                type: \"submit\",\n                color: \"primary\",\n                children: [\"\\u0627\\u0631\\u0633\\u0627\\u0644 \\u067E\\u06CC\\u0627\\u0645\", loginLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24,\n                  className: \"position-absolute\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 54\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewMessage, \"nBn5iEbZh60GB1mlQcxthIFThWo=\", false, function () {\n  return [useHistory, useFetchApi, useFetchApi];\n});\n\n_c = NewMessage;\nexport default NewMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMessage\");","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/messages/newMessage.js"],"names":["React","Link","useHistory","Field","Formik","Form","Grid","CircularProgress","Button","Checkbox","FormControlLabel","Select","MenuItem","withStyles","InputBase","USERS_LIST","IAM_APP","USER_SEND_MESSAGES","useFetchApi","UrlQuery","NewMessage","props","loginLoading","history","checked","setChecked","useState","selectUserName","setSelectUserName","BootstrapInput","theme","root","width","input","borderRadius","position","backgroundColor","border","fontSize","padding","color","transition","transitions","create","direction","fontFamily","join","borderColor","boxShadow","params","setParams","data","isLoading","hasError","doFetch","undefined","submitMessage","submitMessageIsLoading","submitMessageHasError","doFetchSubmit","handleSubmit","values","console","log","usersId","toggle","items","map","item","index","push","id","payload","title","body","length","payloads","useEffect","account_number","flexGrow","maxHeight","minWidth","e","target","value","credentials","first_name","last_name"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Link , useHistory } from \"react-router-dom\";\n\nimport { Field, Formik, Form } from \"formik\";\n\nimport { Grid, CircularProgress, Button, Checkbox, FormControlLabel, Select , MenuItem, withStyles } from '@material-ui/core';\n\nimport InputBase from '@material-ui/core/InputBase';\n\nimport { USERS_LIST , IAM_APP ,USER_SEND_MESSAGES} from \"../../utils/constants\"\n\nimport { useFetchApi } from '../../utils/hooks';\n\nimport { UrlQuery } from '../../utils/utils';\n\n\nfunction NewMessage(props) {\n\n\n\n    let loginLoading = false\n\n    const history = useHistory()\n\n    const [checked, setChecked] = React.useState(false)\n\n    const [selectUserName, setSelectUserName] = React.useState([])\n\n\n    const BootstrapInput = withStyles((theme) => ({\n\n        root: {\n\n            //   'label + &': {\n\n            //     marginTop: theme.spacing(3),\n\n            //   },\n            width: \"inherit !important\",\n\n\n        },\n\n        input: {\n\n            borderRadius: 4,\n\n            position: 'relative',\n\n            backgroundColor: 'white',\n\n            border: '1px solid #ced4da',\n\n            fontSize: 'initial',\n\n            padding: '5px 12px 5px 12px',\n\n            color: 'black',\n\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n\n            direction: \"rtl !important\",\n            // Use the system font instead of the default Roboto font.\n\n            fontFamily: [\n\n                \"IranSans\",\n\n            ].join(','),\n\n            '&:focus': {\n\n                borderRadius: 4,\n\n                borderColor: '#80bdff',\n\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n\n                backgroundColor: 'white'\n\n            },\n\n        },\n\n    }))(InputBase);\n\n\n    \n    \n    const [params, setParams] = React.useState({})\n    \n    const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    const [{ data:submitMessage, isLoading:submitMessageIsLoading, hasError:submitMessageHasError }, doFetchSubmit] = useFetchApi(undefined, [])\n    \n\n\n    const handleSubmit= (values) => {\n\n        console.log(\"name\",values)\n\n        loginLoading = true\n\n        let usersId = []\n\n        if (values.toggle) {\n            \n            data?.items?.map((item,index) => {\n            \n                usersId.push(item.id)\n    \n            })\n\n        }\n\n        let payload = {\n\n            \"message\": {\n\n                \"title\":values.title,\n\n                \"body\":values.body\n\n            },\n\n            \"users\": usersId.length !== 0 ? usersId : selectUserName\n\n        }\n        let payloads = {\n            \"message\": {\n              \"title\": \"string\",\n              \"body\": \"string\",\n              \"target_type\": \"person\"\n            },\n            \"users\": [\n              6\n            ]\n          }\n        \n\n        // doFetchSubmit(\"POST\", IAM_APP , USER_SEND_MESSAGES, payload )\n        \n        // // .then(resp => history.push(\"/messages\"))\n        // history.push(\"/messages\")\n    }\n  \n\n    // const handleSelectUsers = () => {\n\n\n    // }\n  \n    React.useEffect(() => {\n  \n      doFetch(\"GET\", IAM_APP , UrlQuery(USERS_LIST, {...params}) )\n  \n    }, [params])\n\n\n    return (\n\n        <div className=\"content mt-5 p-4\">\n\n            <div className=\"d-flex justify-content-between\">\n\n                <div className=\"d-flex w-25\">\n\n                    <img src=\"/assests/drawer/Polygon.svg\" />\n\n                    <p className=\"font_title_name me-1\">ارسال پیام </p>\n\n                </div>\n\n                <Link className=\"text-decoration-none\" style={{ color: \"#10D078\" }} to={'/messages'} >بازگشت به تاریخچه پیام‌ها {`->`} </Link>\n\n            </div>\n\n            <div className=\"mt-4\">\n\n                <Formik\n\n                    initialValues={{ account_number: '', title: '' ,toggle: false}}\n\n                    enableReinitialize={true}\n\n                // validate={this.validate}\n\n                onSubmit={values => handleSubmit(values)}\n\n                >\n\n                    <Form>\n\n                        <div style={{ flexGrow: 1 }} >\n\n                            <Grid container spacing={3} justify=\"space-between\" className=\"p-3\">\n\n                                <Grid item md={5}>\n\n                                    <div className=\"d-flex w-100\" style={{ maxHeight: \"34px\" }}>\n\n                                        <label className=\"text-end text-white ms-4\" style={{ minWidth: \"90px\" }} htmlFor=\"account_number\">کاربر</label>\n\n                                        {/* <Field\n\n                                            type=\"text\"\n\n                                            name=\"account_number\"\n\n                                            placeholder=\"\"\n\n                                            required\n\n                                            className=\"form-control bg_input input_text\"\n\n                                        /> */}\n\n                                        <Select name=\"account_number\" value={selectUserName} input={<BootstrapInput />} displayEmpty onChange={e =>  setSelectUserName([e.target.value]) } select size=\"small\">\n\n                                            {data?.items?.map((item,index) => {\n\n                                                return <MenuItem value={item.id}>{item.credentials.first_name} {item.credentials.last_name}</MenuItem>\n\n                                            })}\n\n                                        </Select>\n\n                                    </div>\n\n                                </Grid>\n\n                            </Grid>\n\n                            <Grid container >\n\n                                <Grid item md={1}></Grid>\n\n                                <Grid item md={5} className=\"\">\n\n                                    {/* <Checkbox label=\"انتخاب همه کاربران\" value={checked} size=\"small\" color=\"primary\" onClick={ _ => setChecked( state => !state) } /> */}\n\n                                    {/* <FormControlLabel\n\n                                        control={<Checkbox checked={checked} color=\"primary\" onChange={_ => {setChecked(state => !state)}} name=\"checkedA\" />}\n\n                                        label=\"انتخاب همه کاربران\"\n\n                                        className=\"text-white me-0\"\n\n                                    /> */}\n                                            <label>   \n                                                <Field type=\"checkbox\" name=\"toggle\" className=\"ms-2\" />\n\n                                                <label className=\"text-white me-0\" htmlFor=\"toggle\">انتخاب همه کاربران</label>\n                                                {/* {`${props.values.toggle}`} */}\n                                            </label>\n\n                                </Grid>\n\n                            </Grid>\n\n                            <Grid container spacing={3} justify=\"space-between\" className=\"p-3\">\n\n                                <Grid item md={5}>\n\n                                    <div className=\"d-flex w-100\" style={{ maxHeight: \"34px\" }}>\n\n                                        <label className=\"text-end text-white fs-6 ms-4\" style={{ minWidth: \"90px\" }} htmlFor=\"title\">عنوان پیام</label>\n\n                                        <Field\n\n                                            type=\"text\"\n\n                                            name=\"title\"\n\n                                            placeholder=\"\"\n\n                                            required\n\n                                            className=\"form-control bg_input input_text\"\n\n                                        />\n\n                                    </div>\n\n                                </Grid>\n\n                            </Grid>\n\n                            <Grid container spacing={3} justify=\"space-between\" className=\"p-3\">\n\n                                <Grid item md>\n\n                                    <div className=\"d-flex w-100\">\n\n                                        <label className=\"text-end text-white fs-6 ms-4\" style={{ minWidth: \"90px\" }} htmlFor=\"amount\">متن پیام</label>\n\n                                        <Field\n\n                                            as=\"textarea\"\n\n                                            name=\"body\"\n\n                                            placeholder=\"متن پیام را بنویسید\"\n\n                                            required\n\n                                            className=\"form-control bg_input input_text\"\n\n                                        />\n\n                                    </div>\n\n                                </Grid>\n\n                            </Grid>\n\n                            {/* { Boolean(hasError) && <p className=\"text-danger\">{hasError}</p> } */}\n\n                            <div className=\"mt-4 pt-3 ms-5 ps-2 d-flex justify-content-end\">\n\n                                <Button disabled={loginLoading} variant=\"contained\" type=\"submit\" color=\"primary\" >\n\n                                    ارسال پیام\n\n                                    {loginLoading && <CircularProgress size={24} className=\"position-absolute\" />}\n\n                                </Button>\n\n                            </div>\n\n                        </div>\n\n                    </Form>\n\n                </Formik>\n\n            </div>\n\n        </div>\n\n    )\n\n}\n\n\n\nexport default NewMessage\n\n"]},"metadata":{},"sourceType":"module"}