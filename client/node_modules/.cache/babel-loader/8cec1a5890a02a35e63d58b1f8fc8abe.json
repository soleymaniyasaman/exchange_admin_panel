{"ast":null,"code":"import _classCallCheck from\"/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import ReactDOM from'react-dom';import{jsx as _jsx}from\"react/jsx-runtime\";var loadScript=require('load-script');var defaultScriptUrl='https://cdn.ckeditor.com/4.6.2/standard/ckeditor.js';/**\n * @author codeslayer1\n * @description CKEditor component to render a CKEditor textarea with defined configs and all CKEditor events handler\n */var CKEditor=/*#__PURE__*/function(_React$Component){_inherits(CKEditor,_React$Component);var _super=_createSuper(CKEditor);function CKEditor(props){var _this;_classCallCheck(this,CKEditor);_this=_super.call(this,props);//Bindings\n_this.onLoad=_this.onLoad.bind(_assertThisInitialized(_this));//State initialization\n_this.state={isScriptLoaded:props.isScriptLoaded};return _this;}//load ckeditor script as soon as component mounts if not already loaded\n_createClass(CKEditor,[{key:\"componentDidMount\",value:function componentDidMount(){if(!this.state.isScriptLoaded){loadScript(this.props.scriptUrl,this.onLoad);}else{this.onLoad();}}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(props){var editor=this.editorInstance;if(editor&&editor.getData()!==props.content){editor.setData(props.content);}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.unmounting=true;}},{key:\"onLoad\",value:function onLoad(){if(this.unmounting)return;this.setState({isScriptLoaded:true});if(!window.CKEDITOR){console.error('CKEditor not found');return;}this.editorInstance=window.CKEDITOR.appendTo(ReactDOM.findDOMNode(this),this.props.config,this.props.content);//Register listener for custom events if any\nfor(var event in this.props.events){var eventHandler=this.props.events[event];this.editorInstance.on(event,eventHandler);}}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:this.props.activeClass});}}]);return CKEditor;}(React.Component);CKEditor.defaultProps={content:'',config:{},isScriptLoaded:false,scriptUrl:defaultScriptUrl,activeClass:'',events:{}};export default CKEditor;","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/classicEditor.js"],"names":["React","ReactDOM","loadScript","require","defaultScriptUrl","CKEditor","props","onLoad","bind","state","isScriptLoaded","scriptUrl","editor","editorInstance","getData","content","setData","unmounting","setState","window","CKEDITOR","console","error","appendTo","findDOMNode","config","event","events","eventHandler","on","activeClass","Component","defaultProps"],"mappings":"60BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,C,2CACA,GAAMC,CAAAA,UAAU,CAAGC,OAAO,CAAC,aAAD,CAA1B,CAEA,GAAIC,CAAAA,gBAAgB,CAAG,qDAAvB,CAEA;AACA;AACA;AACA,G,GACMC,CAAAA,Q,gHACJ,kBAAYC,KAAZ,CAAmB,0CACjB,uBAAMA,KAAN,EAEA;AACA,MAAKC,MAAL,CAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd,CAEA;AACA,MAAKC,KAAL,CAAa,CACXC,cAAc,CAAEJ,KAAK,CAACI,cADX,CAAb,CAPiB,aAUlB,CAED;sDACA,4BAAoB,CAClB,GAAI,CAAC,KAAKD,KAAL,CAAWC,cAAhB,CAAgC,CAC9BR,UAAU,CAAC,KAAKI,KAAL,CAAWK,SAAZ,CAAuB,KAAKJ,MAA5B,CAAV,CACD,CAFD,IAEO,CACL,KAAKA,MAAL,GACD,CACF,C,yCAED,mCAA0BD,KAA1B,CAAiC,CAC/B,GAAMM,CAAAA,MAAM,CAAG,KAAKC,cAApB,CACA,GAAID,MAAM,EAAIA,MAAM,CAACE,OAAP,KAAqBR,KAAK,CAACS,OAAzC,CAAkD,CAChDH,MAAM,CAACI,OAAP,CAAeV,KAAK,CAACS,OAArB,EACD,CACF,C,oCAED,+BAAuB,CACrB,KAAKE,UAAL,CAAkB,IAAlB,CACD,C,sBAED,iBAAS,CACP,GAAI,KAAKA,UAAT,CAAqB,OAErB,KAAKC,QAAL,CAAc,CACZR,cAAc,CAAE,IADJ,CAAd,EAIA,GAAI,CAACS,MAAM,CAACC,QAAZ,CAAsB,CACpBC,OAAO,CAACC,KAAR,CAAc,oBAAd,EACA,OACD,CAED,KAAKT,cAAL,CAAsBM,MAAM,CAACC,QAAP,CAAgBG,QAAhB,CACpBtB,QAAQ,CAACuB,WAAT,CAAqB,IAArB,CADoB,CAEpB,KAAKlB,KAAL,CAAWmB,MAFS,CAGpB,KAAKnB,KAAL,CAAWS,OAHS,CAAtB,CAMA;AACA,IAAK,GAAIW,CAAAA,KAAT,GAAkB,MAAKpB,KAAL,CAAWqB,MAA7B,CAAqC,CACnC,GAAIC,CAAAA,YAAY,CAAG,KAAKtB,KAAL,CAAWqB,MAAX,CAAkBD,KAAlB,CAAnB,CAEA,KAAKb,cAAL,CAAoBgB,EAApB,CAAuBH,KAAvB,CAA8BE,YAA9B,EACD,CACF,C,sBAED,iBAAS,CACP,mBAAO,YAAK,SAAS,CAAE,KAAKtB,KAAL,CAAWwB,WAA3B,EAAP,CACD,C,sBA7DoB9B,KAAK,CAAC+B,S,EAgE7B1B,QAAQ,CAAC2B,YAAT,CAAwB,CACtBjB,OAAO,CAAE,EADa,CAEtBU,MAAM,CAAE,EAFc,CAGtBf,cAAc,CAAE,KAHM,CAItBC,SAAS,CAAEP,gBAJW,CAKtB0B,WAAW,CAAE,EALS,CAMtBH,MAAM,CAAE,EANc,CAAxB,CAkBA,cAAetB,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nconst loadScript = require('load-script');\n\nvar defaultScriptUrl = 'https://cdn.ckeditor.com/4.6.2/standard/ckeditor.js';\n\n/**\n * @author codeslayer1\n * @description CKEditor component to render a CKEditor textarea with defined configs and all CKEditor events handler\n */\nclass CKEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    //Bindings\n    this.onLoad = this.onLoad.bind(this);\n\n    //State initialization\n    this.state = {\n      isScriptLoaded: props.isScriptLoaded\n    };\n  }\n\n  //load ckeditor script as soon as component mounts if not already loaded\n  componentDidMount() {\n    if (!this.state.isScriptLoaded) {\n      loadScript(this.props.scriptUrl, this.onLoad);\n    } else {\n      this.onLoad();\n    }\n  }\n\n  componentWillReceiveProps(props) {\n    const editor = this.editorInstance;\n    if (editor && editor.getData() !== props.content) {\n      editor.setData(props.content);\n    }\n  }\n\n  componentWillUnmount() {\n    this.unmounting = true;\n  }\n\n  onLoad() {\n    if (this.unmounting) return;\n\n    this.setState({\n      isScriptLoaded: true\n    });\n\n    if (!window.CKEDITOR) {\n      console.error('CKEditor not found');\n      return;\n    }\n\n    this.editorInstance = window.CKEDITOR.appendTo(\n      ReactDOM.findDOMNode(this),\n      this.props.config,\n      this.props.content\n    );\n\n    //Register listener for custom events if any\n    for (var event in this.props.events) {\n      var eventHandler = this.props.events[event];\n\n      this.editorInstance.on(event, eventHandler);\n    }\n  }\n\n  render() {\n    return <div className={this.props.activeClass} />;\n  }\n}\n\nCKEditor.defaultProps = {\n  content: '',\n  config: {},\n  isScriptLoaded: false,\n  scriptUrl: defaultScriptUrl,\n  activeClass: '',\n  events: {}\n};\n\nCKEditor.propTypes = {\n  content: PropTypes.any,\n  config: PropTypes.object,\n  isScriptLoaded: PropTypes.bool,\n  scriptUrl: PropTypes.string,\n  activeClass: PropTypes.string,\n  events: PropTypes.object\n};\n\nexport default CKEditor;"]},"metadata":{},"sourceType":"module"}