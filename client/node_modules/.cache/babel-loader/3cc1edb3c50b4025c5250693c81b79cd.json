{"ast":null,"code":"import { RenderType } from '../base/enum';\nimport { CLS_HR_SEPARATOR } from '../base/classes';\nimport * as events from '../base/constant';\nimport { getTooltipText, toObjectLowerCase } from '../base/util';\nimport { tools, templateItems } from '../models/items';\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\n/**\n * `Toolbar` module is used to handle Toolbar actions.\n */\n\nvar BaseToolbar =\n/** @class */\nfunction () {\n  function BaseToolbar(parent, serviceLocator) {\n    this.tools = {};\n    this.parent = parent;\n    this.locator = serviceLocator;\n    this.renderFactory = this.locator.getService('rendererFactory');\n    this.addEventListener();\n\n    if (this.parent.toolbarSettings && Object.keys(this.parent.toolbarSettings.itemConfigs).length > 0) {\n      extend(this.tools, tools, toObjectLowerCase(this.parent.toolbarSettings.itemConfigs), true);\n    } else {\n      this.tools = tools;\n    }\n  }\n\n  BaseToolbar.prototype.addEventListener = function () {\n    this.parent.on(events.rtlMode, this.setRtl, this);\n    this.parent.on(events.destroy, this.removeEventListener, this);\n  };\n\n  BaseToolbar.prototype.removeEventListener = function () {\n    this.parent.off(events.rtlMode, this.setRtl);\n    this.parent.off(events.destroy, this.removeEventListener);\n  };\n\n  BaseToolbar.prototype.setRtl = function (args) {\n    if (!isNullOrUndefined(this.toolbarObj)) {\n      this.toolbarObj.setProperties({\n        enableRtl: args.enableRtl\n      });\n    }\n  };\n\n  BaseToolbar.prototype.getClass = function (item) {\n    var classes;\n\n    switch (item) {\n      case 'fontsize':\n        classes = 'e-rte-inline-size-template';\n        break;\n\n      case 'fontcolor':\n      case 'backgroundcolor':\n        classes = 'e-rte-inline-color-template';\n        break;\n\n      default:\n        classes = 'e-rte-inline-template';\n        break;\n    }\n\n    return classes;\n  };\n\n  BaseToolbar.prototype.getTemplateObject = function (itemStr, container) {\n    var tagName;\n\n    switch (itemStr) {\n      case 'fontcolor':\n      case 'backgroundcolor':\n      case 'numberformatlist':\n      case 'bulletformatlist':\n        tagName = 'span';\n        break;\n\n      default:\n        tagName = 'button';\n        break;\n    }\n\n    return {\n      command: this.tools[itemStr.toLocaleLowerCase()].command,\n      subCommand: this.tools[itemStr.toLocaleLowerCase()].subCommand,\n      template: this.parent.createElement(tagName, {\n        id: this.parent.getID() + '_' + container + '_' + this.tools[itemStr.toLocaleLowerCase()].id\n      }).outerHTML,\n      cssClass: this.parent.inlineMode.enable ? this.getClass(itemStr) : '',\n      tooltipText: getTooltipText(itemStr, this.locator)\n    };\n  };\n  /**\n   * getObject method\n   *\n   * @param {string} item - specifies the string value\n   * @param {string} container - specifies the value of string\n   * @returns {IToolbarItemModel} - returns the model element\n   * @hidden\n    */\n\n\n  BaseToolbar.prototype.getObject = function (item, container) {\n    var itemStr = item.toLowerCase();\n\n    if (templateItems.indexOf(itemStr) !== -1) {\n      return this.getTemplateObject(itemStr, container);\n    } else {\n      switch (itemStr) {\n        case '|':\n          return {\n            type: 'Separator'\n          };\n\n        case '-':\n          return {\n            type: 'Separator',\n            cssClass: CLS_HR_SEPARATOR\n          };\n\n        default:\n          return {\n            id: this.parent.getID() + '_' + container + '_' + this.tools[itemStr.toLocaleLowerCase()].id,\n            prefixIcon: this.tools[itemStr.toLocaleLowerCase()].icon,\n            tooltipText: getTooltipText(itemStr, this.locator),\n            command: this.tools[itemStr.toLocaleLowerCase()].command,\n            subCommand: this.tools[itemStr.toLocaleLowerCase()].subCommand\n          };\n      }\n    }\n  };\n  /**\n   * @param {string} tbItems - specifies the string value\n   * @param {string} container - specifies the container value\n   * @returns {ItemModel} - retunrs the model element\n   * @hidden\n    */\n\n\n  BaseToolbar.prototype.getItems = function (tbItems, container) {\n    var _this = this;\n\n    if (this.parent.toolbarSettings.items.length < 1) {\n      return [];\n    }\n\n    var items = [];\n\n    var _loop_1 = function (item) {\n      switch (typeof item) {\n        case 'string':\n          items.push(this_1.getObject(item, container));\n          break;\n\n        default:\n          if (!isNullOrUndefined(item.click)) {\n            var proxy_1 = item;\n            var callback_1 = proxy_1.click;\n\n            proxy_1.click = function () {\n              if (proxy_1.undo && _this.parent.formatter.getUndoRedoStack().length === 0) {\n                _this.parent.formatter.saveData();\n              }\n\n              callback_1.call(_this);\n\n              if (_this.parent.formatter.getUndoRedoStack()[_this.parent.formatter.getUndoRedoStack().length - 1].text.trim() === _this.parent.inputElement.innerHTML.trim()) {\n                return;\n              }\n\n              if (proxy_1.undo) {\n                _this.parent.formatter.saveData();\n              }\n            };\n          }\n\n          items.push(item);\n      }\n    };\n\n    var this_1 = this;\n\n    for (var _i = 0, tbItems_1 = tbItems; _i < tbItems_1.length; _i++) {\n      var item = tbItems_1[_i];\n\n      _loop_1(item);\n    }\n\n    return items;\n  };\n\n  BaseToolbar.prototype.getToolbarOptions = function (args) {\n    return {\n      target: args.target,\n      rteToolbarObj: this,\n      items: this.getItems(args.items, args.container),\n      overflowMode: args.mode,\n      enablePersistence: this.parent.enablePersistence,\n      enableRtl: this.parent.enableRtl\n    };\n  };\n  /**\n   * render method\n   *\n   * @param {IToolbarRenderOptions} args - specifies the toolbar options\n   * @returns {void}\n   * @hidden\n    */\n\n\n  BaseToolbar.prototype.render = function (args) {\n    this.toolbarRenderer = this.renderFactory.getRenderer(RenderType.Toolbar);\n    this.toolbarRenderer.renderToolbar(this.getToolbarOptions(args));\n  };\n\n  return BaseToolbar;\n}();\n\nexport { BaseToolbar };","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/actions/base-toolbar.js"],"names":["RenderType","CLS_HR_SEPARATOR","events","getTooltipText","toObjectLowerCase","tools","templateItems","isNullOrUndefined","extend","BaseToolbar","parent","serviceLocator","locator","renderFactory","getService","addEventListener","toolbarSettings","Object","keys","itemConfigs","length","prototype","on","rtlMode","setRtl","destroy","removeEventListener","off","args","toolbarObj","setProperties","enableRtl","getClass","item","classes","getTemplateObject","itemStr","container","tagName","command","toLocaleLowerCase","subCommand","template","createElement","id","getID","outerHTML","cssClass","inlineMode","enable","tooltipText","getObject","toLowerCase","indexOf","type","prefixIcon","icon","getItems","tbItems","_this","items","_loop_1","push","this_1","click","proxy_1","callback_1","undo","formatter","getUndoRedoStack","saveData","call","text","trim","inputElement","innerHTML","_i","tbItems_1","getToolbarOptions","target","rteToolbarObj","overflowMode","mode","enablePersistence","render","toolbarRenderer","getRenderer","Toolbar","renderToolbar"],"mappings":"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","sourcesContent":["import { RenderType } from '../base/enum';\nimport { CLS_HR_SEPARATOR } from '../base/classes';\nimport * as events from '../base/constant';\nimport { getTooltipText, toObjectLowerCase } from '../base/util';\nimport { tools, templateItems } from '../models/items';\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\n/**\n * `Toolbar` module is used to handle Toolbar actions.\n */\nvar BaseToolbar = /** @class */ (function () {\n    function BaseToolbar(parent, serviceLocator) {\n        this.tools = {};\n        this.parent = parent;\n        this.locator = serviceLocator;\n        this.renderFactory = this.locator.getService('rendererFactory');\n        this.addEventListener();\n        if (this.parent.toolbarSettings && Object.keys(this.parent.toolbarSettings.itemConfigs).length > 0) {\n            extend(this.tools, tools, toObjectLowerCase(this.parent.toolbarSettings.itemConfigs), true);\n        }\n        else {\n            this.tools = tools;\n        }\n    }\n    BaseToolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rtlMode, this.setRtl, this);\n        this.parent.on(events.destroy, this.removeEventListener, this);\n    };\n    BaseToolbar.prototype.removeEventListener = function () {\n        this.parent.off(events.rtlMode, this.setRtl);\n        this.parent.off(events.destroy, this.removeEventListener);\n    };\n    BaseToolbar.prototype.setRtl = function (args) {\n        if (!isNullOrUndefined(this.toolbarObj)) {\n            this.toolbarObj.setProperties({ enableRtl: args.enableRtl });\n        }\n    };\n    BaseToolbar.prototype.getClass = function (item) {\n        var classes;\n        switch (item) {\n            case 'fontsize':\n                classes = 'e-rte-inline-size-template';\n                break;\n            case 'fontcolor':\n            case 'backgroundcolor':\n                classes = 'e-rte-inline-color-template';\n                break;\n            default:\n                classes = 'e-rte-inline-template';\n                break;\n        }\n        return classes;\n    };\n    BaseToolbar.prototype.getTemplateObject = function (itemStr, container) {\n        var tagName;\n        switch (itemStr) {\n            case 'fontcolor':\n            case 'backgroundcolor':\n            case 'numberformatlist':\n            case 'bulletformatlist':\n                tagName = 'span';\n                break;\n            default:\n                tagName = 'button';\n                break;\n        }\n        return {\n            command: this.tools[itemStr.toLocaleLowerCase()].command,\n            subCommand: this.tools[itemStr.toLocaleLowerCase()].subCommand,\n            template: this.parent.createElement(tagName, {\n                id: this.parent.getID() + '_' + container\n                    + '_' + this.tools[itemStr.toLocaleLowerCase()].id\n            }).outerHTML,\n            cssClass: this.parent.inlineMode.enable ? this.getClass(itemStr) : '',\n            tooltipText: getTooltipText(itemStr, this.locator)\n        };\n    };\n    /**\n     * getObject method\n     *\n     * @param {string} item - specifies the string value\n     * @param {string} container - specifies the value of string\n     * @returns {IToolbarItemModel} - returns the model element\n     * @hidden\n\n     */\n    BaseToolbar.prototype.getObject = function (item, container) {\n        var itemStr = item.toLowerCase();\n        if (templateItems.indexOf(itemStr) !== -1) {\n            return this.getTemplateObject(itemStr, container);\n        }\n        else {\n            switch (itemStr) {\n                case '|':\n                    return { type: 'Separator' };\n                case '-':\n                    return { type: 'Separator', cssClass: CLS_HR_SEPARATOR };\n                default:\n                    return {\n                        id: this.parent.getID() + '_' + container + '_' + this.tools[itemStr.toLocaleLowerCase()].id,\n                        prefixIcon: this.tools[itemStr.toLocaleLowerCase()].icon,\n                        tooltipText: getTooltipText(itemStr, this.locator),\n                        command: this.tools[itemStr.toLocaleLowerCase()].command,\n                        subCommand: this.tools[itemStr.toLocaleLowerCase()].subCommand\n                    };\n            }\n        }\n    };\n    /**\n     * @param {string} tbItems - specifies the string value\n     * @param {string} container - specifies the container value\n     * @returns {ItemModel} - retunrs the model element\n     * @hidden\n\n     */\n    BaseToolbar.prototype.getItems = function (tbItems, container) {\n        var _this = this;\n        if (this.parent.toolbarSettings.items.length < 1) {\n            return [];\n        }\n        var items = [];\n        var _loop_1 = function (item) {\n            switch (typeof item) {\n                case 'string':\n                    items.push(this_1.getObject(item, container));\n                    break;\n                default:\n                    if (!isNullOrUndefined(item.click)) {\n                        var proxy_1 = item;\n                        var callback_1 = proxy_1.click;\n                        proxy_1.click = function () {\n                            if (proxy_1.undo && _this.parent.formatter.getUndoRedoStack().length === 0) {\n                                _this.parent.formatter.saveData();\n                            }\n                            callback_1.call(_this);\n                            if ((_this.parent.formatter.getUndoRedoStack()[_this.parent.formatter.getUndoRedoStack().length - 1].text.trim()\n                                === _this.parent.inputElement.innerHTML.trim())) {\n                                return;\n                            }\n                            if (proxy_1.undo) {\n                                _this.parent.formatter.saveData();\n                            }\n                        };\n                    }\n                    items.push(item);\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, tbItems_1 = tbItems; _i < tbItems_1.length; _i++) {\n            var item = tbItems_1[_i];\n            _loop_1(item);\n        }\n        return items;\n    };\n    BaseToolbar.prototype.getToolbarOptions = function (args) {\n        return {\n            target: args.target,\n            rteToolbarObj: this,\n            items: this.getItems(args.items, args.container),\n            overflowMode: args.mode,\n            enablePersistence: this.parent.enablePersistence,\n            enableRtl: this.parent.enableRtl\n        };\n    };\n    /**\n     * render method\n     *\n     * @param {IToolbarRenderOptions} args - specifies the toolbar options\n     * @returns {void}\n     * @hidden\n\n     */\n    BaseToolbar.prototype.render = function (args) {\n        this.toolbarRenderer = this.renderFactory.getRenderer(RenderType.Toolbar);\n        this.toolbarRenderer.renderToolbar(this.getToolbarOptions(args));\n    };\n    return BaseToolbar;\n}());\nexport { BaseToolbar };\n"]},"metadata":{},"sourceType":"module"}