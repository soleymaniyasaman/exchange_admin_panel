{"ast":null,"code":"var _jsxFileName = \"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/users/signUpUsers.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { IAM_APP, REPORTS_USERS } from '../../../utils/constants';\nimport { useFetchApi } from \"../../../utils/hooks\";\nimport { UrlQuery } from \"../../../utils/utils\"; // const data = [\n//   {\n//     date: \"1399-01\",\n//     uv: 4000,\n//     pv: 2400,\n//     amt: 2400\n//   },\n//   {\n//     date: \"1399-02\",\n//     uv: 3000,\n//     pv: 1398,\n//     amt: 2210\n//   },\n//   {\n//     date: \"1399-03\",\n//     uv: 2000,\n//     pv: 9800,\n//     amt: 2290\n//   },\n//   {\n//     date: \"1399-04\",\n//     uv: 2780,\n//     pv: 3908,\n//     amt: 2000\n//   },\n//   {\n//     date: \"1399-05\",\n//     uv: 1890,\n//     pv: 4800,\n//     amt: 2181\n//   },\n//   {\n//     date: \"1399-06\",\n//     uv: 2390,\n//     pv: 3800,\n//     amt: 2500\n//   },\n//   {\n//     date: \"1399-07\",\n//     uv: 3490,\n//     pv: 4300,\n//     amt: 2100\n//   },\n//   {\n//     date: \"1399-08\",\n//     uv: 4000,\n//     pv: 2400,\n//     amt: 2400\n//   },\n//   {\n//     date: \"1399-09\",\n//     uv: 3000,\n//     pv: 1398,\n//     amt: 2210\n//   },\n//   {\n//     date: \"1399-10\",\n//     uv: 2000,\n//     pv: 9800,\n//     amt: 2290\n//   },\n//   {\n//     date: \"1399-11\",\n//     uv: 2780,\n//     pv: 3908,\n//     amt: 2000\n//   },\n//   {\n//     date: \"1399-12\",\n//     uv: 1890,\n//     pv: 4800,\n//     amt: 2181\n//   }\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst monthTickFormatter = tick => {\n  const date = new Date(tick);\n  return date.getMonth() + 1;\n}; // const renderQuarterTick = (tickProps) => {\n//   const { x, y, payload } = tickProps;\n//   const { value, offset } = payload;\n//   const date = new Date(value);\n//   const month = date.getMonth();\n//   const quarterNo = Math.floor(month / 3) + 1;\n//   if (month % 3 === 1) {\n//     return <text x={x} y={y - 4} textAnchor=\"middle\">{`Q${quarterNo}`}</text>;\n//   }\n//   const isLast = month === 11;\n//   if (month % 3 === 0 || isLast) {\n//     const pathX = Math.floor(isLast ? x + offset : x - offset) + 0.5;\n//     return <path d={`M${pathX},${y - 4}v${-35}`} stroke=\"red\" />;\n//   }\n//   return null;\n// };\n\n\nexport default function SignUpUsers({\n  type\n}) {\n  _s();\n\n  const [params, setParams] = React.useState({\n    period: {},\n    unique: {}\n  });\n  const [{\n    data,\n    isLoading,\n    hasError\n  }, doFetch] = useFetchApi(undefined, []); // const [type, setType] = React.useState();\n\n  React.useEffect(() => {\n    doFetch(\"GET\", IAM_APP, UrlQuery(REPORTS_USERS(type), { ...params\n    }));\n  }, [params]);\n\n  for (var prop in data) {\n    console.log(prop + ':' + person[prop]);\n  }\n\n  console.log(\"signup\", data);\n  return /*#__PURE__*/_jsxDEV(BarChart, {\n    width: 730,\n    height: 300,\n    data: data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Legend, {\n      align: \"right\",\n      verticalAlign: \"top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"2 2\",\n      vertical: false,\n      horizontal: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"date\",\n      tickFormatter: monthTickFormatter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"date\",\n      axisLine: false,\n      tickLine: false,\n      interval: 0 // tick={renderQuarterTick}\n      ,\n      height: 1,\n      scale: \"band\",\n      xAxisId: \"quarter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      dataKey: \"pv\",\n      fill: \"#8884d8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      dataKey: \"uv\",\n      fill: \"#82ca9d\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpUsers, \"9drugLvTTwcFJGPAgYMD+K+AJEE=\", false, function () {\n  return [useFetchApi];\n});\n\n_c = SignUpUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpUsers\");","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/users/signUpUsers.js"],"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","IAM_APP","REPORTS_USERS","useFetchApi","UrlQuery","monthTickFormatter","tick","date","Date","getMonth","SignUpUsers","type","params","setParams","useState","period","unique","data","isLoading","hasError","doFetch","undefined","useEffect","prop","console","log","person","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\nimport { IAM_APP, REPORTS_USERS } from '../../../utils/constants';\nimport { useFetchApi } from \"../../../utils/hooks\";\nimport { UrlQuery } from \"../../../utils/utils\";\n\n\n// const data = [\n//   {\n//     date: \"1399-01\",\n//     uv: 4000,\n//     pv: 2400,\n//     amt: 2400\n//   },\n//   {\n//     date: \"1399-02\",\n//     uv: 3000,\n//     pv: 1398,\n//     amt: 2210\n//   },\n//   {\n//     date: \"1399-03\",\n//     uv: 2000,\n//     pv: 9800,\n//     amt: 2290\n//   },\n//   {\n//     date: \"1399-04\",\n//     uv: 2780,\n//     pv: 3908,\n//     amt: 2000\n//   },\n//   {\n//     date: \"1399-05\",\n//     uv: 1890,\n//     pv: 4800,\n//     amt: 2181\n//   },\n//   {\n//     date: \"1399-06\",\n//     uv: 2390,\n//     pv: 3800,\n//     amt: 2500\n//   },\n//   {\n//     date: \"1399-07\",\n//     uv: 3490,\n//     pv: 4300,\n//     amt: 2100\n//   },\n//   {\n//     date: \"1399-08\",\n//     uv: 4000,\n//     pv: 2400,\n//     amt: 2400\n//   },\n//   {\n//     date: \"1399-09\",\n//     uv: 3000,\n//     pv: 1398,\n//     amt: 2210\n//   },\n//   {\n//     date: \"1399-10\",\n//     uv: 2000,\n//     pv: 9800,\n//     amt: 2290\n//   },\n//   {\n//     date: \"1399-11\",\n//     uv: 2780,\n//     pv: 3908,\n//     amt: 2000\n//   },\n//   {\n//     date: \"1399-12\",\n//     uv: 1890,\n//     pv: 4800,\n//     amt: 2181\n//   }\n// ];\n\nconst monthTickFormatter = (tick) => {\n  const date = new Date(tick);\n\n  return date.getMonth() + 1;\n};\n\n// const renderQuarterTick = (tickProps) => {\n//   const { x, y, payload } = tickProps;\n//   const { value, offset } = payload;\n//   const date = new Date(value);\n//   const month = date.getMonth();\n//   const quarterNo = Math.floor(month / 3) + 1;\n\n//   if (month % 3 === 1) {\n//     return <text x={x} y={y - 4} textAnchor=\"middle\">{`Q${quarterNo}`}</text>;\n//   }\n\n//   const isLast = month === 11;\n\n//   if (month % 3 === 0 || isLast) {\n//     const pathX = Math.floor(isLast ? x + offset : x - offset) + 0.5;\n\n//     return <path d={`M${pathX},${y - 4}v${-35}`} stroke=\"red\" />;\n//   }\n//   return null;\n// };\n\nexport default function SignUpUsers({ type }) {\n  const [params, setParams] = React.useState({ period: {}, unique: {} });\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, []);\n  // const [type, setType] = React.useState();\n\n  React.useEffect(() => {\n    doFetch(\"GET\", IAM_APP, UrlQuery(REPORTS_USERS(type), { ...params }))\n  }, [params])\n\n\n  for (var prop in data) {\n    console.log(prop + ':' + person[prop]);\n  }\n\n  console.log(\"signup\", data);\n  return (\n    <BarChart\n      width={730}\n      height={300}\n      data={data}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      }}\n    >\n      <Legend align=\"right\" verticalAlign=\"top\" />\n      <CartesianGrid strokeDasharray=\"2 2\" vertical={false} horizontal={true} />\n      <XAxis dataKey=\"date\" tickFormatter={monthTickFormatter} />\n      <XAxis\n        dataKey=\"date\"\n        axisLine={false}\n        tickLine={false}\n        interval={0}\n        // tick={renderQuarterTick}\n        height={1}\n        scale=\"band\"\n        xAxisId=\"quarter\"\n      />\n      <YAxis />\n      <Tooltip />\n      <Bar dataKey=\"pv\" fill=\"#8884d8\" />\n      <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n    </BarChart>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}