{"ast":null,"code":"var _jsxFileName = \"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/roleManage/roleDataGrid/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, IconButton } from '@material-ui/core';\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\nimport { Pagination } from '@material-ui/lab';\nimport { Edit, Delete } from '@material-ui/icons';\nimport { useFetchApi } from \"../../utils/hooks\";\nimport { USERS_TRANSACTION_HISTORY } from '../../utils/constants';\nimport { UrlQuery } from '../../utils/utils';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Filters from './filters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    // display: 'flex',\n    margin: '0 auto'\n  }\n});\n\nfunction CustomPagination() {\n  _s();\n\n  const {\n    state,\n    apiRef\n  } = useGridSlotComponentProps();\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Pagination, {\n    className: classes.root,\n    shape: \"rounded\",\n    color: \"primary\" // variant=\"contained\"\n    ,\n    count: state.pagination.pageCount,\n    page: state.pagination.page + 1,\n    onChange: (event, value) => apiRef.current.setPage(value - 1)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomPagination, \"gf2qYnidDJcn0QA0NABAMUoYHe0=\", false, function () {\n  return [useGridSlotComponentProps, useStyles];\n});\n\n_c = CustomPagination;\nconst rows = [{\n  id: 1,\n  tracking_code: \"412515\",\n  owner_id: \"fjasfkljas\",\n  national_code: \"55457575\",\n  origin_wallet: \"btc\",\n  quantity: \"2.3\",\n  dest_wallet: \"\",\n  action: \"approve\",\n  status: \"in_progress\"\n}, {\n  id: 2,\n  tracking_code: \"412515\",\n  owner_id: \"fjasfkljas\",\n  national_code: \"55457575\",\n  origin_wallet: \"btc\",\n  quantity: \"2.3\",\n  dest_wallet: \"\",\n  action: \"approve\",\n  status: \"in_progress\"\n}, {\n  id: 3,\n  tracking_code: \"412515\",\n  owner_id: \"fjasfkljas\",\n  national_code: \"55457575\",\n  origin_wallet: \"btc\",\n  quantity: \"2.3\",\n  dest_wallet: \"\",\n  action: \"approve\",\n  status: \"in_progress\"\n}];\n\nfunction RoleDataGrid(props) {\n  _s2();\n\n  const history = useHistory();\n  const columns = [{\n    field: 'id',\n    headerName: 'شماره',\n    flex: 1,\n    type: 'string',\n    sortable: false,\n    headerClassName: 'grid-header',\n    headerAlign: 'center',\n    align: 'center' // renderCell: (values) => `${values.row?.tracking_code.slice(0, 8)}`\n\n  }, {\n    field: 'owner_id',\n    headerName: 'عنوان امتیاز',\n    // description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    align: 'center',\n    flex: 1,\n    headerClassName: 'grid-header',\n    headerAlign: 'center',\n    editable: true\n  }, {\n    field: 'quantity',\n    headerName: 'مقدار امتیاز',\n    // description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    align: 'center',\n    flex: 2,\n    headerClassName: 'grid-header',\n    headerAlign: 'center',\n    editable: true,\n    valueGetter: values => values.value + \"  امتیاز  \"\n  }, {\n    field: 'created_at',\n    headerName: 'ویرایش',\n    // description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    align: 'center',\n    flex: 1.5,\n    headerClassName: 'grid-header',\n    headerAlign: 'center',\n    renderCell: values => /*#__PURE__*/_jsxDEV(IconButton, {\n      variant: \"outlined\",\n      size: \"small\",\n      color: \"secondary\",\n      onClick: () => {},\n      small: true,\n      className: \"ms-4 bg-white\",\n      children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 131\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this)\n  }, {\n    field: 'status',\n    headerName: 'حذف',\n    // description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    align: 'center',\n    flex: 1,\n    headerClassName: 'grid-header',\n    headerAlign: 'center',\n    renderCell: values => /*#__PURE__*/_jsxDEV(IconButton, {\n      variant: \"outlined\",\n      size: \"small\",\n      onClick: () => {},\n      className: \"ms-2 text-danger bg-white\",\n      children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 139\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 37\n    }, this)\n  }];\n  const [params, setParams] = React.useState({\n    order: \"-updated_at\",\n    size: 10,\n    page: 0\n  });\n  const [{\n    data,\n    isLoading,\n    hasError\n  }, doFetch] = useFetchApi(undefined, []);\n  React.useEffect(() => {// doFetch(\"GET\", UrlQuery(USERS_TRANSACTION_HISTORY, {...params}) )\n  }, [params]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/drawer/Polygon.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font_title_name me-1\",\n          style: {\n            minWidth: \"150px\"\n          },\n          children: \"\\u0645\\u062F\\u06CC\\u0631\\u06CC\\u062A \\u0627\\u0645\\u062A\\u06CC\\u0627\\u0632\\u0647\\u0627\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Filters, {\n        params: params,\n        setParams: setParams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex px-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1,\n          width: \"100%\",\n          height: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          style: {\n            border: 0\n          },\n          autoHeight: true // rows={data?.items ?? []}\n          ,\n          rows: rows,\n          loading: isLoading,\n          columns: columns,\n          getRowClassName: params => 'grid-content',\n          headerHeight: 50,\n          rowHeight: 52,\n          isRowSelectable: false,\n          components: {\n            Pagination: CustomPagination\n          },\n          pageSize: 10,\n          rowCount: data === null || data === void 0 ? void 0 : data.total,\n          paginationMode: \"server\",\n          onPageChange: param => doFetch(\"GET\", UrlQuery(USERS_TRANSACTION_HISTORY, { ...params,\n            page: param\n          })),\n          disableSelectionOnClick: true,\n          disableColumnMenu: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(RoleDataGrid, \"/Dw9A418rU8jIXSEzY8EPEr1HMo=\", false, function () {\n  return [useHistory, useFetchApi];\n});\n\n_c2 = RoleDataGrid;\nexport default RoleDataGrid;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomPagination\");\n$RefreshReg$(_c2, \"RoleDataGrid\");","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/roleManage/roleDataGrid/index.js"],"names":["React","makeStyles","Button","IconButton","DataGrid","useGridSlotComponentProps","Pagination","Edit","Delete","useFetchApi","USERS_TRANSACTION_HISTORY","UrlQuery","useHistory","useParams","Filters","useStyles","root","margin","CustomPagination","state","apiRef","classes","pagination","pageCount","page","event","value","current","setPage","rows","id","tracking_code","owner_id","national_code","origin_wallet","quantity","dest_wallet","action","status","RoleDataGrid","props","history","columns","field","headerName","flex","type","sortable","headerClassName","headerAlign","align","editable","valueGetter","values","renderCell","params","setParams","useState","order","size","data","isLoading","hasError","doFetch","undefined","useEffect","minWidth","flexGrow","width","height","border","total","param"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, IconButton } from '@material-ui/core';\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\nimport { Pagination } from '@material-ui/lab';\nimport { Edit, Delete } from '@material-ui/icons';\nimport { useFetchApi } from \"../../utils/hooks\";\nimport { USERS_TRANSACTION_HISTORY } from '../../utils/constants';\nimport { UrlQuery } from '../../utils/utils';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Filters from './filters';\n\n\nconst useStyles = makeStyles({\n    root: {\n        // display: 'flex',\n        margin: '0 auto',\n    },\n});\n\nfunction CustomPagination() {\n    const { state, apiRef } = useGridSlotComponentProps();\n    const classes = useStyles();\n\n    return (\n        <Pagination\n            className={classes.root}\n            shape=\"rounded\"\n            color=\"primary\"\n            // variant=\"contained\"\n            count={state.pagination.pageCount}\n            page={state.pagination.page + 1}\n            onChange={(event, value) => apiRef.current.setPage(value - 1)}\n        />\n    );\n}\n\nconst rows = [\n    {\n        id: 1,\n        tracking_code: \"412515\",\n        owner_id: \"fjasfkljas\",\n        national_code: \"55457575\",\n        origin_wallet: \"btc\",\n        quantity: \"2.3\",\n        dest_wallet: \"\",\n        action: \"approve\",\n        status: \"in_progress\",\n    },\n    {\n        id: 2,\n        tracking_code: \"412515\",\n        owner_id: \"fjasfkljas\",\n        national_code: \"55457575\",\n        origin_wallet: \"btc\",\n        quantity: \"2.3\",\n        dest_wallet: \"\",\n        action: \"approve\",\n        status: \"in_progress\",\n    },\n    {\n        id: 3,\n        tracking_code: \"412515\",\n        owner_id: \"fjasfkljas\",\n        national_code: \"55457575\",\n        origin_wallet: \"btc\",\n        quantity: \"2.3\",\n        dest_wallet: \"\",\n        action: \"approve\",\n        status: \"in_progress\",\n    },\n]\n\nfunction RoleDataGrid(props) {\n\n    const history = useHistory()\n\n    const columns = [\n        {\n            field: 'id',\n            headerName: 'شماره',\n            flex: 1,\n            type: 'string',\n            sortable: false,\n            headerClassName: 'grid-header',\n            headerAlign: 'center',\n            align: 'center',\n            // renderCell: (values) => `${values.row?.tracking_code.slice(0, 8)}`\n        },\n        {\n            field: 'owner_id',\n            headerName: 'عنوان امتیاز',\n            // description: 'This column has a value getter and is not sortable.',\n            sortable: false,\n            align: 'center',\n            flex: 1,\n            headerClassName: 'grid-header',\n            headerAlign: 'center',\n            editable: true,\n        },\n        {\n            field: 'quantity',\n            headerName: 'مقدار امتیاز',\n            // description: 'This column has a value getter and is not sortable.',\n            sortable: false,\n            align: 'center',\n            flex: 2,\n            headerClassName: 'grid-header',\n            headerAlign: 'center',\n            editable: true,\n            valueGetter: values => values.value + \"  امتیاز  \"\n        },\n        {\n            field: 'created_at',\n            headerName: 'ویرایش',\n            // description: 'This column has a value getter and is not sortable.',\n            sortable: false,\n            align: 'center',\n            flex: 1.5,\n            headerClassName: 'grid-header',\n            headerAlign: 'center',\n            renderCell: (values) => (\n                <IconButton variant=\"outlined\" size=\"small\" color=\"secondary\" onClick={() => { }} small className=\"ms-4 bg-white\"><Edit /></IconButton>\n            )\n        },\n        {\n            field: 'status',\n            headerName: 'حذف',\n            // description: 'This column has a value getter and is not sortable.',\n            sortable: false,\n            align: 'center',\n            flex: 1,\n            headerClassName: 'grid-header',\n            headerAlign: 'center',\n            renderCell: (values) => <IconButton variant=\"outlined\" size=\"small\" onClick={() => { }} className=\"ms-2 text-danger bg-white\"><Delete /></IconButton>\n        }\n    ];\n\n    const [params, setParams] = React.useState({ order: \"-updated_at\", size: 10, page: 0 })\n\n    const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    React.useEffect(() => {\n        // doFetch(\"GET\", UrlQuery(USERS_TRANSACTION_HISTORY, {...params}) )\n    }, [params])\n\n    return (\n        <div className=\"content\">\n            <div className=\" d-flex align-items-center justify-content-between w-auto mx-auto pt-2\">\n                <div className=\"d-flex\">\n                    <img src=\"/assets/drawer/Polygon.svg\" />\n                    <p className=\"font_title_name me-1\" style={{ minWidth: \"150px\" }}>مدیریت امتیازها</p>\n                </div>\n                <Filters params={params} setParams={setParams} />\n            </div>\n            <div className=\"d-flex px-3\">\n                <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\" }}>\n                    <DataGrid\n                        style={{ border: 0 }}\n                        autoHeight\n                        // rows={data?.items ?? []}\n                        rows={rows}\n                        loading={isLoading}\n                        columns={columns}\n                        getRowClassName={\n                            params => 'grid-content'\n                        }\n                        headerHeight={50}\n                        rowHeight={52}\n                        isRowSelectable={false}\n                        components={{\n                            Pagination: CustomPagination\n                        }}\n                        pageSize={10}\n                        rowCount={data?.total}\n                        paginationMode=\"server\"\n                        onPageChange={(param) => doFetch(\"GET\", UrlQuery(USERS_TRANSACTION_HISTORY, { ...params, page: param }))}\n                        disableSelectionOnClick\n                        disableColumnMenu\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RoleDataGrid\n"]},"metadata":{},"sourceType":"module"}