{"ast":null,"code":"import { Browser, isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\nimport { getScrollableParent } from '@syncfusion/ej2-popups';\nimport * as events from '../base/constant';\nimport * as classes from '../base/classes';\nimport { addClass, removeClass } from '@syncfusion/ej2-base';\n/**\n * `FullScreen` module is used to maximize and minimize screen\n */\n\nvar FullScreen =\n/** @class */\nfunction () {\n  function FullScreen(parent) {\n    this.parent = parent;\n    this.addEventListener();\n  }\n  /**\n   * showFullScreen method\n   *\n   * @param {MouseEvent} event - specifies the mouse event\n   * @returns {void}\n   * @hidden\n    */\n\n\n  FullScreen.prototype.showFullScreen = function (event) {\n    var _this = this;\n\n    if (this.parent.toolbarSettings.enable === true && this.parent.editorMode !== 'Markdown' && !isNOU(this.parent.quickToolbarModule)) {\n      this.parent.quickToolbarModule.hideQuickToolbars();\n    }\n\n    this.scrollableParent = getScrollableParent(this.parent.element);\n\n    if (!this.parent.element.classList.contains(classes.CLS_FULL_SCREEN)) {\n      var evenArgs = {\n        cancel: false,\n        requestType: 'Maximize',\n        targetItem: 'Maximize',\n        args: event\n      };\n      this.parent.trigger(events.actionBegin, evenArgs, function (beginEventArgs) {\n        if (!beginEventArgs.cancel) {\n          if (_this.parent.toolbarSettings.enableFloating && !_this.parent.inlineMode.enable && _this.parent.toolbarSettings.enable) {\n            _this.parent.getToolbarElement().style.width = '100%';\n            _this.parent.getToolbarElement().style.top = '0px';\n          }\n\n          _this.parent.element.classList.add(classes.CLS_FULL_SCREEN);\n\n          _this.toggleParentOverflow(true);\n\n          _this.parent.setContentHeight();\n\n          if (_this.parent.toolbarModule) {\n            if (!_this.parent.getBaseToolbarObject().toolbarObj.items[0].properties) {\n              _this.parent.getBaseToolbarObject().toolbarObj.removeItems(0);\n            }\n\n            if (Browser.isDevice) {\n              _this.parent.toolbarModule.removeFixedTBarClass();\n            }\n\n            _this.parent.toolbarModule.updateItem({\n              targetItem: 'Maximize',\n              updateItem: 'Minimize',\n              baseToolbar: _this.parent.getBaseToolbarObject()\n            });\n          }\n\n          _this.parent.trigger(events.actionComplete, {\n            requestType: 'Maximize',\n            targetItem: 'Maximize',\n            args: event\n          });\n        }\n      });\n    }\n  };\n  /**\n   * hideFullScreen method\n   *\n   * @param {MouseEvent} event - specifies the mouse event\n   * @returns {void}\n   * @hidden\n    */\n\n\n  FullScreen.prototype.hideFullScreen = function (event) {\n    var _this = this;\n\n    if (this.parent.toolbarSettings.enable === true && this.parent.editorMode !== 'Markdown' && !isNOU(this.parent.quickToolbarModule)) {\n      this.parent.quickToolbarModule.hideQuickToolbars();\n    }\n\n    if (this.parent.element.classList.contains(classes.CLS_FULL_SCREEN)) {\n      var evenArgs = {\n        cancel: false,\n        requestType: 'Minimize',\n        targetItem: 'Minimize',\n        args: event\n      };\n      this.parent.trigger(events.actionBegin, evenArgs, function (beginEventArgs) {\n        if (!beginEventArgs.cancel) {\n          _this.parent.element.classList.remove(classes.CLS_FULL_SCREEN);\n\n          var elem = document.querySelectorAll('.e-rte-overflow');\n\n          for (var i = 0; i < elem.length; i++) {\n            removeClass([elem[i]], ['e-rte-overflow']);\n          }\n\n          _this.parent.setContentHeight();\n\n          if (_this.parent.toolbarModule) {\n            if (!_this.parent.getBaseToolbarObject().toolbarObj.items[0].properties) {\n              _this.parent.getBaseToolbarObject().toolbarObj.removeItems(0);\n            }\n\n            _this.parent.toolbarModule.updateItem({\n              targetItem: 'Minimize',\n              updateItem: 'Maximize',\n              baseToolbar: _this.parent.getBaseToolbarObject()\n            });\n\n            if (Browser.isDevice && _this.parent.inlineMode.enable) {\n              _this.parent.toolbarModule.addFixedTBarClass();\n            }\n          }\n\n          _this.parent.trigger(events.actionComplete, {\n            requestType: 'Minimize',\n            targetItem: 'Minimize',\n            args: event\n          });\n        }\n      });\n    }\n  }; // eslint-disable-next-line\n\n\n  FullScreen.prototype.toggleParentOverflow = function (isAdd) {\n    if (isNOU(this.scrollableParent)) {\n      return;\n    }\n\n    for (var i = 0; i < this.scrollableParent.length; i++) {\n      if (this.scrollableParent[i].nodeName === '#document') {\n        var elem = document.querySelector('body');\n        addClass([elem], ['e-rte-overflow']);\n      } else {\n        var elem = this.scrollableParent[i];\n        addClass([elem], ['e-rte-overflow']);\n      }\n    }\n  };\n\n  FullScreen.prototype.onKeyDown = function (event) {\n    var originalEvent = event.args;\n\n    switch (originalEvent.action) {\n      case 'full-screen':\n        this.showFullScreen(event.args);\n        originalEvent.preventDefault();\n        break;\n\n      case 'escape':\n        this.hideFullScreen(event.args);\n        originalEvent.preventDefault();\n        break;\n    }\n  };\n\n  FullScreen.prototype.addEventListener = function () {\n    this.parent.on(events.keyDown, this.onKeyDown, this);\n    this.parent.on(events.destroy, this.destroy, this);\n  };\n\n  FullScreen.prototype.removeEventListener = function () {\n    this.parent.off(events.keyDown, this.onKeyDown);\n    this.parent.off(events.destroy, this.destroy);\n  };\n  /**\n   * destroy method\n   *\n   * @returns {void}\n   * @hidden\n    */\n\n\n  FullScreen.prototype.destroy = function () {\n    if (this.parent.element.classList.contains(classes.CLS_FULL_SCREEN)) {\n      this.toggleParentOverflow(false);\n    }\n\n    var elem = document.querySelectorAll('.e-rte-overflow');\n\n    for (var i = 0; i < elem.length; i++) {\n      removeClass([elem[i]], ['e-rte-overflow']);\n    }\n\n    this.removeEventListener();\n  };\n\n  return FullScreen;\n}();\n\nexport { FullScreen };","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/actions/full-screen.js"],"names":["Browser","isNullOrUndefined","isNOU","getScrollableParent","events","classes","addClass","removeClass","FullScreen","parent","addEventListener","prototype","showFullScreen","event","_this","toolbarSettings","enable","editorMode","quickToolbarModule","hideQuickToolbars","scrollableParent","element","classList","contains","CLS_FULL_SCREEN","evenArgs","cancel","requestType","targetItem","args","trigger","actionBegin","beginEventArgs","enableFloating","inlineMode","getToolbarElement","style","width","top","add","toggleParentOverflow","setContentHeight","toolbarModule","getBaseToolbarObject","toolbarObj","items","properties","removeItems","isDevice","removeFixedTBarClass","updateItem","baseToolbar","actionComplete","hideFullScreen","remove","elem","document","querySelectorAll","i","length","addFixedTBarClass","isAdd","nodeName","querySelector","onKeyDown","originalEvent","action","preventDefault","on","keyDown","destroy","removeEventListener","off"],"mappings":"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","sourcesContent":["import { Browser, isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\nimport { getScrollableParent } from '@syncfusion/ej2-popups';\nimport * as events from '../base/constant';\nimport * as classes from '../base/classes';\nimport { addClass, removeClass } from '@syncfusion/ej2-base';\n/**\n * `FullScreen` module is used to maximize and minimize screen\n */\nvar FullScreen = /** @class */ (function () {\n    function FullScreen(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * showFullScreen method\n     *\n     * @param {MouseEvent} event - specifies the mouse event\n     * @returns {void}\n     * @hidden\n\n     */\n    FullScreen.prototype.showFullScreen = function (event) {\n        var _this = this;\n        if (this.parent.toolbarSettings.enable === true && this.parent.editorMode !== 'Markdown'\n            && !isNOU(this.parent.quickToolbarModule)) {\n            this.parent.quickToolbarModule.hideQuickToolbars();\n        }\n        this.scrollableParent = getScrollableParent(this.parent.element);\n        if (!this.parent.element.classList.contains(classes.CLS_FULL_SCREEN)) {\n            var evenArgs = {\n                cancel: false,\n                requestType: 'Maximize',\n                targetItem: 'Maximize',\n                args: event\n            };\n            this.parent.trigger(events.actionBegin, evenArgs, function (beginEventArgs) {\n                if (!beginEventArgs.cancel) {\n                    if (_this.parent.toolbarSettings.enableFloating &&\n                        !_this.parent.inlineMode.enable && _this.parent.toolbarSettings.enable) {\n                        _this.parent.getToolbarElement().style.width = '100%';\n                        _this.parent.getToolbarElement().style.top = '0px';\n                    }\n                    _this.parent.element.classList.add(classes.CLS_FULL_SCREEN);\n                    _this.toggleParentOverflow(true);\n                    _this.parent.setContentHeight();\n                    if (_this.parent.toolbarModule) {\n                        if (!_this.parent.getBaseToolbarObject().toolbarObj.items[0].properties) {\n                            _this.parent.getBaseToolbarObject().toolbarObj.removeItems(0);\n                        }\n                        if (Browser.isDevice) {\n                            _this.parent.toolbarModule.removeFixedTBarClass();\n                        }\n                        _this.parent.toolbarModule.updateItem({\n                            targetItem: 'Maximize',\n                            updateItem: 'Minimize',\n                            baseToolbar: _this.parent.getBaseToolbarObject()\n                        });\n                    }\n                    _this.parent.trigger(events.actionComplete, { requestType: 'Maximize', targetItem: 'Maximize', args: event });\n                }\n            });\n        }\n    };\n    /**\n     * hideFullScreen method\n     *\n     * @param {MouseEvent} event - specifies the mouse event\n     * @returns {void}\n     * @hidden\n\n     */\n    FullScreen.prototype.hideFullScreen = function (event) {\n        var _this = this;\n        if (this.parent.toolbarSettings.enable === true && this.parent.editorMode !== 'Markdown'\n            && !isNOU(this.parent.quickToolbarModule)) {\n            this.parent.quickToolbarModule.hideQuickToolbars();\n        }\n        if (this.parent.element.classList.contains(classes.CLS_FULL_SCREEN)) {\n            var evenArgs = {\n                cancel: false,\n                requestType: 'Minimize',\n                targetItem: 'Minimize',\n                args: event\n            };\n            this.parent.trigger(events.actionBegin, evenArgs, function (beginEventArgs) {\n                if (!beginEventArgs.cancel) {\n                    _this.parent.element.classList.remove(classes.CLS_FULL_SCREEN);\n                    var elem = document.querySelectorAll('.e-rte-overflow');\n                    for (var i = 0; i < elem.length; i++) {\n                        removeClass([elem[i]], ['e-rte-overflow']);\n                    }\n                    _this.parent.setContentHeight();\n                    if (_this.parent.toolbarModule) {\n                        if (!_this.parent.getBaseToolbarObject().toolbarObj.items[0].properties) {\n                            _this.parent.getBaseToolbarObject().toolbarObj.removeItems(0);\n                        }\n                        _this.parent.toolbarModule.updateItem({\n                            targetItem: 'Minimize',\n                            updateItem: 'Maximize',\n                            baseToolbar: _this.parent.getBaseToolbarObject()\n                        });\n                        if (Browser.isDevice && _this.parent.inlineMode.enable) {\n                            _this.parent.toolbarModule.addFixedTBarClass();\n                        }\n                    }\n                    _this.parent.trigger(events.actionComplete, { requestType: 'Minimize', targetItem: 'Minimize', args: event });\n                }\n            });\n        }\n    };\n    // eslint-disable-next-line\n    FullScreen.prototype.toggleParentOverflow = function (isAdd) {\n        if (isNOU(this.scrollableParent)) {\n            return;\n        }\n        for (var i = 0; i < this.scrollableParent.length; i++) {\n            if (this.scrollableParent[i].nodeName === '#document') {\n                var elem = document.querySelector('body');\n                addClass([elem], ['e-rte-overflow']);\n            }\n            else {\n                var elem = this.scrollableParent[i];\n                addClass([elem], ['e-rte-overflow']);\n            }\n        }\n    };\n    FullScreen.prototype.onKeyDown = function (event) {\n        var originalEvent = event.args;\n        switch (originalEvent.action) {\n            case 'full-screen':\n                this.showFullScreen(event.args);\n                originalEvent.preventDefault();\n                break;\n            case 'escape':\n                this.hideFullScreen(event.args);\n                originalEvent.preventDefault();\n                break;\n        }\n    };\n    FullScreen.prototype.addEventListener = function () {\n        this.parent.on(events.keyDown, this.onKeyDown, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    FullScreen.prototype.removeEventListener = function () {\n        this.parent.off(events.keyDown, this.onKeyDown);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    /**\n     * destroy method\n     *\n     * @returns {void}\n     * @hidden\n\n     */\n    FullScreen.prototype.destroy = function () {\n        if (this.parent.element.classList.contains(classes.CLS_FULL_SCREEN)) {\n            this.toggleParentOverflow(false);\n        }\n        var elem = document.querySelectorAll('.e-rte-overflow');\n        for (var i = 0; i < elem.length; i++) {\n            removeClass([elem[i]], ['e-rte-overflow']);\n        }\n        this.removeEventListener();\n    };\n    return FullScreen;\n}());\nexport { FullScreen };\n"]},"metadata":{},"sourceType":"module"}