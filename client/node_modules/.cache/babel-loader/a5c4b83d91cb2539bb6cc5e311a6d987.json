{"ast":null,"code":"import axios from'axios';import{useContext,useEffect}from'react';import{UserContext}from'../context/provider';import{BASE_CONFIG_URL,EXCHANGE_CONFIG,CONFIG_COINS}from'./constants';//config api call\nvar ConfigApi=function ConfigApi(props){var dataContext=useContext(UserContext);var configData=function configData(){var configUrl=\"\".concat(BASE_CONFIG_URL).concat(EXCHANGE_CONFIG).concat(CONFIG_COINS);console.log(\"config url \",configUrl);axios.get(configUrl).then(function(resp){resp.data.map(function(item){var values='';if(item.Value){var encodedRequestBody=String(item.Value);var decodedRequestBodyString=Buffer.from(encodedRequestBody,\"base64\");values=JSON.parse(decodedRequestBodyString);}item.Value=values;return item;});dataContext.setConfigData(resp.data);});};useEffect(function(){configData();},[]);return null;};export default ConfigApi;","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/config-api.js"],"names":["axios","useContext","useEffect","UserContext","BASE_CONFIG_URL","EXCHANGE_CONFIG","CONFIG_COINS","ConfigApi","props","dataContext","configData","configUrl","console","log","get","then","resp","data","map","item","values","Value","encodedRequestBody","String","decodedRequestBodyString","Buffer","from","JSON","parse","setConfigData"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,UAAT,CAAqBC,SAArB,KAAsC,OAAtC,CAEA,OAASC,WAAT,KAA4B,qBAA5B,CAEA,OAASC,eAAT,CAA2BC,eAA3B,CAA6CC,YAA7C,KAAgE,aAAhE,CAKA;AAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAEzB,GAAMC,CAAAA,WAAW,CAAGR,UAAU,CAACE,WAAD,CAA9B,CAEA,GAAMO,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAErB,GAAMC,CAAAA,SAAS,WAAMP,eAAN,SAAwBC,eAAxB,SAA0CC,YAA1C,CAAf,CAEAM,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA0BF,SAA1B,EAEAX,KAAK,CAACc,GAAN,CAAUH,SAAV,EAEKI,IAFL,CAEU,SAAAC,IAAI,CAAI,CAEVA,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAc,SAAAC,IAAI,CAAI,CAClB,GAAIC,CAAAA,MAAM,CAAG,EAAb,CAEA,GAAID,IAAI,CAACE,KAAT,CAAgB,CAEZ,GAAMC,CAAAA,kBAAkB,CAAGC,MAAM,CAACJ,IAAI,CAACE,KAAN,CAAjC,CAEA,GAAMG,CAAAA,wBAAwB,CAAGC,MAAM,CAACC,IAAP,CAAYJ,kBAAZ,CAAgC,QAAhC,CAAjC,CAEAF,MAAM,CAAGO,IAAI,CAACC,KAAL,CAAWJ,wBAAX,CAAT,CAEH,CAEDL,IAAI,CAACE,KAAL,CAAaD,MAAb,CAEA,MAAOD,CAAAA,IAAP,CAEH,CAjBD,EAmBAV,WAAW,CAACoB,aAAZ,CAA0Bb,IAAI,CAACC,IAA/B,EAEH,CAzBL,EA2BH,CAjCD,CAsCAf,SAAS,CAAC,UAAM,CAEZQ,UAAU,GAEb,CAJQ,CAIN,EAJM,CAAT,CAOA,MAAO,KAAP,CAEH,CAnDD,CAuDA,cAAeH,CAAAA,SAAf","sourcesContent":["import axios from 'axios';\n\nimport { useContext, useEffect } from 'react';\n\nimport { UserContext } from '../context/provider';\n\nimport { BASE_CONFIG_URL , EXCHANGE_CONFIG , CONFIG_COINS} from './constants';\n\n\n\n\n//config api call\n\nconst ConfigApi = (props) => {\n\n    const dataContext = useContext(UserContext);\n\n    const configData = () => {\n\n        const configUrl = `${BASE_CONFIG_URL}${EXCHANGE_CONFIG}${CONFIG_COINS}`\n\n        console.log(\"config url \",configUrl)\n\n        axios.get(configUrl)\n\n            .then(resp => {\n\n                resp.data.map(item => {\n                    let values = ''\n\n                    if (item.Value) {\n        \n                        const encodedRequestBody = String(item.Value);\n        \n                        const decodedRequestBodyString = Buffer.from(encodedRequestBody, \"base64\");\n        \n                        values = JSON.parse(decodedRequestBodyString);\n        \n                    }\n        \n                    item.Value = values\n\n                    return item\n        \n                })\n\n                dataContext.setConfigData(resp.data);\n\n            })\n\n    }\n\n\n\n\n    useEffect(() => {\n\n        configData();\n\n    }, []);\n\n\n    return null;\n\n}\n\n\n\nexport default ConfigApi;\n\n"]},"metadata":{},"sourceType":"module"}