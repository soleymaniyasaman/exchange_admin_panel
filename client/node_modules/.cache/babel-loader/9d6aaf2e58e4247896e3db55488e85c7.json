{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/utils\n */\n\n/**\n * Returns heading options as defined in `config.heading.options` but processed to consider\n * the editor localization, i.e. to display {@link module:heading/heading~HeadingOption}\n * in the correct language.\n *\n * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n * when the user configuration is defined because the editor does not exist yet.\n *\n * @param {module:core/editor/editor~Editor} editor\n * @returns {Array.<module:heading/heading~HeadingOption>}.\n */\nexport function getLocalizedOptions(editor) {\n  const t = editor.t;\n  const localizedTitles = {\n    Paragraph: t('Paragraph'),\n    'Heading 1': t('Heading 1'),\n    'Heading 2': t('Heading 2'),\n    'Heading 3': t('Heading 3'),\n    'Heading 4': t('Heading 4'),\n    'Heading 5': t('Heading 5'),\n    'Heading 6': t('Heading 6')\n  };\n  return editor.config.get('heading.options').map(option => {\n    const title = localizedTitles[option.title];\n\n    if (title && title != option.title) {\n      option.title = title;\n    }\n\n    return option;\n  });\n}","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/@ckeditor/ckeditor5-heading/src/utils.js"],"names":["getLocalizedOptions","editor","t","localizedTitles","Paragraph","config","get","map","option","title"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,mBAAT,CAA8BC,MAA9B,EAAuC;AAC7C,QAAMC,CAAC,GAAGD,MAAM,CAACC,CAAjB;AACA,QAAMC,eAAe,GAAG;AACvBC,IAAAA,SAAS,EAAEF,CAAC,CAAE,WAAF,CADW;AAEvB,iBAAaA,CAAC,CAAE,WAAF,CAFS;AAGvB,iBAAaA,CAAC,CAAE,WAAF,CAHS;AAIvB,iBAAaA,CAAC,CAAE,WAAF,CAJS;AAKvB,iBAAaA,CAAC,CAAE,WAAF,CALS;AAMvB,iBAAaA,CAAC,CAAE,WAAF,CANS;AAOvB,iBAAaA,CAAC,CAAE,WAAF;AAPS,GAAxB;AAUA,SAAOD,MAAM,CAACI,MAAP,CAAcC,GAAd,CAAmB,iBAAnB,EAAuCC,GAAvC,CAA4CC,MAAM,IAAI;AAC5D,UAAMC,KAAK,GAAGN,eAAe,CAAEK,MAAM,CAACC,KAAT,CAA7B;;AAEA,QAAKA,KAAK,IAAIA,KAAK,IAAID,MAAM,CAACC,KAA9B,EAAsC;AACrCD,MAAAA,MAAM,CAACC,KAAP,GAAeA,KAAf;AACA;;AAED,WAAOD,MAAP;AACA,GARM,CAAP;AASA","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/utils\n */\n\n/**\n * Returns heading options as defined in `config.heading.options` but processed to consider\n * the editor localization, i.e. to display {@link module:heading/heading~HeadingOption}\n * in the correct language.\n *\n * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n * when the user configuration is defined because the editor does not exist yet.\n *\n * @param {module:core/editor/editor~Editor} editor\n * @returns {Array.<module:heading/heading~HeadingOption>}.\n */\nexport function getLocalizedOptions( editor ) {\n\tconst t = editor.t;\n\tconst localizedTitles = {\n\t\tParagraph: t( 'Paragraph' ),\n\t\t'Heading 1': t( 'Heading 1' ),\n\t\t'Heading 2': t( 'Heading 2' ),\n\t\t'Heading 3': t( 'Heading 3' ),\n\t\t'Heading 4': t( 'Heading 4' ),\n\t\t'Heading 5': t( 'Heading 5' ),\n\t\t'Heading 6': t( 'Heading 6' )\n\t};\n\n\treturn editor.config.get( 'heading.options' ).map( option => {\n\t\tconst title = localizedTitles[ option.title ];\n\n\t\tif ( title && title != option.title ) {\n\t\t\toption.title = title;\n\t\t}\n\n\t\treturn option;\n\t} );\n}\n"]},"metadata":{},"sourceType":"module"}