{"ast":null,"code":"import { extend } from '@syncfusion/ej2-base';\nimport * as EVENTS from './../../common/constant';\nimport * as CONSTANT from './../../markdown-parser/base/constant';\n/**\n * MDFormats internal plugin\n *\n * @hidden\n\n */\n\nvar MDFormats =\n/** @class */\nfunction () {\n  /**\n   * Constructor for creating the Formats plugin\n   *\n   * @param {IMDFormats} options - specifies the formats\n   * @hidden\n    */\n  function MDFormats(options) {\n    extend(this, this, options, true);\n    this.selection = this.parent.markdownSelection;\n    this.addEventListener();\n  }\n\n  MDFormats.prototype.addEventListener = function () {\n    this.parent.observer.on(EVENTS.FORMAT_TYPE, this.applyFormats, this);\n  };\n\n  MDFormats.prototype.applyFormats = function (e) {\n    e.subCommand = e.subCommand.toLowerCase();\n    var textArea = this.parent.element;\n    this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n    var parents = this.selection.getSelectedParentPoints(textArea);\n\n    if (this.isAppliedFormat(parents) === e.subCommand) {\n      if (e.subCommand === 'pre') {\n        if (parents.length > 1) {\n          this.applyCodeBlock(textArea, e, parents);\n        } else {\n          return;\n        }\n      }\n\n      this.cleanFormat(textArea);\n      this.restore(textArea, textArea.selectionStart, textArea.selectionEnd, e);\n      return;\n    }\n\n    if (e.subCommand === 'p') {\n      this.cleanFormat(textArea);\n      this.restore(textArea, textArea.selectionStart, textArea.selectionEnd, e);\n      return;\n    } else {\n      if (e.subCommand === 'pre' && parents.length !== 1 || e.subCommand !== 'pre') {\n        this.cleanFormat(textArea, e.subCommand);\n      }\n    }\n\n    var start = textArea.selectionStart;\n    var end = textArea.selectionEnd;\n    var addedLength = 0;\n    parents = this.selection.getSelectedParentPoints(textArea);\n\n    if (e.subCommand === 'pre') {\n      if (parents.length > 1) {\n        this.applyCodeBlock(textArea, e, parents);\n      } else {\n        extend(e, e, {\n          subCommand: 'InlineCode'\n        }, true);\n        this.parent.observer.notify(CONSTANT.selectionCommand, e);\n      }\n\n      return;\n    }\n\n    for (var i = 0; i < parents.length; i++) {\n      if (parents[i].text !== '' && !this.selection.isStartWith(parents[i].text, '\\\\' + this.syntax[e.subCommand])) {\n        parents[i].text = this.syntax[e.subCommand] + parents[i].text;\n        textArea.value = textArea.value.substr(0, parents[i].start) + parents[i].text + '\\n' + textArea.value.substr(parents[i].end, textArea.value.length);\n        start = i === 0 ? start + this.syntax[e.subCommand].length : start;\n        addedLength += this.syntax[e.subCommand].length;\n\n        if (parents.length !== 1) {\n          for (var j = i; j < parents.length; j++) {\n            parents[j].start = j !== 0 ? this.syntax[e.subCommand].length + parents[j].start : parents[j].start;\n            parents[j].end = this.syntax[e.subCommand].length + parents[j].end;\n          }\n        }\n      } else if (parents[i].text === '' && i === 0) {\n        this.selection.save(start, end);\n\n        if (this.selection.getSelectedText(textArea).length === 0) {\n          parents[i].text = this.syntax[e.subCommand];\n          textArea.value = textArea.value.substr(0, parents[i].start) + this.syntax[e.subCommand] + textArea.value.substr(parents[i].end, textArea.value.length);\n          start = i === 0 ? start + this.syntax[e.subCommand].length : start;\n          addedLength += this.syntax[e.subCommand].length;\n        }\n\n        if (parents.length !== 1) {\n          for (var j = i; j < parents.length; j++) {\n            parents[j].start = j !== 0 ? 1 + parents[j].start : parents[j].start;\n            parents[j].end = 1 + parents[j].end;\n          }\n        }\n      }\n    }\n\n    this.restore(textArea, start, end + addedLength, e);\n  };\n\n  MDFormats.prototype.clearRegex = function () {\n    var regex = '';\n    var configKey = Object.keys(this.syntax);\n\n    for (var j = 0; j < configKey.length && configKey[j] !== 'pre' && configKey[j] !== 'p'; j++) {\n      regex += regex === '' ? '^(' + this.selection.replaceSpecialChar(this.syntax[configKey[j]].trim()) + ')' : '|^(' + this.selection.replaceSpecialChar(this.syntax[configKey[j]].trim()) + ')';\n    }\n\n    return regex;\n  };\n\n  MDFormats.prototype.cleanFormat = function (textArea, command) {\n    var parents = this.selection.getSelectedParentPoints(textArea);\n    var start = textArea.selectionStart;\n    var end = textArea.selectionEnd;\n    var removeLength = 0;\n\n    if (this.selection.isClear(parents, this.clearRegex())) {\n      for (var i = 0; i < parents.length; i++) {\n        var configKey = Object.keys(this.syntax);\n\n        for (var j = 0; parents[i].text !== '' && j < configKey.length; j++) {\n          var removeText = this.syntax[configKey[j]];\n\n          if (configKey[j] === command) {\n            continue;\n          }\n\n          var regex = new RegExp('^(' + this.selection.replaceSpecialChar(removeText) + ')', 'gim');\n\n          if (regex.test(parents[i].text)) {\n            parents[i].text = parents[i].text.replace(regex, '');\n            textArea.value = textArea.value.substr(0, parents[i].start) + parents[i].text + '\\n' + textArea.value.substr(parents[i].end, textArea.value.length);\n            start = i === 0 ? start - removeText.length > 0 ? start - removeText.length : 0 : start;\n            removeLength += removeText.length;\n\n            if (parents.length !== 1) {\n              for (var k = 0; k < parents.length; k++) {\n                parents[k].start = k !== 0 ? parents[k].start - removeText.length : parents[k].start;\n                parents[k].end = parents[k].end - removeText.length;\n              }\n            }\n\n            break;\n          }\n        }\n\n        if (parents[i].text === '' && i === 0) {\n          this.selection.save(start, end);\n\n          if (parents.length !== 1) {\n            for (var j = i; j < parents.length; j++) {\n              parents[j].start = j !== 0 ? 1 + parents[j].start : parents[j].start;\n              parents[j].end = 1 + parents[j].end;\n            }\n          }\n        }\n      }\n\n      this.restore(textArea, start, end - removeLength);\n    }\n  };\n\n  MDFormats.prototype.applyCodeBlock = function (textArea, event, parents) {\n    var command = event.subCommand;\n    var start = parents[0].start;\n    var end = parents[parents.length - 1].end;\n    var parentLines = this.selection.getAllParents(textArea.value);\n    var firstPrevText = parentLines[parents[0].line - 1];\n    var lastNextText = parentLines[parents.length + 1 + 1]; // eslint-disable-next-line\n\n    var addedLength = 0;\n\n    if (!this.selection.isStartWith(firstPrevText, this.syntax.pre.split('\\n')[0]) && !this.selection.isStartWith(lastNextText, this.syntax.pre.split('\\n')[0])) {\n      var lines = textArea.value.substring(start, end).split('\\n');\n      var lastLine = lines[lines.length - 1] === '' ? '' : '\\n';\n      textArea.value = textArea.value.substr(0, start) + this.syntax[command] + textArea.value.substring(start, end) + lastLine + this.syntax[command] + textArea.value.substr(end, textArea.value.length);\n      start = this.selection.selectionStart + this.syntax[command].length;\n      end = this.selection.selectionEnd + this.syntax[command].length - 1;\n    } else {\n      var cmd = this.syntax[command];\n      var selection = this.parent.markdownSelection.getSelectedInlinePoints(textArea);\n      var startNo = textArea.value.substr(0, textArea.selectionStart).lastIndexOf(cmd);\n      var endNo = textArea.value.substr(textArea.selectionEnd, textArea.selectionEnd).indexOf(cmd);\n      endNo = endNo + selection.end;\n      var repStartText = this.replaceAt(textArea.value.substr(0, selection.start), cmd, '', startNo, selection.start);\n      var repEndText = this.replaceAt(textArea.value.substr(selection.end, textArea.value.length), cmd, '', 0, endNo);\n      textArea.value = repStartText + selection.text + repEndText;\n      start = this.selection.selectionStart - cmd.length;\n      end = this.selection.selectionEnd - cmd.length;\n    }\n\n    this.restore(textArea, start, end, event);\n  };\n\n  MDFormats.prototype.replaceAt = function (input, search, replace, start, end) {\n    return input.slice(0, start) + input.slice(start, end).replace(search, replace) + input.slice(end);\n  };\n\n  MDFormats.prototype.restore = function (textArea, start, end, event) {\n    this.selection.save(start, end);\n    this.selection.restore(textArea);\n\n    if (event && event.callBack) {\n      event.callBack({\n        requestType: event.subCommand,\n        selectedText: this.selection.getSelectedText(textArea),\n        editorMode: 'Markdown',\n        event: event.event\n      });\n    }\n  };\n\n  MDFormats.prototype.isAppliedFormat = function (lines, documentNode) {\n    var format = 'p'; // eslint-disable-next-line\n\n    var configKey = Object.keys(this.syntax);\n    var keys = Object.keys(this.syntax);\n    var direction = this.parent.element.selectionDirection;\n    var checkLine = direction === 'backward' ? lines[0].text : lines[lines.length - 1].text;\n\n    for (var i = 0; !documentNode && i < keys.length; i++) {\n      if (keys[i] !== 'pre' && this.selection.isStartWith(checkLine, this.syntax[keys[i]])) {\n        format = keys[i];\n        break;\n      } else if (keys[i] === 'pre') {\n        var parentLines = this.selection.getAllParents(this.parent.element.value);\n        var firstPrevText = parentLines[lines[0].line - 1];\n        var lastNextText = parentLines[lines.length + 1];\n\n        if (this.selection.isStartWith(firstPrevText, this.syntax[keys[i]].split('\\n')[0]) && this.selection.isStartWith(lastNextText, this.syntax[keys[i]].split('\\n')[0])) {\n          format = keys[i];\n          break;\n        }\n      }\n    }\n\n    return format;\n  };\n\n  return MDFormats;\n}();\n\nexport { MDFormats };","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/@syncfusion/ej2-richtexteditor/src/markdown-parser/plugin/formats.js"],"names":["extend","EVENTS","CONSTANT","MDFormats","options","selection","parent","markdownSelection","addEventListener","prototype","observer","on","FORMAT_TYPE","applyFormats","e","subCommand","toLowerCase","textArea","element","save","selectionStart","selectionEnd","parents","getSelectedParentPoints","isAppliedFormat","length","applyCodeBlock","cleanFormat","restore","start","end","addedLength","notify","selectionCommand","i","text","isStartWith","syntax","value","substr","j","getSelectedText","clearRegex","regex","configKey","Object","keys","replaceSpecialChar","trim","command","removeLength","isClear","removeText","RegExp","test","replace","k","event","parentLines","getAllParents","firstPrevText","line","lastNextText","pre","split","lines","substring","lastLine","cmd","getSelectedInlinePoints","startNo","lastIndexOf","endNo","indexOf","repStartText","replaceAt","repEndText","input","search","slice","callBack","requestType","selectedText","editorMode","documentNode","format","direction","selectionDirection","checkLine"],"mappings":"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","sourcesContent":["import { extend } from '@syncfusion/ej2-base';\nimport * as EVENTS from './../../common/constant';\nimport * as CONSTANT from './../../markdown-parser/base/constant';\n/**\n * MDFormats internal plugin\n *\n * @hidden\n\n */\nvar MDFormats = /** @class */ (function () {\n    /**\n     * Constructor for creating the Formats plugin\n     *\n     * @param {IMDFormats} options - specifies the formats\n     * @hidden\n\n     */\n    function MDFormats(options) {\n        extend(this, this, options, true);\n        this.selection = this.parent.markdownSelection;\n        this.addEventListener();\n    }\n    MDFormats.prototype.addEventListener = function () {\n        this.parent.observer.on(EVENTS.FORMAT_TYPE, this.applyFormats, this);\n    };\n    MDFormats.prototype.applyFormats = function (e) {\n        e.subCommand = e.subCommand.toLowerCase();\n        var textArea = this.parent.element;\n        this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n        var parents = this.selection.getSelectedParentPoints(textArea);\n        if (this.isAppliedFormat(parents) === e.subCommand) {\n            if (e.subCommand === 'pre') {\n                if (parents.length > 1) {\n                    this.applyCodeBlock(textArea, e, parents);\n                }\n                else {\n                    return;\n                }\n            }\n            this.cleanFormat(textArea);\n            this.restore(textArea, textArea.selectionStart, textArea.selectionEnd, e);\n            return;\n        }\n        if (e.subCommand === 'p') {\n            this.cleanFormat(textArea);\n            this.restore(textArea, textArea.selectionStart, textArea.selectionEnd, e);\n            return;\n        }\n        else {\n            if ((e.subCommand === 'pre' && parents.length !== 1) || e.subCommand !== 'pre') {\n                this.cleanFormat(textArea, e.subCommand);\n            }\n        }\n        var start = textArea.selectionStart;\n        var end = textArea.selectionEnd;\n        var addedLength = 0;\n        parents = this.selection.getSelectedParentPoints(textArea);\n        if (e.subCommand === 'pre') {\n            if (parents.length > 1) {\n                this.applyCodeBlock(textArea, e, parents);\n            }\n            else {\n                extend(e, e, { subCommand: 'InlineCode' }, true);\n                this.parent.observer.notify(CONSTANT.selectionCommand, e);\n            }\n            return;\n        }\n        for (var i = 0; i < parents.length; i++) {\n            if (parents[i].text !== '' && !this.selection.isStartWith(parents[i].text, '\\\\' + this.syntax[e.subCommand])) {\n                parents[i].text = this.syntax[e.subCommand] + parents[i].text;\n                textArea.value = textArea.value.substr(0, parents[i].start) + parents[i].text + '\\n' +\n                    textArea.value.substr(parents[i].end, textArea.value.length);\n                start = i === 0 ? start + this.syntax[e.subCommand].length : start;\n                addedLength += this.syntax[e.subCommand].length;\n                if (parents.length !== 1) {\n                    for (var j = i; j < parents.length; j++) {\n                        parents[j].start = j !== 0 ?\n                            this.syntax[e.subCommand].length + parents[j].start : parents[j].start;\n                        parents[j].end = this.syntax[e.subCommand].length + parents[j].end;\n                    }\n                }\n            }\n            else if (parents[i].text === '' && i === 0) {\n                this.selection.save(start, end);\n                if (this.selection.getSelectedText(textArea).length === 0) {\n                    parents[i].text = this.syntax[e.subCommand];\n                    textArea.value = textArea.value.substr(0, parents[i].start) + this.syntax[e.subCommand] +\n                        textArea.value.substr(parents[i].end, textArea.value.length);\n                    start = i === 0 ? start + this.syntax[e.subCommand].length : start;\n                    addedLength += this.syntax[e.subCommand].length;\n                }\n                if (parents.length !== 1) {\n                    for (var j = i; j < parents.length; j++) {\n                        parents[j].start = j !== 0 ? 1 + parents[j].start : parents[j].start;\n                        parents[j].end = 1 + parents[j].end;\n                    }\n                }\n            }\n        }\n        this.restore(textArea, start, end + addedLength, e);\n    };\n    MDFormats.prototype.clearRegex = function () {\n        var regex = '';\n        var configKey = Object.keys(this.syntax);\n        for (var j = 0; j < configKey.length && configKey[j] !== 'pre' && configKey[j] !== 'p'; j++) {\n            regex += regex === '' ? '^(' + this.selection.replaceSpecialChar(this.syntax[configKey[j]].trim()) + ')' :\n                '|^(' + this.selection.replaceSpecialChar(this.syntax[configKey[j]].trim()) + ')';\n        }\n        return regex;\n    };\n    MDFormats.prototype.cleanFormat = function (textArea, command) {\n        var parents = this.selection.getSelectedParentPoints(textArea);\n        var start = textArea.selectionStart;\n        var end = textArea.selectionEnd;\n        var removeLength = 0;\n        if (this.selection.isClear(parents, this.clearRegex())) {\n            for (var i = 0; i < parents.length; i++) {\n                var configKey = Object.keys(this.syntax);\n                for (var j = 0; parents[i].text !== '' && j < configKey.length; j++) {\n                    var removeText = this.syntax[configKey[j]];\n                    if (configKey[j] === command) {\n                        continue;\n                    }\n                    var regex = new RegExp('^(' + this.selection.replaceSpecialChar(removeText) + ')', 'gim');\n                    if (regex.test(parents[i].text)) {\n                        parents[i].text = parents[i].text.replace(regex, '');\n                        textArea.value = textArea.value.substr(0, parents[i].start) + parents[i].text + '\\n' +\n                            textArea.value.substr(parents[i].end, textArea.value.length);\n                        start = i === 0 ? (start - (removeText.length)) > 0 ? start - (removeText.length) : 0 : start;\n                        removeLength += removeText.length;\n                        if (parents.length !== 1) {\n                            for (var k = 0; k < parents.length; k++) {\n                                parents[k].start = k !== 0 ?\n                                    parents[k].start - removeText.length : parents[k].start;\n                                parents[k].end = parents[k].end - removeText.length;\n                            }\n                        }\n                        break;\n                    }\n                }\n                if (parents[i].text === '' && i === 0) {\n                    this.selection.save(start, end);\n                    if (parents.length !== 1) {\n                        for (var j = i; j < parents.length; j++) {\n                            parents[j].start = j !== 0 ? 1 + parents[j].start : parents[j].start;\n                            parents[j].end = 1 + parents[j].end;\n                        }\n                    }\n                }\n            }\n            this.restore(textArea, start, end - removeLength);\n        }\n    };\n    MDFormats.prototype.applyCodeBlock = function (textArea, event, parents) {\n        var command = event.subCommand;\n        var start = parents[0].start;\n        var end = parents[parents.length - 1].end;\n        var parentLines = this.selection.getAllParents(textArea.value);\n        var firstPrevText = parentLines[parents[0].line - 1];\n        var lastNextText = parentLines[(parents.length + 1) + 1];\n        // eslint-disable-next-line\n        var addedLength = 0;\n        if (!this.selection.isStartWith(firstPrevText, this.syntax.pre.split('\\n')[0]) &&\n            !this.selection.isStartWith(lastNextText, this.syntax.pre.split('\\n')[0])) {\n            var lines = textArea.value.substring(start, end).split('\\n');\n            var lastLine = lines[lines.length - 1] === '' ? '' : '\\n';\n            textArea.value = textArea.value.substr(0, start) + this.syntax[command] + textArea.value.substring(start, end) +\n                lastLine + this.syntax[command] +\n                textArea.value.substr(end, textArea.value.length);\n            start = this.selection.selectionStart + this.syntax[command].length;\n            end = this.selection.selectionEnd + this.syntax[command].length - 1;\n        }\n        else {\n            var cmd = this.syntax[command];\n            var selection = this.parent.markdownSelection.getSelectedInlinePoints(textArea);\n            var startNo = textArea.value.substr(0, textArea.selectionStart).lastIndexOf(cmd);\n            var endNo = textArea.value.substr(textArea.selectionEnd, textArea.selectionEnd).indexOf(cmd);\n            endNo = endNo + selection.end;\n            var repStartText = this.replaceAt(textArea.value.substr(0, selection.start), cmd, '', startNo, selection.start);\n            var repEndText = this.replaceAt(textArea.value.substr(selection.end, textArea.value.length), cmd, '', 0, endNo);\n            textArea.value = repStartText + selection.text + repEndText;\n            start = this.selection.selectionStart - cmd.length;\n            end = this.selection.selectionEnd - cmd.length;\n        }\n        this.restore(textArea, start, end, event);\n    };\n    MDFormats.prototype.replaceAt = function (input, search, replace, start, end) {\n        return input.slice(0, start)\n            + input.slice(start, end).replace(search, replace)\n            + input.slice(end);\n    };\n    MDFormats.prototype.restore = function (textArea, start, end, event) {\n        this.selection.save(start, end);\n        this.selection.restore(textArea);\n        if (event && event.callBack) {\n            event.callBack({\n                requestType: event.subCommand,\n                selectedText: this.selection.getSelectedText(textArea),\n                editorMode: 'Markdown',\n                event: event.event\n            });\n        }\n    };\n    MDFormats.prototype.isAppliedFormat = function (lines, documentNode) {\n        var format = 'p';\n        // eslint-disable-next-line\n        var configKey = Object.keys(this.syntax);\n        var keys = Object.keys(this.syntax);\n        var direction = this.parent.element.selectionDirection;\n        var checkLine = direction === 'backward' ? lines[0].text : lines[lines.length - 1].text;\n        for (var i = 0; !documentNode && i < keys.length; i++) {\n            if (keys[i] !== 'pre' && this.selection.isStartWith(checkLine, this.syntax[keys[i]])) {\n                format = keys[i];\n                break;\n            }\n            else if (keys[i] === 'pre') {\n                var parentLines = this.selection.getAllParents(this.parent.element.value);\n                var firstPrevText = parentLines[lines[0].line - 1];\n                var lastNextText = parentLines[lines.length + 1];\n                if (this.selection.isStartWith(firstPrevText, this.syntax[keys[i]].split('\\n')[0]) &&\n                    this.selection.isStartWith(lastNextText, this.syntax[keys[i]].split('\\n')[0])) {\n                    format = keys[i];\n                    break;\n                }\n            }\n        }\n        return format;\n    };\n    return MDFormats;\n}());\nexport { MDFormats };\n"]},"metadata":{},"sourceType":"module"}