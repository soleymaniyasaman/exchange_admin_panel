{"ast":null,"code":"import * as events from '../base/constant';\n/**\n * `ExecCommandCallBack` module is used to run the editor manager command\n */\n\nvar ExecCommandCallBack =\n/** @class */\nfunction () {\n  function ExecCommandCallBack(parent) {\n    this.parent = parent;\n    this.addEventListener();\n  }\n\n  ExecCommandCallBack.prototype.addEventListener = function () {\n    this.parent.on(events.execCommandCallBack, this.commandCallBack, this);\n    this.parent.on(events.destroy, this.removeEventListener, this);\n  };\n\n  ExecCommandCallBack.prototype.commandCallBack = function (args) {\n    if (args.requestType !== 'Undo' && args.requestType !== 'Redo') {\n      this.parent.formatter.saveData();\n    }\n\n    this.parent.notify(events.toolbarRefresh, {\n      args: args\n    });\n    this.parent.notify(events.count, {});\n  };\n\n  ExecCommandCallBack.prototype.removeEventListener = function () {\n    this.parent.off(events.execCommandCallBack, this.commandCallBack);\n    this.parent.off(events.destroy, this.removeEventListener);\n  };\n\n  return ExecCommandCallBack;\n}();\n\nexport { ExecCommandCallBack };","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/actions/execute-command-callback.js"],"names":["events","ExecCommandCallBack","parent","addEventListener","prototype","on","execCommandCallBack","commandCallBack","destroy","removeEventListener","args","requestType","formatter","saveData","notify","toolbarRefresh","count","off"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,kBAAxB;AACA;AACA;AACA;;AACA,IAAIC,mBAAmB;AAAG;AAAe,YAAY;AACjD,WAASA,mBAAT,CAA6BC,MAA7B,EAAqC;AACjC,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,gBAAL;AACH;;AACDF,EAAAA,mBAAmB,CAACG,SAApB,CAA8BD,gBAA9B,GAAiD,YAAY;AACzD,SAAKD,MAAL,CAAYG,EAAZ,CAAeL,MAAM,CAACM,mBAAtB,EAA2C,KAAKC,eAAhD,EAAiE,IAAjE;AACA,SAAKL,MAAL,CAAYG,EAAZ,CAAeL,MAAM,CAACQ,OAAtB,EAA+B,KAAKC,mBAApC,EAAyD,IAAzD;AACH,GAHD;;AAIAR,EAAAA,mBAAmB,CAACG,SAApB,CAA8BG,eAA9B,GAAgD,UAAUG,IAAV,EAAgB;AAC5D,QAAIA,IAAI,CAACC,WAAL,KAAqB,MAArB,IAA+BD,IAAI,CAACC,WAAL,KAAqB,MAAxD,EAAgE;AAC5D,WAAKT,MAAL,CAAYU,SAAZ,CAAsBC,QAAtB;AACH;;AACD,SAAKX,MAAL,CAAYY,MAAZ,CAAmBd,MAAM,CAACe,cAA1B,EAA0C;AAAEL,MAAAA,IAAI,EAAEA;AAAR,KAA1C;AACA,SAAKR,MAAL,CAAYY,MAAZ,CAAmBd,MAAM,CAACgB,KAA1B,EAAiC,EAAjC;AACH,GAND;;AAOAf,EAAAA,mBAAmB,CAACG,SAApB,CAA8BK,mBAA9B,GAAoD,YAAY;AAC5D,SAAKP,MAAL,CAAYe,GAAZ,CAAgBjB,MAAM,CAACM,mBAAvB,EAA4C,KAAKC,eAAjD;AACA,SAAKL,MAAL,CAAYe,GAAZ,CAAgBjB,MAAM,CAACQ,OAAvB,EAAgC,KAAKC,mBAArC;AACH,GAHD;;AAIA,SAAOR,mBAAP;AACH,CArBwC,EAAzC;;AAsBA,SAASA,mBAAT","sourcesContent":["import * as events from '../base/constant';\n/**\n * `ExecCommandCallBack` module is used to run the editor manager command\n */\nvar ExecCommandCallBack = /** @class */ (function () {\n    function ExecCommandCallBack(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    ExecCommandCallBack.prototype.addEventListener = function () {\n        this.parent.on(events.execCommandCallBack, this.commandCallBack, this);\n        this.parent.on(events.destroy, this.removeEventListener, this);\n    };\n    ExecCommandCallBack.prototype.commandCallBack = function (args) {\n        if (args.requestType !== 'Undo' && args.requestType !== 'Redo') {\n            this.parent.formatter.saveData();\n        }\n        this.parent.notify(events.toolbarRefresh, { args: args });\n        this.parent.notify(events.count, {});\n    };\n    ExecCommandCallBack.prototype.removeEventListener = function () {\n        this.parent.off(events.execCommandCallBack, this.commandCallBack);\n        this.parent.off(events.destroy, this.removeEventListener);\n    };\n    return ExecCommandCallBack;\n}());\nexport { ExecCommandCallBack };\n"]},"metadata":{},"sourceType":"module"}