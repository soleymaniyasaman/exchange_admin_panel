{"ast":null,"code":"import { isNullOrUndefined, getEnumValue } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\n/**\n * CellRendererFactory\n *\n * @hidden\n */\n\nvar CellRendererFactory =\n/** @class */\nfunction () {\n  function CellRendererFactory() {\n    this.cellRenderMap = {};\n  }\n\n  CellRendererFactory.prototype.addCellRenderer = function (name, type) {\n    name = typeof name === 'string' ? name : getEnumValue(CellType, name);\n\n    if (isNullOrUndefined(this.cellRenderMap[name])) {\n      this.cellRenderMap[name] = type;\n    }\n  };\n\n  CellRendererFactory.prototype.getCellRenderer = function (name) {\n    name = typeof name === 'string' ? name : getEnumValue(CellType, name);\n\n    if (isNullOrUndefined(this.cellRenderMap[name])) {\n      // eslint-disable-next-line no-throw-literal\n      throw \"The cellRenderer \" + name + \" is not found\";\n    } else {\n      return this.cellRenderMap[name];\n    }\n  };\n\n  return CellRendererFactory;\n}();\n\nexport { CellRendererFactory };","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/@syncfusion/ej2-grids/src/grid/services/cell-render-factory.js"],"names":["isNullOrUndefined","getEnumValue","CellType","CellRendererFactory","cellRenderMap","prototype","addCellRenderer","name","type","getCellRenderer"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,YAA5B,QAAgD,sBAAhD;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,mBAAmB;AAAG;AAAe,YAAY;AACjD,WAASA,mBAAT,GAA+B;AAC3B,SAAKC,aAAL,GAAqB,EAArB;AACH;;AACDD,EAAAA,mBAAmB,CAACE,SAApB,CAA8BC,eAA9B,GAAgD,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AAClED,IAAAA,IAAI,GAAG,OAAOA,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCN,YAAY,CAACC,QAAD,EAAWK,IAAX,CAArD;;AACA,QAAIP,iBAAiB,CAAC,KAAKI,aAAL,CAAmBG,IAAnB,CAAD,CAArB,EAAiD;AAC7C,WAAKH,aAAL,CAAmBG,IAAnB,IAA2BC,IAA3B;AACH;AACJ,GALD;;AAMAL,EAAAA,mBAAmB,CAACE,SAApB,CAA8BI,eAA9B,GAAgD,UAAUF,IAAV,EAAgB;AAC5DA,IAAAA,IAAI,GAAG,OAAOA,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCN,YAAY,CAACC,QAAD,EAAWK,IAAX,CAArD;;AACA,QAAIP,iBAAiB,CAAC,KAAKI,aAAL,CAAmBG,IAAnB,CAAD,CAArB,EAAiD;AAC7C;AACA,YAAM,sBAAsBA,IAAtB,GAA6B,eAAnC;AACH,KAHD,MAIK;AACD,aAAO,KAAKH,aAAL,CAAmBG,IAAnB,CAAP;AACH;AACJ,GATD;;AAUA,SAAOJ,mBAAP;AACH,CArBwC,EAAzC;;AAsBA,SAASA,mBAAT","sourcesContent":["import { isNullOrUndefined, getEnumValue } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\n/**\n * CellRendererFactory\n *\n * @hidden\n */\nvar CellRendererFactory = /** @class */ (function () {\n    function CellRendererFactory() {\n        this.cellRenderMap = {};\n    }\n    CellRendererFactory.prototype.addCellRenderer = function (name, type) {\n        name = typeof name === 'string' ? name : getEnumValue(CellType, name);\n        if (isNullOrUndefined(this.cellRenderMap[name])) {\n            this.cellRenderMap[name] = type;\n        }\n    };\n    CellRendererFactory.prototype.getCellRenderer = function (name) {\n        name = typeof name === 'string' ? name : getEnumValue(CellType, name);\n        if (isNullOrUndefined(this.cellRenderMap[name])) {\n            // eslint-disable-next-line no-throw-literal\n            throw \"The cellRenderer \" + name + \" is not found\";\n        }\n        else {\n            return this.cellRenderMap[name];\n        }\n    };\n    return CellRendererFactory;\n}());\nexport { CellRendererFactory };\n"]},"metadata":{},"sourceType":"module"}