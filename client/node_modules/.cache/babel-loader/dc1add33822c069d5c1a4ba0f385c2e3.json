{"ast":null,"code":"export const numDiscriminant = input => {\n  if (input) {\n    return input.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n};\nexport const numDiscriminantInput = input => {\n  if (input) {\n    if (input.toString().includes(\" \")) {\n      input = input.toString().replace(/\\s/g, \"\");\n    }\n\n    return input.toString().replace(/,/g, \"\").replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\").replace(/ /g, '');\n  }\n};\nexport const clearDiscriminant = input => {\n  if (input) {\n    return input.toString().replace(/,/g, \"\");\n  }\n};\nexport const numberRegex = /^[0-9,]+$/;\nexport const decimalLimitInput = originWallet => {\n  if (originWallet === \"usdt\") {\n    return /^\\d{0,100}(\\.\\d{0,2})?$/;\n  } else if (originWallet === \"irr\") {\n    return /^\\d{0,100}(\\.\\d{0,0})?$/;\n  } else {\n    return new RegExp(`^\\\\d{0,100}(\\\\.\\\\d{0,${originWallet}})?$`);\n  }\n}; // \\d+\\.\\d\\d(?!\\d)\n// ^\\d{1,6}(\\.\\d{1,5})?$\n// \\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/discriminant.js"],"names":["numDiscriminant","input","toString","replace","numDiscriminantInput","includes","clearDiscriminant","numberRegex","decimalLimitInput","originWallet","RegExp"],"mappings":"AACA,OAAO,MAAMA,eAAe,GAAIC,KAAD,IAAW;AACtC,MAAIA,KAAJ,EAAW;AACP,WAAOA,KAAK,CAACC,QAAN,GAAiBC,OAAjB,CAAyB,iCAAzB,EAA4D,GAA5D,CAAP;AAEH;AACJ,CALM;AAMP,OAAO,MAAMC,oBAAoB,GAAIH,KAAD,IAAW;AAC3C,MAAIA,KAAJ,EAAW;AACP,QAAIA,KAAK,CAACC,QAAN,GAAiBG,QAAjB,CAA0B,GAA1B,CAAJ,EAAoC;AAChCJ,MAAAA,KAAK,GAAGA,KAAK,CAACC,QAAN,GAAiBC,OAAjB,CAAyB,KAAzB,EAAgC,EAAhC,CAAR;AACD;;AACC,WAAOF,KAAK,CAACC,QAAN,GAAiBC,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,EAAmCA,OAAnC,CAA2C,iCAA3C,EAA8E,GAA9E,EAAmFA,OAAnF,CAA2F,IAA3F,EAAgG,EAAhG,CAAP;AAEP;AACJ,CARM;AASP,OAAO,MAAMG,iBAAiB,GAAIL,KAAD,IAAW;AACxC,MAAIA,KAAJ,EAAW;AACP,WAAOA,KAAK,CAACC,QAAN,GAAiBC,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,CAAP;AAEH;AACJ,CALM;AAOP,OAAO,MAAMI,WAAW,GAAG,WAApB;AAGP,OAAO,MAAMC,iBAAiB,GAAGC,YAAD,IAAkB;AAC9C,MAAIA,YAAY,KAAK,MAArB,EAA6B;AACzB,WAAO,yBAAP;AACH,GAFD,MAEO,IAAIA,YAAY,KAAK,KAArB,EAA6B;AAChC,WAAO,yBAAP;AACH,GAFM,MAEA;AACH,WAAO,IAAIC,MAAJ,CAAY,wBAAuBD,YAAa,MAAhD,CAAP;AACH;AAEJ,CATM,C,CAYP;AACA;AACA","sourcesContent":["\nexport const numDiscriminant = (input) => {\n    if (input) {\n        return input.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n        \n    }\n}\nexport const numDiscriminantInput = (input) => {\n    if (input) {\n        if (input.toString().includes(\" \")) {\n            input = input.toString().replace(/\\s/g, \"\");\n          }\n            return input.toString().replace(/,/g, \"\").replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\").replace(/ /g,'');\n        \n    }\n}\nexport const clearDiscriminant = (input) => {\n    if (input) {\n        return input.toString().replace(/,/g, \"\");\n        \n    }\n}\n\nexport const numberRegex = /^[0-9,]+$/;\n\n\nexport const decimalLimitInput =(originWallet) => {    \n    if (originWallet === \"usdt\") {\n        return /^\\d{0,100}(\\.\\d{0,2})?$/\n    } else if (originWallet === \"irr\" ) {\n        return /^\\d{0,100}(\\.\\d{0,0})?$/\n    } else {\n        return new RegExp(`^\\\\d{0,100}(\\\\.\\\\d{0,${originWallet}})?$`)\n    }\n\n}\n\n\n// \\d+\\.\\d\\d(?!\\d)\n// ^\\d{1,6}(\\.\\d{1,5})?$\n// \\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))"]},"metadata":{},"sourceType":"module"}