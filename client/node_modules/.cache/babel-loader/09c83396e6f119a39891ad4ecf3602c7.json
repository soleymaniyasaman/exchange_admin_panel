{"ast":null,"code":"import { addClass, isNullOrUndefined, removeClass, select, closest } from '@syncfusion/ej2-base';\nimport { RenderType } from '../base/enum';\nimport { getIndex } from '../base/util';\nimport * as events from '../base/constant';\nimport * as classes from '../base/classes';\nimport { getDropDownValue, getFormattedFontSize, getTooltipText } from '../base/util';\nimport * as model from '../models/items';\nimport { dispatchEvent } from '../base/util';\n/**\n * `Toolbar` module is used to handle Toolbar actions.\n */\n\nvar DropDownButtons =\n/** @class */\nfunction () {\n  function DropDownButtons(parent, serviceLocator) {\n    this.parent = parent;\n    this.locator = serviceLocator;\n    this.renderFactory = this.locator.getService('rendererFactory');\n    this.addEventListener();\n  }\n\n  DropDownButtons.prototype.initializeInstance = function () {\n    this.toolbarRenderer = this.renderFactory.getRenderer(RenderType.Toolbar);\n  };\n\n  DropDownButtons.prototype.beforeRender = function (args) {\n    var item = args.item;\n\n    if (item.cssClass) {\n      addClass([args.element], item.cssClass);\n    }\n\n    if (item.command === 'Alignments' || item.subCommand === 'JustifyLeft' || item.subCommand === 'JustifyRight' || item.subCommand === 'JustifyCenter') {\n      args.element.setAttribute('title', getTooltipText(item.subCommand.toLocaleLowerCase(), this.locator));\n    }\n  };\n\n  DropDownButtons.prototype.dropdownContent = function (width, type, content) {\n    return '<span style=\"display: inline-flex;' + 'width:' + (type === 'quick' ? 'auto' : width) + '\" >' + '<span class=\"e-rte-dropdown-btn-text\">' + content + '</span></span>';\n  };\n  /**\n   * renderDropDowns method\n   *\n   * @param {IDropDownRenderArgs} args - specifies the arguments\n   * @returns {void}\n   * @hidden\n    */\n\n\n  DropDownButtons.prototype.renderDropDowns = function (args) {\n    var _this = this;\n\n    this.initializeInstance();\n    var type = args.containerType;\n    var tbElement = args.container;\n    model.templateItems.forEach(function (item) {\n      var targetElement = undefined;\n\n      if (getIndex(item, args.items) !== -1) {\n        switch (item) {\n          case 'numberformatlist':\n            {\n              targetElement = select('#' + _this.parent.getID() + '_' + type + '_NumberFormatList', tbElement);\n\n              if (isNullOrUndefined(targetElement) || targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n                return;\n              }\n\n              var formatOLItem = _this.parent.numberFormatList.types.slice();\n\n              formatOLItem.forEach(function (item) {\n                Object.defineProperties(item, {\n                  command: {\n                    value: 'Lists',\n                    enumerable: true\n                  },\n                  subCommand: {\n                    value: 'NumberFormatList',\n                    enumerable: true\n                  }\n                });\n              });\n              _this.numberFormatListDropDown = _this.toolbarRenderer.renderListDropDown({\n                cssClass: 'e-order-list' + ' ' + classes.CLS_RTE_ELEMENTS + ' ' + classes.CLS_ICONS,\n                itemName: 'NumberFormatList',\n                items: formatOLItem,\n                element: targetElement\n              });\n              break;\n            }\n\n          case 'bulletformatlist':\n            {\n              targetElement = select('#' + _this.parent.getID() + '_' + type + '_BulletFormatList', tbElement);\n\n              if (isNullOrUndefined(targetElement) || targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n                return;\n              }\n\n              var formatULItem = _this.parent.bulletFormatList.types.slice();\n\n              formatULItem.forEach(function (item) {\n                Object.defineProperties(item, {\n                  command: {\n                    value: 'Lists',\n                    enumerable: true\n                  },\n                  subCommand: {\n                    value: 'BulletFormatList',\n                    enumerable: true\n                  }\n                });\n              });\n              _this.bulletFormatListDropDown = _this.toolbarRenderer.renderListDropDown({\n                cssClass: 'e-unorder-list' + ' ' + classes.CLS_RTE_ELEMENTS + ' ' + classes.CLS_ICONS,\n                itemName: 'BulletFormatList',\n                items: formatULItem,\n                element: targetElement\n              });\n              break;\n            }\n\n          case 'formats':\n            {\n              targetElement = select('#' + _this.parent.getID() + '_' + type + '_Formats', tbElement);\n\n              if (isNullOrUndefined(targetElement) || targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n                return;\n              }\n\n              var formatItem = _this.parent.format.types.slice();\n\n              formatItem.forEach(function (item) {\n                Object.defineProperties(item, {\n                  command: {\n                    value: 'Formats',\n                    enumerable: true\n                  },\n                  subCommand: {\n                    value: item.value,\n                    enumerable: true\n                  }\n                });\n              });\n              var formatContent = isNullOrUndefined(_this.parent.format.default) ? formatItem[0].text : _this.parent.format.default;\n              _this.formatDropDown = _this.toolbarRenderer.renderDropDownButton({\n                iconCss: type === 'quick' ? 'e-formats e-icons' : '',\n                content: _this.dropdownContent(_this.parent.format.width, type, type === 'quick' ? '' : getDropDownValue(formatItem, formatContent, 'text', 'text')),\n                cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_FORMATS_TB_BTN,\n                itemName: 'Formats',\n                items: formatItem,\n                element: targetElement\n              });\n              break;\n            }\n\n          case 'fontname':\n            {\n              targetElement = select('#' + _this.parent.getID() + '_' + type + '_FontName', tbElement);\n\n              if (isNullOrUndefined(targetElement) || targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n                return;\n              }\n\n              var fontItem = _this.parent.fontFamily.items.slice();\n\n              fontItem.forEach(function (item) {\n                Object.defineProperties(item, {\n                  command: {\n                    value: 'Font',\n                    enumerable: true\n                  },\n                  subCommand: {\n                    value: 'FontName',\n                    enumerable: true\n                  }\n                });\n              });\n              var fontNameContent = isNullOrUndefined(_this.parent.fontFamily.default) ? fontItem[0].text : _this.parent.fontFamily.default;\n              _this.fontNameDropDown = _this.toolbarRenderer.renderDropDownButton({\n                iconCss: type === 'quick' ? 'e-font-name e-icons' : '',\n                content: _this.dropdownContent(_this.parent.fontFamily.width, type, type === 'quick' ? '' : getDropDownValue(fontItem, fontNameContent, 'text', 'text')),\n                cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_FONT_NAME_TB_BTN,\n                itemName: 'FontName',\n                items: fontItem,\n                element: targetElement\n              });\n\n              if (!isNullOrUndefined(_this.parent.fontFamily.default)) {\n                _this.getEditNode().style.fontFamily = _this.parent.fontFamily.default;\n              }\n\n              break;\n            }\n\n          case 'fontsize':\n            {\n              targetElement = select('#' + _this.parent.getID() + '_' + type + '_FontSize', tbElement);\n\n              if (isNullOrUndefined(targetElement) || targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n                return;\n              }\n\n              var fontsize = _this.parent.fontSize.items.slice();\n\n              fontsize.forEach(function (item) {\n                Object.defineProperties(item, {\n                  command: {\n                    value: 'Font',\n                    enumerable: true\n                  },\n                  subCommand: {\n                    value: 'FontSize',\n                    enumerable: true\n                  }\n                });\n              });\n              var fontSizeContent = isNullOrUndefined(_this.parent.fontSize.default) ? fontsize[1].text : _this.parent.fontSize.default;\n              _this.fontSizeDropDown = _this.toolbarRenderer.renderDropDownButton({\n                content: _this.dropdownContent(_this.parent.fontSize.width, type, getFormattedFontSize(getDropDownValue(fontsize, fontSizeContent.replace(/\\s/g, ''), 'value', 'text'))),\n                cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_FONT_SIZE_TB_BTN,\n                itemName: 'FontSize',\n                items: fontsize,\n                element: targetElement\n              });\n\n              if (!isNullOrUndefined(_this.parent.fontSize.default)) {\n                _this.getEditNode().style.fontSize = _this.parent.fontSize.default;\n              }\n\n              break;\n            }\n\n          case 'alignments':\n            targetElement = select('#' + _this.parent.getID() + '_' + type + '_Alignments', tbElement);\n\n            if (isNullOrUndefined(targetElement) || targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n              return;\n            }\n\n            _this.alignDropDown = _this.toolbarRenderer.renderDropDownButton({\n              iconCss: 'e-justify-left e-icons',\n              cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS,\n              itemName: 'Alignments',\n              items: model.alignmentItems,\n              element: targetElement\n            });\n            break;\n\n          case 'align':\n            _this.imageAlignmentDropDown(type, tbElement, targetElement);\n\n            break;\n\n          case 'display':\n            _this.imageDisplayDropDown(type, tbElement, targetElement);\n\n            break;\n\n          case 'tablerows':\n            _this.rowDropDown(type, tbElement, targetElement);\n\n            break;\n\n          case 'tablecolumns':\n            _this.columnDropDown(type, tbElement, targetElement);\n\n            break;\n\n          case 'tablecell':\n            _this.cellDropDown(type, tbElement, targetElement);\n\n            break;\n\n          case 'tablecellverticalalign':\n            _this.verticalAlignDropDown(type, tbElement, targetElement);\n\n            break;\n\n          case 'styles':\n            _this.tableStylesDropDown(type, tbElement, targetElement);\n\n            break;\n        }\n      }\n    });\n  };\n\n  DropDownButtons.prototype.getUpdateItems = function (items, value) {\n    var dropDownItems = items.slice();\n    dropDownItems.forEach(function (item) {\n      Object.defineProperties(item, {\n        command: {\n          value: value === 'Format' ? 'Formats' : 'Font',\n          enumerable: true\n        },\n        subCommand: {\n          value: value === 'Format' ? item.value : value,\n          enumerable: true\n        }\n      });\n    });\n    return dropDownItems;\n  };\n\n  DropDownButtons.prototype.onPropertyChanged = function (model) {\n    var newProp = model.newProp;\n    var type;\n    var content;\n\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'fontFamily':\n          if (this.parent.inlineMode.enable) {\n            if (!isNullOrUndefined(this.parent.fontFamily.default)) {\n              this.getEditNode().style.fontFamily = this.parent.fontFamily.default;\n            }\n          }\n\n          if (this.fontNameDropDown) {\n            for (var _b = 0, _c = Object.keys(newProp.fontFamily); _b < _c.length; _b++) {\n              var fontFamily = _c[_b];\n\n              switch (fontFamily) {\n                case 'default':\n                case 'width':\n                  {\n                    var fontItems = this.fontNameDropDown.items;\n                    type = !isNullOrUndefined(closest(this.fontNameDropDown.element, '.' + classes.CLS_QUICK_TB)) ? 'quick' : 'toolbar';\n                    var fontNameContent = isNullOrUndefined(this.parent.fontFamily.default) ? fontItems[0].text : this.parent.fontFamily.default;\n                    content = this.dropdownContent(this.parent.fontFamily.width, type, type === 'quick' ? '' : getDropDownValue(fontItems, fontNameContent, 'text', 'text'));\n                    this.fontNameDropDown.setProperties({\n                      content: content\n                    });\n\n                    if (!isNullOrUndefined(this.parent.fontFamily.default)) {\n                      this.getEditNode().style.fontFamily = this.parent.fontFamily.default;\n                    } else {\n                      this.getEditNode().style.removeProperty('font-family');\n                    }\n\n                    break;\n                  }\n\n                case 'items':\n                  this.fontNameDropDown.setProperties({\n                    items: this.getUpdateItems(newProp.fontFamily.items, 'FontName')\n                  });\n                  break;\n              }\n            }\n          }\n\n          break;\n\n        case 'fontSize':\n          if (this.parent.inlineMode) {\n            if (!isNullOrUndefined(this.parent.fontSize.default)) {\n              this.getEditNode().style.fontSize = this.parent.fontSize.default;\n            }\n          }\n\n          if (this.fontSizeDropDown) {\n            for (var _d = 0, _e = Object.keys(newProp.fontSize); _d < _e.length; _d++) {\n              var fontSize = _e[_d];\n\n              switch (fontSize) {\n                case 'default':\n                case 'width':\n                  {\n                    var fontsize = this.fontSizeDropDown.items;\n                    type = !isNullOrUndefined(closest(this.fontSizeDropDown.element, '.' + classes.CLS_QUICK_TB)) ? 'quick' : 'toolbar';\n                    var fontSizeContent = isNullOrUndefined(this.parent.fontSize.default) ? fontsize[1].text : this.parent.fontSize.default;\n                    content = this.dropdownContent(this.parent.fontSize.width, type, getFormattedFontSize(getDropDownValue(fontsize, fontSizeContent.replace(/\\s/g, ''), 'value', 'text')));\n                    this.fontSizeDropDown.setProperties({\n                      content: content\n                    });\n\n                    if (!isNullOrUndefined(this.parent.fontSize.default)) {\n                      this.getEditNode().style.fontSize = this.parent.fontSize.default;\n                    } else {\n                      this.getEditNode().style.removeProperty('font-size');\n                    }\n\n                    break;\n                  }\n\n                case 'items':\n                  this.fontSizeDropDown.setProperties({\n                    items: this.getUpdateItems(newProp.fontSize.items, 'FontSize')\n                  });\n                  break;\n              }\n            }\n          }\n\n          break;\n\n        case 'format':\n          if (this.formatDropDown) {\n            for (var _f = 0, _g = Object.keys(newProp.format); _f < _g.length; _f++) {\n              var format = _g[_f];\n\n              switch (format) {\n                case 'default':\n                case 'width':\n                  {\n                    var formatItems = this.formatDropDown.items;\n                    type = !isNullOrUndefined(closest(this.formatDropDown.element, '.' + classes.CLS_QUICK_TB)) ? 'quick' : 'toolbar';\n                    var formatContent = isNullOrUndefined(this.parent.format.default) ? formatItems[0].text : this.parent.format.default;\n                    content = this.dropdownContent(this.parent.format.width, type, type === 'quick' ? '' : getDropDownValue(formatItems, formatContent, 'text', 'text'));\n                    this.formatDropDown.setProperties({\n                      content: content\n                    });\n                    break;\n                  }\n\n                case 'types':\n                  this.formatDropDown.setProperties({\n                    items: this.getUpdateItems(newProp.format.types, 'Format')\n                  });\n                  break;\n              }\n            }\n          }\n\n          break;\n      }\n    }\n  };\n\n  DropDownButtons.prototype.getEditNode = function () {\n    return this.parent.contentModule.getEditPanel();\n  };\n\n  DropDownButtons.prototype.rowDropDown = function (type, tbElement, targetElement) {\n    targetElement = select('#' + this.parent.getID() + '_' + type + '_TableRows', tbElement);\n\n    if (targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n      return;\n    }\n\n    this.tableRowsDropDown = this.toolbarRenderer.renderDropDownButton({\n      iconCss: 'e-table-rows e-icons',\n      cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_QUICK_DROPDOWN,\n      itemName: 'TableRows',\n      items: model.tableRowsItems,\n      element: targetElement\n    });\n  };\n\n  DropDownButtons.prototype.columnDropDown = function (type, tbElement, targetElement) {\n    targetElement = select('#' + this.parent.getID() + '_' + type + '_TableColumns', tbElement);\n\n    if (targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n      return;\n    }\n\n    this.tableColumnsDropDown = this.toolbarRenderer.renderDropDownButton({\n      iconCss: 'e-table-columns e-icons',\n      cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_QUICK_DROPDOWN,\n      itemName: 'TableColumns',\n      items: model.tableColumnsItems,\n      element: targetElement\n    });\n  };\n\n  DropDownButtons.prototype.cellDropDown = function (type, tbElement, targetElement) {\n    targetElement = select('#' + this.parent.getID() + '_' + type + '_TableCell', tbElement);\n\n    if (targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n      return;\n    }\n\n    this.tableRowsDropDown = this.toolbarRenderer.renderDropDownButton({\n      iconCss: 'e-table-cell e-icons',\n      cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_QUICK_DROPDOWN,\n      itemName: 'TableCell',\n      items: model.tableCellItems,\n      element: targetElement\n    });\n  };\n\n  DropDownButtons.prototype.verticalAlignDropDown = function (type, tbElement, targetElement) {\n    targetElement = select('#' + this.parent.getID() + '_' + type + '_TableCellVerticalAlign', tbElement);\n\n    if (targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n      return;\n    }\n\n    this.tableCellVerticalAlignDropDown = this.toolbarRenderer.renderDropDownButton({\n      iconCss: 'e-table-cell-ver-align e-icons',\n      cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_QUICK_DROPDOWN,\n      itemName: 'TableCellVerticalAlign',\n      items: model.TableCellVerticalAlignItems,\n      element: targetElement\n    });\n  };\n\n  DropDownButtons.prototype.imageDisplayDropDown = function (type, tbElement, targetElement) {\n    targetElement = select('#' + this.parent.getID() + '_' + type + '_Display', tbElement);\n\n    if (targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n      return;\n    }\n\n    this.displayDropDown = this.toolbarRenderer.renderDropDownButton({\n      iconCss: 'e-display e-icons',\n      cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_QUICK_DROPDOWN,\n      itemName: 'Display',\n      items: model.imageDisplayItems,\n      element: targetElement\n    });\n  };\n\n  DropDownButtons.prototype.imageAlignmentDropDown = function (type, tbElement, targetElement) {\n    targetElement = select('#' + this.parent.getID() + '_' + type + '_Align', tbElement);\n\n    if (targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n      return;\n    }\n\n    this.imageAlignDropDown = this.toolbarRenderer.renderDropDownButton({\n      iconCss: 'e-justify-left e-icons',\n      cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ICONS + ' ' + classes.CLS_QUICK_DROPDOWN,\n      itemName: 'Align',\n      items: model.imageAlignItems,\n      element: targetElement\n    });\n  };\n\n  DropDownButtons.prototype.tableStylesDropDown = function (type, tbElement, targetElement) {\n    targetElement = select('#' + this.parent.getID() + '_' + type + '_Styles', tbElement);\n\n    if (targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n      return;\n    }\n\n    this.imageAlignDropDown = this.toolbarRenderer.renderDropDownButton({\n      iconCss: 'e-style e-icons',\n      cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ICONS + ' ' + classes.CLS_QUICK_DROPDOWN,\n      itemName: 'Styles',\n      items: this.parent.tableSettings.styles,\n      element: targetElement\n    });\n  };\n\n  DropDownButtons.prototype.removeDropDownClasses = function (target) {\n    removeClass([target], [classes.CLS_DROPDOWN_BTN, classes.CLS_DROPDOWN_POPUP, classes.CLS_DROPDOWN_ICONS, classes.CLS_DROPDOWN_ITEMS]);\n  };\n  /**\n   * destroyDropDowns method\n   *\n   * @returns {void}\n   * @hidden\n    */\n\n\n  DropDownButtons.prototype.destroyDropDowns = function () {\n    if (this.formatDropDown) {\n      this.removeDropDownClasses(this.formatDropDown.element);\n      this.formatDropDown.destroy();\n    }\n\n    if (this.fontNameDropDown) {\n      this.removeDropDownClasses(this.fontNameDropDown.element);\n      this.fontNameDropDown.destroy();\n    }\n\n    if (this.fontSizeDropDown) {\n      this.removeDropDownClasses(this.fontSizeDropDown.element);\n      this.fontSizeDropDown.destroy();\n    }\n\n    if (this.alignDropDown) {\n      this.removeDropDownClasses(this.alignDropDown.element);\n      this.alignDropDown.destroy();\n    }\n\n    if (this.imageAlignDropDown) {\n      this.removeDropDownClasses(this.imageAlignDropDown.element);\n      this.imageAlignDropDown.destroy();\n    }\n\n    if (this.displayDropDown) {\n      this.removeDropDownClasses(this.displayDropDown.element);\n      this.displayDropDown.destroy();\n    }\n\n    if (this.tableRowsDropDown) {\n      this.removeDropDownClasses(this.tableRowsDropDown.element);\n      this.tableRowsDropDown.destroy();\n    }\n\n    if (this.tableColumnsDropDown) {\n      this.removeDropDownClasses(this.tableColumnsDropDown.element);\n      this.tableColumnsDropDown.destroy();\n    }\n\n    if (this.tableCellVerticalAlignDropDown) {\n      this.removeDropDownClasses(this.tableCellVerticalAlignDropDown.element);\n      this.tableCellVerticalAlignDropDown.destroy();\n    }\n\n    if (this.numberFormatListDropDown) {\n      this.removeDropDownClasses(this.numberFormatListDropDown.element);\n      this.numberFormatListDropDown.destroy();\n    }\n\n    if (this.bulletFormatListDropDown) {\n      this.removeDropDownClasses(this.bulletFormatListDropDown.element);\n      this.bulletFormatListDropDown.destroy();\n    }\n  };\n\n  DropDownButtons.prototype.setRtl = function (args) {\n    if (this.formatDropDown) {\n      this.formatDropDown.setProperties({\n        enableRtl: args.enableRtl\n      });\n    }\n\n    if (this.fontNameDropDown) {\n      this.fontNameDropDown.setProperties({\n        enableRtl: args.enableRtl\n      });\n    }\n\n    if (this.fontSizeDropDown) {\n      this.fontSizeDropDown.setProperties({\n        enableRtl: args.enableRtl\n      });\n    }\n\n    if (this.alignDropDown) {\n      this.alignDropDown.setProperties({\n        enableRtl: args.enableRtl\n      });\n    }\n\n    if (this.imageAlignDropDown) {\n      this.imageAlignDropDown.setProperties({\n        enableRtl: args.enableRtl\n      });\n    }\n\n    if (this.displayDropDown) {\n      this.displayDropDown.setProperties({\n        enableRtl: args.enableRtl\n      });\n    }\n\n    if (this.numberFormatListDropDown) {\n      this.numberFormatListDropDown.setProperties({\n        enableRtl: args.enableRtl\n      });\n    }\n\n    if (this.bulletFormatListDropDown) {\n      this.bulletFormatListDropDown.setProperties({\n        enableRtl: args.enableRtl\n      });\n    }\n  };\n\n  DropDownButtons.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(events.beforeDropDownItemRender, this.beforeRender, this);\n    this.parent.on(events.iframeMouseDown, this.onIframeMouseDown, this);\n    this.parent.on(events.rtlMode, this.setRtl, this);\n    this.parent.on(events.destroy, this.removeEventListener, this);\n    this.parent.on(events.modelChanged, this.onPropertyChanged, this);\n  };\n\n  DropDownButtons.prototype.onIframeMouseDown = function () {\n    dispatchEvent(document, 'mousedown');\n  };\n\n  DropDownButtons.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.iframeMouseDown, this.onIframeMouseDown);\n    this.parent.off(events.rtlMode, this.setRtl);\n    this.parent.off(events.beforeDropDownItemRender, this.beforeRender);\n    this.parent.off(events.destroy, this.removeEventListener);\n    this.parent.off(events.modelChanged, this.onPropertyChanged);\n  };\n\n  return DropDownButtons;\n}();\n\nexport { DropDownButtons };","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/actions/dropdown-buttons.js"],"names":["addClass","isNullOrUndefined","removeClass","select","closest","RenderType","getIndex","events","classes","getDropDownValue","getFormattedFontSize","getTooltipText","model","dispatchEvent","DropDownButtons","parent","serviceLocator","locator","renderFactory","getService","addEventListener","prototype","initializeInstance","toolbarRenderer","getRenderer","Toolbar","beforeRender","args","item","cssClass","element","command","subCommand","setAttribute","toLocaleLowerCase","dropdownContent","width","type","content","renderDropDowns","_this","containerType","tbElement","container","templateItems","forEach","targetElement","undefined","items","getID","classList","contains","CLS_DROPDOWN_BTN","formatOLItem","numberFormatList","types","slice","Object","defineProperties","value","enumerable","numberFormatListDropDown","renderListDropDown","CLS_RTE_ELEMENTS","CLS_ICONS","itemName","formatULItem","bulletFormatList","bulletFormatListDropDown","formatItem","format","formatContent","default","text","formatDropDown","renderDropDownButton","iconCss","CLS_DROPDOWN_POPUP","CLS_DROPDOWN_ITEMS","CLS_FORMATS_TB_BTN","fontItem","fontFamily","fontNameContent","fontNameDropDown","CLS_FONT_NAME_TB_BTN","getEditNode","style","fontsize","fontSize","fontSizeContent","fontSizeDropDown","replace","CLS_FONT_SIZE_TB_BTN","alignDropDown","alignmentItems","imageAlignmentDropDown","imageDisplayDropDown","rowDropDown","columnDropDown","cellDropDown","verticalAlignDropDown","tableStylesDropDown","getUpdateItems","dropDownItems","onPropertyChanged","newProp","_i","_a","keys","length","prop","inlineMode","enable","_b","_c","fontItems","CLS_QUICK_TB","setProperties","removeProperty","_d","_e","_f","_g","formatItems","contentModule","getEditPanel","tableRowsDropDown","CLS_QUICK_DROPDOWN","tableRowsItems","tableColumnsDropDown","tableColumnsItems","tableCellItems","tableCellVerticalAlignDropDown","TableCellVerticalAlignItems","displayDropDown","imageDisplayItems","imageAlignDropDown","CLS_DROPDOWN_ICONS","imageAlignItems","tableSettings","styles","removeDropDownClasses","target","destroyDropDowns","destroy","setRtl","enableRtl","isDestroyed","on","beforeDropDownItemRender","iframeMouseDown","onIframeMouseDown","rtlMode","removeEventListener","modelChanged","document","off"],"mappings":"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","sourcesContent":["import { addClass, isNullOrUndefined, removeClass, select, closest } from '@syncfusion/ej2-base';\nimport { RenderType } from '../base/enum';\nimport { getIndex } from '../base/util';\nimport * as events from '../base/constant';\nimport * as classes from '../base/classes';\nimport { getDropDownValue, getFormattedFontSize, getTooltipText } from '../base/util';\nimport * as model from '../models/items';\nimport { dispatchEvent } from '../base/util';\n/**\n * `Toolbar` module is used to handle Toolbar actions.\n */\nvar DropDownButtons = /** @class */ (function () {\n    function DropDownButtons(parent, serviceLocator) {\n        this.parent = parent;\n        this.locator = serviceLocator;\n        this.renderFactory = this.locator.getService('rendererFactory');\n        this.addEventListener();\n    }\n    DropDownButtons.prototype.initializeInstance = function () {\n        this.toolbarRenderer = this.renderFactory.getRenderer(RenderType.Toolbar);\n    };\n    DropDownButtons.prototype.beforeRender = function (args) {\n        var item = args.item;\n        if (item.cssClass) {\n            addClass([args.element], item.cssClass);\n        }\n        if (item.command === 'Alignments' || item.subCommand === 'JustifyLeft'\n            || item.subCommand === 'JustifyRight' || item.subCommand === 'JustifyCenter') {\n            args.element.setAttribute('title', getTooltipText(item.subCommand.toLocaleLowerCase(), this.locator));\n        }\n    };\n    DropDownButtons.prototype.dropdownContent = function (width, type, content) {\n        return ('<span style=\"display: inline-flex;' + 'width:' + ((type === 'quick') ? 'auto' : width) + '\" >' +\n            '<span class=\"e-rte-dropdown-btn-text\">' + content + '</span></span>');\n    };\n    /**\n     * renderDropDowns method\n     *\n     * @param {IDropDownRenderArgs} args - specifies the arguments\n     * @returns {void}\n     * @hidden\n\n     */\n    DropDownButtons.prototype.renderDropDowns = function (args) {\n        var _this = this;\n        this.initializeInstance();\n        var type = args.containerType;\n        var tbElement = args.container;\n        model.templateItems.forEach(function (item) {\n            var targetElement = undefined;\n            if (getIndex(item, args.items) !== -1) {\n                switch (item) {\n                    case 'numberformatlist': {\n                        targetElement = select('#' + _this.parent.getID() + '_' + type + '_NumberFormatList', tbElement);\n                        if (isNullOrUndefined(targetElement) || targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n                            return;\n                        }\n                        var formatOLItem = _this.parent.numberFormatList.types.slice();\n                        formatOLItem.forEach(function (item) {\n                            Object.defineProperties(item, {\n                                command: { value: 'Lists', enumerable: true }, subCommand: { value: 'NumberFormatList', enumerable: true }\n                            });\n                        });\n                        _this.numberFormatListDropDown = _this.toolbarRenderer.renderListDropDown({\n                            cssClass: 'e-order-list' + ' ' + classes.CLS_RTE_ELEMENTS + ' ' + classes.CLS_ICONS,\n                            itemName: 'NumberFormatList', items: formatOLItem, element: targetElement\n                        });\n                        break;\n                    }\n                    case 'bulletformatlist': {\n                        targetElement = select('#' + _this.parent.getID() + '_' + type + '_BulletFormatList', tbElement);\n                        if (isNullOrUndefined(targetElement) || targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n                            return;\n                        }\n                        var formatULItem = _this.parent.bulletFormatList.types.slice();\n                        formatULItem.forEach(function (item) {\n                            Object.defineProperties(item, {\n                                command: { value: 'Lists', enumerable: true }, subCommand: { value: 'BulletFormatList', enumerable: true }\n                            });\n                        });\n                        _this.bulletFormatListDropDown = _this.toolbarRenderer.renderListDropDown({\n                            cssClass: 'e-unorder-list' + ' ' + classes.CLS_RTE_ELEMENTS + ' ' + classes.CLS_ICONS,\n                            itemName: 'BulletFormatList', items: formatULItem, element: targetElement\n                        });\n                        break;\n                    }\n                    case 'formats': {\n                        targetElement = select('#' + _this.parent.getID() + '_' + type + '_Formats', tbElement);\n                        if (isNullOrUndefined(targetElement) || targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n                            return;\n                        }\n                        var formatItem = _this.parent.format.types.slice();\n                        formatItem.forEach(function (item) {\n                            Object.defineProperties(item, {\n                                command: { value: 'Formats', enumerable: true }, subCommand: { value: item.value, enumerable: true }\n                            });\n                        });\n                        var formatContent = isNullOrUndefined(_this.parent.format.default) ? formatItem[0].text :\n                            _this.parent.format.default;\n                        _this.formatDropDown = _this.toolbarRenderer.renderDropDownButton({\n                            iconCss: ((type === 'quick') ? 'e-formats e-icons' : ''),\n                            content: _this.dropdownContent(_this.parent.format.width, type, ((type === 'quick') ? '' : getDropDownValue(formatItem, formatContent, 'text', 'text'))),\n                            cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_FORMATS_TB_BTN,\n                            itemName: 'Formats', items: formatItem, element: targetElement\n                        });\n                        break;\n                    }\n                    case 'fontname': {\n                        targetElement = select('#' + _this.parent.getID() + '_' + type + '_FontName', tbElement);\n                        if (isNullOrUndefined(targetElement) || targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n                            return;\n                        }\n                        var fontItem = _this.parent.fontFamily.items.slice();\n                        fontItem.forEach(function (item) {\n                            Object.defineProperties(item, {\n                                command: { value: 'Font', enumerable: true }, subCommand: { value: 'FontName', enumerable: true }\n                            });\n                        });\n                        var fontNameContent = isNullOrUndefined(_this.parent.fontFamily.default) ? fontItem[0].text :\n                            _this.parent.fontFamily.default;\n                        _this.fontNameDropDown = _this.toolbarRenderer.renderDropDownButton({\n                            iconCss: ((type === 'quick') ? 'e-font-name e-icons' : ''),\n                            content: _this.dropdownContent(_this.parent.fontFamily.width, type, ((type === 'quick') ? '' : getDropDownValue(fontItem, fontNameContent, 'text', 'text'))),\n                            cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_FONT_NAME_TB_BTN,\n                            itemName: 'FontName', items: fontItem, element: targetElement\n                        });\n                        if (!isNullOrUndefined(_this.parent.fontFamily.default)) {\n                            _this.getEditNode().style.fontFamily = _this.parent.fontFamily.default;\n                        }\n                        break;\n                    }\n                    case 'fontsize': {\n                        targetElement = select('#' + _this.parent.getID() + '_' + type + '_FontSize', tbElement);\n                        if (isNullOrUndefined(targetElement) || targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n                            return;\n                        }\n                        var fontsize = _this.parent.fontSize.items.slice();\n                        fontsize.forEach(function (item) {\n                            Object.defineProperties(item, {\n                                command: { value: 'Font', enumerable: true }, subCommand: { value: 'FontSize', enumerable: true }\n                            });\n                        });\n                        var fontSizeContent = isNullOrUndefined(_this.parent.fontSize.default) ? fontsize[1].text :\n                            _this.parent.fontSize.default;\n                        _this.fontSizeDropDown = _this.toolbarRenderer.renderDropDownButton({\n                            content: _this.dropdownContent(_this.parent.fontSize.width, type, getFormattedFontSize(getDropDownValue(fontsize, fontSizeContent.replace(/\\s/g, ''), 'value', 'text'))),\n                            cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_FONT_SIZE_TB_BTN,\n                            itemName: 'FontSize', items: fontsize, element: targetElement\n                        });\n                        if (!isNullOrUndefined(_this.parent.fontSize.default)) {\n                            _this.getEditNode().style.fontSize = _this.parent.fontSize.default;\n                        }\n                        break;\n                    }\n                    case 'alignments':\n                        targetElement = select('#' + _this.parent.getID() + '_' + type + '_Alignments', tbElement);\n                        if (isNullOrUndefined(targetElement) || targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n                            return;\n                        }\n                        _this.alignDropDown = _this.toolbarRenderer.renderDropDownButton({\n                            iconCss: 'e-justify-left e-icons',\n                            cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS,\n                            itemName: 'Alignments', items: model.alignmentItems, element: targetElement\n                        });\n                        break;\n                    case 'align':\n                        _this.imageAlignmentDropDown(type, tbElement, targetElement);\n                        break;\n                    case 'display':\n                        _this.imageDisplayDropDown(type, tbElement, targetElement);\n                        break;\n                    case 'tablerows':\n                        _this.rowDropDown(type, tbElement, targetElement);\n                        break;\n                    case 'tablecolumns':\n                        _this.columnDropDown(type, tbElement, targetElement);\n                        break;\n                    case 'tablecell':\n                        _this.cellDropDown(type, tbElement, targetElement);\n                        break;\n                    case 'tablecellverticalalign':\n                        _this.verticalAlignDropDown(type, tbElement, targetElement);\n                        break;\n                    case 'styles':\n                        _this.tableStylesDropDown(type, tbElement, targetElement);\n                        break;\n                }\n            }\n        });\n    };\n    DropDownButtons.prototype.getUpdateItems = function (items, value) {\n        var dropDownItems = items.slice();\n        dropDownItems.forEach(function (item) {\n            Object.defineProperties(item, {\n                command: { value: (value === 'Format' ? 'Formats' : 'Font'), enumerable: true },\n                subCommand: { value: (value === 'Format' ? item.value : value), enumerable: true }\n            });\n        });\n        return dropDownItems;\n    };\n    DropDownButtons.prototype.onPropertyChanged = function (model) {\n        var newProp = model.newProp;\n        var type;\n        var content;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'fontFamily':\n                    if (this.parent.inlineMode.enable) {\n                        if (!isNullOrUndefined(this.parent.fontFamily.default)) {\n                            this.getEditNode().style.fontFamily = this.parent.fontFamily.default;\n                        }\n                    }\n                    if (this.fontNameDropDown) {\n                        for (var _b = 0, _c = Object.keys(newProp.fontFamily); _b < _c.length; _b++) {\n                            var fontFamily = _c[_b];\n                            switch (fontFamily) {\n                                case 'default':\n                                case 'width': {\n                                    var fontItems = this.fontNameDropDown.items;\n                                    type = !isNullOrUndefined(closest(this.fontNameDropDown.element, '.' + classes.CLS_QUICK_TB)) ?\n                                        'quick' : 'toolbar';\n                                    var fontNameContent = isNullOrUndefined(this.parent.fontFamily.default) ? fontItems[0].text :\n                                        this.parent.fontFamily.default;\n                                    content = this.dropdownContent(this.parent.fontFamily.width, type, ((type === 'quick') ? '' : getDropDownValue(fontItems, fontNameContent, 'text', 'text')));\n                                    this.fontNameDropDown.setProperties({ content: content });\n                                    if (!isNullOrUndefined(this.parent.fontFamily.default)) {\n                                        this.getEditNode().style.fontFamily = this.parent.fontFamily.default;\n                                    }\n                                    else {\n                                        this.getEditNode().style.removeProperty('font-family');\n                                    }\n                                    break;\n                                }\n                                case 'items':\n                                    this.fontNameDropDown.setProperties({\n                                        items: this.getUpdateItems(newProp.fontFamily.items, 'FontName')\n                                    });\n                                    break;\n                            }\n                        }\n                    }\n                    break;\n                case 'fontSize':\n                    if (this.parent.inlineMode) {\n                        if (!isNullOrUndefined(this.parent.fontSize.default)) {\n                            this.getEditNode().style.fontSize = this.parent.fontSize.default;\n                        }\n                    }\n                    if (this.fontSizeDropDown) {\n                        for (var _d = 0, _e = Object.keys(newProp.fontSize); _d < _e.length; _d++) {\n                            var fontSize = _e[_d];\n                            switch (fontSize) {\n                                case 'default':\n                                case 'width': {\n                                    var fontsize = this.fontSizeDropDown.items;\n                                    type = !isNullOrUndefined(closest(this.fontSizeDropDown.element, '.' + classes.CLS_QUICK_TB)) ? 'quick' : 'toolbar';\n                                    var fontSizeContent = isNullOrUndefined(this.parent.fontSize.default) ? fontsize[1].text :\n                                        this.parent.fontSize.default;\n                                    content = this.dropdownContent(this.parent.fontSize.width, type, getFormattedFontSize(getDropDownValue(fontsize, fontSizeContent.replace(/\\s/g, ''), 'value', 'text')));\n                                    this.fontSizeDropDown.setProperties({ content: content });\n                                    if (!isNullOrUndefined(this.parent.fontSize.default)) {\n                                        this.getEditNode().style.fontSize = this.parent.fontSize.default;\n                                    }\n                                    else {\n                                        this.getEditNode().style.removeProperty('font-size');\n                                    }\n                                    break;\n                                }\n                                case 'items':\n                                    this.fontSizeDropDown.setProperties({\n                                        items: this.getUpdateItems(newProp.fontSize.items, 'FontSize')\n                                    });\n                                    break;\n                            }\n                        }\n                    }\n                    break;\n                case 'format':\n                    if (this.formatDropDown) {\n                        for (var _f = 0, _g = Object.keys(newProp.format); _f < _g.length; _f++) {\n                            var format = _g[_f];\n                            switch (format) {\n                                case 'default':\n                                case 'width': {\n                                    var formatItems = this.formatDropDown.items;\n                                    type = !isNullOrUndefined(closest(this.formatDropDown.element, '.' + classes.CLS_QUICK_TB)) ? 'quick' : 'toolbar';\n                                    var formatContent = isNullOrUndefined(this.parent.format.default) ? formatItems[0].text :\n                                        this.parent.format.default;\n                                    content = this.dropdownContent(this.parent.format.width, type, ((type === 'quick') ? '' : getDropDownValue(formatItems, formatContent, 'text', 'text')));\n                                    this.formatDropDown.setProperties({ content: content });\n                                    break;\n                                }\n                                case 'types':\n                                    this.formatDropDown.setProperties({\n                                        items: this.getUpdateItems(newProp.format.types, 'Format')\n                                    });\n                                    break;\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    DropDownButtons.prototype.getEditNode = function () {\n        return this.parent.contentModule.getEditPanel();\n    };\n    DropDownButtons.prototype.rowDropDown = function (type, tbElement, targetElement) {\n        targetElement = select('#' + this.parent.getID() + '_' + type + '_TableRows', tbElement);\n        if (targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n            return;\n        }\n        this.tableRowsDropDown = this.toolbarRenderer.renderDropDownButton({\n            iconCss: 'e-table-rows e-icons',\n            cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_QUICK_DROPDOWN,\n            itemName: 'TableRows',\n            items: model.tableRowsItems,\n            element: targetElement\n        });\n    };\n    DropDownButtons.prototype.columnDropDown = function (type, tbElement, targetElement) {\n        targetElement = select('#' + this.parent.getID() + '_' + type + '_TableColumns', tbElement);\n        if (targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n            return;\n        }\n        this.tableColumnsDropDown = this.toolbarRenderer.renderDropDownButton({\n            iconCss: 'e-table-columns e-icons',\n            cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_QUICK_DROPDOWN,\n            itemName: 'TableColumns',\n            items: model.tableColumnsItems,\n            element: targetElement\n        });\n    };\n    DropDownButtons.prototype.cellDropDown = function (type, tbElement, targetElement) {\n        targetElement = select('#' + this.parent.getID() + '_' + type + '_TableCell', tbElement);\n        if (targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n            return;\n        }\n        this.tableRowsDropDown = this.toolbarRenderer.renderDropDownButton({\n            iconCss: 'e-table-cell e-icons',\n            cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_QUICK_DROPDOWN,\n            itemName: 'TableCell',\n            items: model.tableCellItems,\n            element: targetElement\n        });\n    };\n    DropDownButtons.prototype.verticalAlignDropDown = function (type, tbElement, targetElement) {\n        targetElement = select('#' + this.parent.getID() + '_' + type + '_TableCellVerticalAlign', tbElement);\n        if (targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n            return;\n        }\n        this.tableCellVerticalAlignDropDown = this.toolbarRenderer.renderDropDownButton({\n            iconCss: 'e-table-cell-ver-align e-icons',\n            cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_QUICK_DROPDOWN,\n            itemName: 'TableCellVerticalAlign',\n            items: model.TableCellVerticalAlignItems,\n            element: targetElement\n        });\n    };\n    DropDownButtons.prototype.imageDisplayDropDown = function (type, tbElement, targetElement) {\n        targetElement = select('#' + this.parent.getID() + '_' + type + '_Display', tbElement);\n        if (targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n            return;\n        }\n        this.displayDropDown = this.toolbarRenderer.renderDropDownButton({\n            iconCss: 'e-display e-icons',\n            cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ITEMS + ' ' + classes.CLS_QUICK_DROPDOWN,\n            itemName: 'Display',\n            items: model.imageDisplayItems,\n            element: targetElement\n        });\n    };\n    DropDownButtons.prototype.imageAlignmentDropDown = function (type, tbElement, targetElement) {\n        targetElement = select('#' + this.parent.getID() + '_' + type + '_Align', tbElement);\n        if (targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n            return;\n        }\n        this.imageAlignDropDown = this.toolbarRenderer.renderDropDownButton({\n            iconCss: 'e-justify-left e-icons',\n            cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ICONS + ' ' + classes.CLS_QUICK_DROPDOWN,\n            itemName: 'Align',\n            items: model.imageAlignItems,\n            element: targetElement\n        });\n    };\n    DropDownButtons.prototype.tableStylesDropDown = function (type, tbElement, targetElement) {\n        targetElement = select('#' + this.parent.getID() + '_' + type + '_Styles', tbElement);\n        if (targetElement.classList.contains(classes.CLS_DROPDOWN_BTN)) {\n            return;\n        }\n        this.imageAlignDropDown = this.toolbarRenderer.renderDropDownButton({\n            iconCss: 'e-style e-icons',\n            cssClass: classes.CLS_DROPDOWN_POPUP + ' ' + classes.CLS_DROPDOWN_ICONS + ' ' + classes.CLS_QUICK_DROPDOWN,\n            itemName: 'Styles',\n            items: this.parent.tableSettings.styles,\n            element: targetElement\n        });\n    };\n    DropDownButtons.prototype.removeDropDownClasses = function (target) {\n        removeClass([target], [\n            classes.CLS_DROPDOWN_BTN,\n            classes.CLS_DROPDOWN_POPUP,\n            classes.CLS_DROPDOWN_ICONS,\n            classes.CLS_DROPDOWN_ITEMS\n        ]);\n    };\n    /**\n     * destroyDropDowns method\n     *\n     * @returns {void}\n     * @hidden\n\n     */\n    DropDownButtons.prototype.destroyDropDowns = function () {\n        if (this.formatDropDown) {\n            this.removeDropDownClasses(this.formatDropDown.element);\n            this.formatDropDown.destroy();\n        }\n        if (this.fontNameDropDown) {\n            this.removeDropDownClasses(this.fontNameDropDown.element);\n            this.fontNameDropDown.destroy();\n        }\n        if (this.fontSizeDropDown) {\n            this.removeDropDownClasses(this.fontSizeDropDown.element);\n            this.fontSizeDropDown.destroy();\n        }\n        if (this.alignDropDown) {\n            this.removeDropDownClasses(this.alignDropDown.element);\n            this.alignDropDown.destroy();\n        }\n        if (this.imageAlignDropDown) {\n            this.removeDropDownClasses(this.imageAlignDropDown.element);\n            this.imageAlignDropDown.destroy();\n        }\n        if (this.displayDropDown) {\n            this.removeDropDownClasses(this.displayDropDown.element);\n            this.displayDropDown.destroy();\n        }\n        if (this.tableRowsDropDown) {\n            this.removeDropDownClasses(this.tableRowsDropDown.element);\n            this.tableRowsDropDown.destroy();\n        }\n        if (this.tableColumnsDropDown) {\n            this.removeDropDownClasses(this.tableColumnsDropDown.element);\n            this.tableColumnsDropDown.destroy();\n        }\n        if (this.tableCellVerticalAlignDropDown) {\n            this.removeDropDownClasses(this.tableCellVerticalAlignDropDown.element);\n            this.tableCellVerticalAlignDropDown.destroy();\n        }\n        if (this.numberFormatListDropDown) {\n            this.removeDropDownClasses(this.numberFormatListDropDown.element);\n            this.numberFormatListDropDown.destroy();\n        }\n        if (this.bulletFormatListDropDown) {\n            this.removeDropDownClasses(this.bulletFormatListDropDown.element);\n            this.bulletFormatListDropDown.destroy();\n        }\n    };\n    DropDownButtons.prototype.setRtl = function (args) {\n        if (this.formatDropDown) {\n            this.formatDropDown.setProperties({ enableRtl: args.enableRtl });\n        }\n        if (this.fontNameDropDown) {\n            this.fontNameDropDown.setProperties({ enableRtl: args.enableRtl });\n        }\n        if (this.fontSizeDropDown) {\n            this.fontSizeDropDown.setProperties({ enableRtl: args.enableRtl });\n        }\n        if (this.alignDropDown) {\n            this.alignDropDown.setProperties({ enableRtl: args.enableRtl });\n        }\n        if (this.imageAlignDropDown) {\n            this.imageAlignDropDown.setProperties({ enableRtl: args.enableRtl });\n        }\n        if (this.displayDropDown) {\n            this.displayDropDown.setProperties({ enableRtl: args.enableRtl });\n        }\n        if (this.numberFormatListDropDown) {\n            this.numberFormatListDropDown.setProperties({ enableRtl: args.enableRtl });\n        }\n        if (this.bulletFormatListDropDown) {\n            this.bulletFormatListDropDown.setProperties({ enableRtl: args.enableRtl });\n        }\n    };\n    DropDownButtons.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.beforeDropDownItemRender, this.beforeRender, this);\n        this.parent.on(events.iframeMouseDown, this.onIframeMouseDown, this);\n        this.parent.on(events.rtlMode, this.setRtl, this);\n        this.parent.on(events.destroy, this.removeEventListener, this);\n        this.parent.on(events.modelChanged, this.onPropertyChanged, this);\n    };\n    DropDownButtons.prototype.onIframeMouseDown = function () {\n        dispatchEvent(document, 'mousedown');\n    };\n    DropDownButtons.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.iframeMouseDown, this.onIframeMouseDown);\n        this.parent.off(events.rtlMode, this.setRtl);\n        this.parent.off(events.beforeDropDownItemRender, this.beforeRender);\n        this.parent.off(events.destroy, this.removeEventListener);\n        this.parent.off(events.modelChanged, this.onPropertyChanged);\n    };\n    return DropDownButtons;\n}());\nexport { DropDownButtons };\n"]},"metadata":{},"sourceType":"module"}