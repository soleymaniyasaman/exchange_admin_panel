{"ast":null,"code":"import dayjs from \"dayjs\";\nimport jalaliday from \"jalaliday\";\nimport { noteOnce } from \"rc-util/lib/warning\";\nimport weekday from \"dayjs/plugin/weekday\";\nimport localeData from \"dayjs/plugin/localeData\";\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\nimport weekYear from \"dayjs/plugin/weekYear\";\nimport advancedFormat from \"dayjs/plugin/advancedFormat\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport { default as faLocale } from \"./locale\";\ndayjs.extend(customParseFormat);\ndayjs.extend(advancedFormat);\ndayjs.extend(weekday);\ndayjs.extend(localeData);\ndayjs.extend(weekOfYear);\ndayjs.extend(weekYear);\ndayjs.extend(jalaliday);\ndayjs.locale(faLocale, undefined, true);\ndayjs.extend(function (o, c) {\n  // todo support Wo (ISO week)\n  var proto = c.prototype;\n  var oldFormat = proto.format;\n\n  proto.format = function f(formatStr) {\n    var str = (formatStr || '').replace('Wo', 'wo');\n    return oldFormat.bind(this)(str);\n  };\n});\nvar localeMap = {\n  en_GB: \"en-gb\",\n  en_US: \"en\",\n  zh_CN: \"zh-cn\",\n  zh_TW: \"zh-tw\",\n  fa_IR: \"fa\"\n};\n\nvar parseLocale = function parseLocale(locale) {\n  var mapLocale = localeMap[locale];\n  return mapLocale || locale.split(\"_\")[0];\n};\n\nvar parseNoMatchNotice = function parseNoMatchNotice() {\n  /* istanbul ignore next */\n  noteOnce(false, \"Not match any format. Please help to fire a issue about this.\");\n};\n\nvar generateJalaliConfig = {\n  // get\n  getNow: function getNow() {\n    return dayjs().calendar(\"jalali\");\n  },\n  getFixedDate: function getFixedDate(string) {\n    return dayjs(string, 'YYYY-MM-DD');\n  },\n  getEndDate: function getEndDate(date) {\n    return date.endOf('month');\n  },\n  getWeekDay: function getWeekDay(date) {\n    var clone = date.locale('en');\n    return clone.weekday() + clone.localeData().firstDayOfWeek();\n  },\n  getYear: function getYear(date) {\n    return date === null || date === void 0 ? void 0 : date.year();\n  },\n  getMonth: function getMonth(date) {\n    return date.month();\n  },\n  getDate: function getDate(date) {\n    return date.date();\n  },\n  getHour: function getHour(date) {\n    return date.hour();\n  },\n  getMinute: function getMinute(date) {\n    return date.minute();\n  },\n  getSecond: function getSecond(date) {\n    return date.second();\n  },\n  // set\n  addYear: function addYear(date, diff) {\n    return date.add(diff, 'year');\n  },\n  addMonth: function addMonth(date, diff) {\n    return date.add(diff, 'month');\n  },\n  addDate: function addDate(date, diff) {\n    return date.add(diff, 'day');\n  },\n  setYear: function setYear(date, year) {\n    return date.year(year);\n  },\n  setMonth: function setMonth(date, month) {\n    return date.month(month);\n  },\n  setDate: function setDate(date, num) {\n    return date.date(num);\n  },\n  setHour: function setHour(date, hour) {\n    return date.hour(hour);\n  },\n  setMinute: function setMinute(date, minute) {\n    return date.minute(minute);\n  },\n  setSecond: function setSecond(date, second) {\n    return date.second(second);\n  },\n  // Compare\n  isAfter: function isAfter(date1, date2) {\n    return date1.isAfter(date2);\n  },\n  isValidate: function isValidate(date) {\n    return date.isValid();\n  },\n  locale: {\n    getWeekFirstDay: function getWeekFirstDay(locale) {\n      return dayjs().locale(parseLocale(locale)).localeData().firstDayOfWeek();\n    },\n    getWeek: function getWeek(locale, date) {\n      return date.locale(parseLocale(locale)).week();\n    },\n    getShortWeekDays: function getShortWeekDays(locale) {\n      return dayjs().locale(parseLocale(locale)).localeData().weekdaysMin();\n    },\n    getShortMonths: function getShortMonths(locale) {\n      return dayjs().locale(parseLocale(locale)).localeData().monthsShort();\n    },\n    format: function format(locale, date, _format) {\n      return date.locale(parseLocale(locale)).format(_format);\n    },\n    parse: function parse(locale, text, formats) {\n      var localeStr = parseLocale(locale);\n\n      for (var i = 0; i < formats.length; i += 1) {\n        var format = formats[i];\n        var formatText = text;\n\n        if (format.includes(\"wo\") || format.includes(\"Wo\")) {\n          // parse Wo\n          var year = formatText.split(\"-\")[0];\n          var weekStr = formatText.split(\"-\")[1];\n          var firstWeek = dayjs(year, \"YYYY\").startOf(\"year\").locale(localeStr);\n\n          for (var j = 0; j <= 52; j += 1) {\n            var nextWeek = firstWeek.add(j, \"week\");\n\n            if (nextWeek.format(\"Wo\") === weekStr) {\n              return nextWeek;\n            }\n          }\n\n          parseNoMatchNotice();\n          return null;\n        }\n\n        var date = dayjs(formatText, format).locale(localeStr);\n\n        if (date.isValid()) {\n          return date;\n        }\n      }\n\n      parseNoMatchNotice();\n      return null;\n    }\n  }\n};\nexport default generateJalaliConfig;","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/antd-jalali/dist/esm/jalali/generateJalaliConfig.js"],"names":["dayjs","jalaliday","noteOnce","weekday","localeData","weekOfYear","weekYear","advancedFormat","customParseFormat","default","faLocale","extend","locale","undefined","o","c","proto","prototype","oldFormat","format","f","formatStr","str","replace","bind","localeMap","en_GB","en_US","zh_CN","zh_TW","fa_IR","parseLocale","mapLocale","split","parseNoMatchNotice","generateJalaliConfig","getNow","calendar","getFixedDate","string","getEndDate","date","endOf","getWeekDay","clone","firstDayOfWeek","getYear","year","getMonth","month","getDate","getHour","hour","getMinute","minute","getSecond","second","addYear","diff","add","addMonth","addDate","setYear","setMonth","setDate","num","setHour","setMinute","setSecond","isAfter","date1","date2","isValidate","isValid","getWeekFirstDay","getWeek","week","getShortWeekDays","weekdaysMin","getShortMonths","monthsShort","parse","text","formats","localeStr","i","length","formatText","includes","weekStr","firstWeek","startOf","j","nextWeek"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,UAApC;AACAV,KAAK,CAACW,MAAN,CAAaH,iBAAb;AACAR,KAAK,CAACW,MAAN,CAAaJ,cAAb;AACAP,KAAK,CAACW,MAAN,CAAaR,OAAb;AACAH,KAAK,CAACW,MAAN,CAAaP,UAAb;AACAJ,KAAK,CAACW,MAAN,CAAaN,UAAb;AACAL,KAAK,CAACW,MAAN,CAAaL,QAAb;AACAN,KAAK,CAACW,MAAN,CAAaV,SAAb;AACAD,KAAK,CAACY,MAAN,CAAaF,QAAb,EAAuBG,SAAvB,EAAkC,IAAlC;AACAb,KAAK,CAACW,MAAN,CAAa,UAAUG,CAAV,EAAaC,CAAb,EAAgB;AACzB;AACA,MAAIC,KAAK,GAAGD,CAAC,CAACE,SAAd;AACA,MAAIC,SAAS,GAAGF,KAAK,CAACG,MAAtB;;AACAH,EAAAA,KAAK,CAACG,MAAN,GAAe,SAASC,CAAT,CAAWC,SAAX,EAAsB;AACjC,QAAIC,GAAG,GAAG,CAACD,SAAS,IAAI,EAAd,EAAkBE,OAAlB,CAA0B,IAA1B,EAAgC,IAAhC,CAAV;AACA,WAAOL,SAAS,CAACM,IAAV,CAAe,IAAf,EAAqBF,GAArB,CAAP;AACH,GAHD;AAIH,CARD;AASA,IAAIG,SAAS,GAAG;AACZC,EAAAA,KAAK,EAAE,OADK;AAEZC,EAAAA,KAAK,EAAE,IAFK;AAGZC,EAAAA,KAAK,EAAE,OAHK;AAIZC,EAAAA,KAAK,EAAE,OAJK;AAKZC,EAAAA,KAAK,EAAE;AALK,CAAhB;;AAOA,IAAIC,WAAW,GAAG,SAAdA,WAAc,CAAUnB,MAAV,EAAkB;AAChC,MAAIoB,SAAS,GAAGP,SAAS,CAACb,MAAD,CAAzB;AACA,SAAOoB,SAAS,IAAIpB,MAAM,CAACqB,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAApB;AACH,CAHD;;AAIA,IAAIC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAY;AACjC;AACAhC,EAAAA,QAAQ,CAAC,KAAD,EAAQ,+DAAR,CAAR;AACH,CAHD;;AAIA,IAAIiC,oBAAoB,GAAG;AACvB;AACAC,EAAAA,MAAM,EAAE,kBAAY;AAAE,WAAOpC,KAAK,GAAGqC,QAAR,CAAiB,QAAjB,CAAP;AAAoC,GAFnC;AAGvBC,EAAAA,YAAY,EAAE,sBAAUC,MAAV,EAAkB;AAAE,WAAOvC,KAAK,CAACuC,MAAD,EAAS,YAAT,CAAZ;AAAqC,GAHhD;AAIvBC,EAAAA,UAAU,EAAE,oBAAUC,IAAV,EAAgB;AAAE,WAAOA,IAAI,CAACC,KAAL,CAAW,OAAX,CAAP;AAA6B,GAJpC;AAKvBC,EAAAA,UAAU,EAAE,oBAAUF,IAAV,EAAgB;AACxB,QAAIG,KAAK,GAAGH,IAAI,CAAC7B,MAAL,CAAY,IAAZ,CAAZ;AACA,WAAOgC,KAAK,CAACzC,OAAN,KAAkByC,KAAK,CAACxC,UAAN,GAAmByC,cAAnB,EAAzB;AACH,GARsB;AASvBC,EAAAA,OAAO,EAAE,iBAAUL,IAAV,EAAgB;AAAE,WAAOA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACM,IAAL,EAAnD;AAAiE,GATrE;AAUvBC,EAAAA,QAAQ,EAAE,kBAAUP,IAAV,EAAgB;AAAE,WAAOA,IAAI,CAACQ,KAAL,EAAP;AAAsB,GAV3B;AAWvBC,EAAAA,OAAO,EAAE,iBAAUT,IAAV,EAAgB;AAAE,WAAOA,IAAI,CAACA,IAAL,EAAP;AAAqB,GAXzB;AAYvBU,EAAAA,OAAO,EAAE,iBAAUV,IAAV,EAAgB;AAAE,WAAOA,IAAI,CAACW,IAAL,EAAP;AAAqB,GAZzB;AAavBC,EAAAA,SAAS,EAAE,mBAAUZ,IAAV,EAAgB;AAAE,WAAOA,IAAI,CAACa,MAAL,EAAP;AAAuB,GAb7B;AAcvBC,EAAAA,SAAS,EAAE,mBAAUd,IAAV,EAAgB;AAAE,WAAOA,IAAI,CAACe,MAAL,EAAP;AAAuB,GAd7B;AAevB;AACAC,EAAAA,OAAO,EAAE,iBAAUhB,IAAV,EAAgBiB,IAAhB,EAAsB;AAAE,WAAOjB,IAAI,CAACkB,GAAL,CAASD,IAAT,EAAe,MAAf,CAAP;AAAgC,GAhB1C;AAiBvBE,EAAAA,QAAQ,EAAE,kBAAUnB,IAAV,EAAgBiB,IAAhB,EAAsB;AAAE,WAAOjB,IAAI,CAACkB,GAAL,CAASD,IAAT,EAAe,OAAf,CAAP;AAAiC,GAjB5C;AAkBvBG,EAAAA,OAAO,EAAE,iBAAUpB,IAAV,EAAgBiB,IAAhB,EAAsB;AAAE,WAAOjB,IAAI,CAACkB,GAAL,CAASD,IAAT,EAAe,KAAf,CAAP;AAA+B,GAlBzC;AAmBvBI,EAAAA,OAAO,EAAE,iBAAUrB,IAAV,EAAgBM,IAAhB,EAAsB;AAAE,WAAON,IAAI,CAACM,IAAL,CAAUA,IAAV,CAAP;AAAyB,GAnBnC;AAoBvBgB,EAAAA,QAAQ,EAAE,kBAAUtB,IAAV,EAAgBQ,KAAhB,EAAuB;AAAE,WAAOR,IAAI,CAACQ,KAAL,CAAWA,KAAX,CAAP;AAA2B,GApBvC;AAqBvBe,EAAAA,OAAO,EAAE,iBAAUvB,IAAV,EAAgBwB,GAAhB,EAAqB;AAAE,WAAOxB,IAAI,CAACA,IAAL,CAAUwB,GAAV,CAAP;AAAwB,GArBjC;AAsBvBC,EAAAA,OAAO,EAAE,iBAAUzB,IAAV,EAAgBW,IAAhB,EAAsB;AAAE,WAAOX,IAAI,CAACW,IAAL,CAAUA,IAAV,CAAP;AAAyB,GAtBnC;AAuBvBe,EAAAA,SAAS,EAAE,mBAAU1B,IAAV,EAAgBa,MAAhB,EAAwB;AAAE,WAAOb,IAAI,CAACa,MAAL,CAAYA,MAAZ,CAAP;AAA6B,GAvB3C;AAwBvBc,EAAAA,SAAS,EAAE,mBAAU3B,IAAV,EAAgBe,MAAhB,EAAwB;AAAE,WAAOf,IAAI,CAACe,MAAL,CAAYA,MAAZ,CAAP;AAA6B,GAxB3C;AAyBvB;AACAa,EAAAA,OAAO,EAAE,iBAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AAAE,WAAOD,KAAK,CAACD,OAAN,CAAcE,KAAd,CAAP;AAA8B,GA1B1C;AA2BvBC,EAAAA,UAAU,EAAE,oBAAU/B,IAAV,EAAgB;AAAE,WAAOA,IAAI,CAACgC,OAAL,EAAP;AAAwB,GA3B/B;AA4BvB7D,EAAAA,MAAM,EAAE;AACJ8D,IAAAA,eAAe,EAAE,yBAAU9D,MAAV,EAAkB;AAC/B,aAAOZ,KAAK,GACPY,MADE,CACKmB,WAAW,CAACnB,MAAD,CADhB,EAEFR,UAFE,GAGFyC,cAHE,EAAP;AAIH,KANG;AAOJ8B,IAAAA,OAAO,EAAE,iBAAU/D,MAAV,EAAkB6B,IAAlB,EAAwB;AAAE,aAAOA,IAAI,CAAC7B,MAAL,CAAYmB,WAAW,CAACnB,MAAD,CAAvB,EAAiCgE,IAAjC,EAAP;AAAiD,KAPhF;AAQJC,IAAAA,gBAAgB,EAAE,0BAAUjE,MAAV,EAAkB;AAChC,aAAOZ,KAAK,GACPY,MADE,CACKmB,WAAW,CAACnB,MAAD,CADhB,EAEFR,UAFE,GAGF0E,WAHE,EAAP;AAIH,KAbG;AAcJC,IAAAA,cAAc,EAAE,wBAAUnE,MAAV,EAAkB;AAC9B,aAAOZ,KAAK,GACPY,MADE,CACKmB,WAAW,CAACnB,MAAD,CADhB,EAEFR,UAFE,GAGF4E,WAHE,EAAP;AAIH,KAnBG;AAoBJ7D,IAAAA,MAAM,EAAE,gBAAUP,MAAV,EAAkB6B,IAAlB,EAAwBtB,OAAxB,EAAgC;AACpC,aAAOsB,IAAI,CAAC7B,MAAL,CAAYmB,WAAW,CAACnB,MAAD,CAAvB,EAAiCO,MAAjC,CAAwCA,OAAxC,CAAP;AACH,KAtBG;AAuBJ8D,IAAAA,KAAK,EAAE,eAAUrE,MAAV,EAAkBsE,IAAlB,EAAwBC,OAAxB,EAAiC;AACpC,UAAIC,SAAS,GAAGrD,WAAW,CAACnB,MAAD,CAA3B;;AACA,WAAK,IAAIyE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,IAAI,CAAzC,EAA4C;AACxC,YAAIlE,MAAM,GAAGgE,OAAO,CAACE,CAAD,CAApB;AACA,YAAIE,UAAU,GAAGL,IAAjB;;AACA,YAAI/D,MAAM,CAACqE,QAAP,CAAgB,IAAhB,KAAyBrE,MAAM,CAACqE,QAAP,CAAgB,IAAhB,CAA7B,EAAoD;AAChD;AACA,cAAIzC,IAAI,GAAGwC,UAAU,CAACtD,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAX;AACA,cAAIwD,OAAO,GAAGF,UAAU,CAACtD,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAd;AACA,cAAIyD,SAAS,GAAG1F,KAAK,CAAC+C,IAAD,EAAO,MAAP,CAAL,CACX4C,OADW,CACH,MADG,EAEX/E,MAFW,CAEJwE,SAFI,CAAhB;;AAGA,eAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC;AAC7B,gBAAIC,QAAQ,GAAGH,SAAS,CAAC/B,GAAV,CAAciC,CAAd,EAAiB,MAAjB,CAAf;;AACA,gBAAIC,QAAQ,CAAC1E,MAAT,CAAgB,IAAhB,MAA0BsE,OAA9B,EAAuC;AACnC,qBAAOI,QAAP;AACH;AACJ;;AACD3D,UAAAA,kBAAkB;AAClB,iBAAO,IAAP;AACH;;AACD,YAAIO,IAAI,GAAGzC,KAAK,CAACuF,UAAD,EAAapE,MAAb,CAAL,CAA0BP,MAA1B,CAAiCwE,SAAjC,CAAX;;AACA,YAAI3C,IAAI,CAACgC,OAAL,EAAJ,EAAoB;AAChB,iBAAOhC,IAAP;AACH;AACJ;;AACDP,MAAAA,kBAAkB;AAClB,aAAO,IAAP;AACH;AAnDG;AA5Be,CAA3B;AAkFA,eAAeC,oBAAf","sourcesContent":["import dayjs from \"dayjs\";\r\nimport jalaliday from \"jalaliday\";\r\nimport { noteOnce } from \"rc-util/lib/warning\";\r\nimport weekday from \"dayjs/plugin/weekday\";\r\nimport localeData from \"dayjs/plugin/localeData\";\r\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\r\nimport weekYear from \"dayjs/plugin/weekYear\";\r\nimport advancedFormat from \"dayjs/plugin/advancedFormat\";\r\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\r\nimport { default as faLocale } from \"./locale\";\r\ndayjs.extend(customParseFormat);\r\ndayjs.extend(advancedFormat);\r\ndayjs.extend(weekday);\r\ndayjs.extend(localeData);\r\ndayjs.extend(weekOfYear);\r\ndayjs.extend(weekYear);\r\ndayjs.extend(jalaliday);\r\ndayjs.locale(faLocale, undefined, true);\r\ndayjs.extend(function (o, c) {\r\n    // todo support Wo (ISO week)\r\n    var proto = c.prototype;\r\n    var oldFormat = proto.format;\r\n    proto.format = function f(formatStr) {\r\n        var str = (formatStr || '').replace('Wo', 'wo');\r\n        return oldFormat.bind(this)(str);\r\n    };\r\n});\r\nvar localeMap = {\r\n    en_GB: \"en-gb\",\r\n    en_US: \"en\",\r\n    zh_CN: \"zh-cn\",\r\n    zh_TW: \"zh-tw\",\r\n    fa_IR: \"fa\"\r\n};\r\nvar parseLocale = function (locale) {\r\n    var mapLocale = localeMap[locale];\r\n    return mapLocale || locale.split(\"_\")[0];\r\n};\r\nvar parseNoMatchNotice = function () {\r\n    /* istanbul ignore next */\r\n    noteOnce(false, \"Not match any format. Please help to fire a issue about this.\");\r\n};\r\nvar generateJalaliConfig = {\r\n    // get\r\n    getNow: function () { return dayjs().calendar(\"jalali\"); },\r\n    getFixedDate: function (string) { return dayjs(string, 'YYYY-MM-DD'); },\r\n    getEndDate: function (date) { return date.endOf('month'); },\r\n    getWeekDay: function (date) {\r\n        var clone = date.locale('en');\r\n        return clone.weekday() + clone.localeData().firstDayOfWeek();\r\n    },\r\n    getYear: function (date) { return date === null || date === void 0 ? void 0 : date.year(); },\r\n    getMonth: function (date) { return date.month(); },\r\n    getDate: function (date) { return date.date(); },\r\n    getHour: function (date) { return date.hour(); },\r\n    getMinute: function (date) { return date.minute(); },\r\n    getSecond: function (date) { return date.second(); },\r\n    // set\r\n    addYear: function (date, diff) { return date.add(diff, 'year'); },\r\n    addMonth: function (date, diff) { return date.add(diff, 'month'); },\r\n    addDate: function (date, diff) { return date.add(diff, 'day'); },\r\n    setYear: function (date, year) { return date.year(year); },\r\n    setMonth: function (date, month) { return date.month(month); },\r\n    setDate: function (date, num) { return date.date(num); },\r\n    setHour: function (date, hour) { return date.hour(hour); },\r\n    setMinute: function (date, minute) { return date.minute(minute); },\r\n    setSecond: function (date, second) { return date.second(second); },\r\n    // Compare\r\n    isAfter: function (date1, date2) { return date1.isAfter(date2); },\r\n    isValidate: function (date) { return date.isValid(); },\r\n    locale: {\r\n        getWeekFirstDay: function (locale) {\r\n            return dayjs()\r\n                .locale(parseLocale(locale))\r\n                .localeData()\r\n                .firstDayOfWeek();\r\n        },\r\n        getWeek: function (locale, date) { return date.locale(parseLocale(locale)).week(); },\r\n        getShortWeekDays: function (locale) {\r\n            return dayjs()\r\n                .locale(parseLocale(locale))\r\n                .localeData()\r\n                .weekdaysMin();\r\n        },\r\n        getShortMonths: function (locale) {\r\n            return dayjs()\r\n                .locale(parseLocale(locale))\r\n                .localeData()\r\n                .monthsShort();\r\n        },\r\n        format: function (locale, date, format) {\r\n            return date.locale(parseLocale(locale)).format(format);\r\n        },\r\n        parse: function (locale, text, formats) {\r\n            var localeStr = parseLocale(locale);\r\n            for (var i = 0; i < formats.length; i += 1) {\r\n                var format = formats[i];\r\n                var formatText = text;\r\n                if (format.includes(\"wo\") || format.includes(\"Wo\")) {\r\n                    // parse Wo\r\n                    var year = formatText.split(\"-\")[0];\r\n                    var weekStr = formatText.split(\"-\")[1];\r\n                    var firstWeek = dayjs(year, \"YYYY\")\r\n                        .startOf(\"year\")\r\n                        .locale(localeStr);\r\n                    for (var j = 0; j <= 52; j += 1) {\r\n                        var nextWeek = firstWeek.add(j, \"week\");\r\n                        if (nextWeek.format(\"Wo\") === weekStr) {\r\n                            return nextWeek;\r\n                        }\r\n                    }\r\n                    parseNoMatchNotice();\r\n                    return null;\r\n                }\r\n                var date = dayjs(formatText, format).locale(localeStr);\r\n                if (date.isValid()) {\r\n                    return date;\r\n                }\r\n            }\r\n            parseNoMatchNotice();\r\n            return null;\r\n        }\r\n    }\r\n};\r\nexport default generateJalaliConfig;\r\n"]},"metadata":{},"sourceType":"module"}