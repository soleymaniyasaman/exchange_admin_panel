{"ast":null,"code":"import * as CONSTANT from './../base/constant';\nimport { append, detach, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { NodeSelection } from './../../selection/index';\nimport { selfClosingTags } from '../../common/config';\nimport { getLastTextNode } from '../../common/util';\nexport var markerClassName = {\n  startSelection: 'e-editor-select-start',\n  endSelection: 'e-editor-select-end'\n};\n/**\n * DOMNode internal plugin\n *\n * @hidden\n\n */\n\nvar DOMNode =\n/** @class */\nfunction () {\n  /**\n   * Constructor for creating the DOMNode plugin\n   *\n   * @param {Element} parent - specifies the parent element\n   * @param {Document} currentDocument - specifies the current document.\n   * @hidden\n    */\n  function DOMNode(parent, currentDocument) {\n    this.parent = parent;\n    this.nodeSelection = new NodeSelection();\n    this.currentDocument = currentDocument;\n  }\n  /**\n   * contents method\n   *\n   * @param {Element} element - specifies the element.\n   * @returns {void}\n   * @hidden\n    */\n\n\n  DOMNode.prototype.contents = function (element) {\n    return element && 'IFRAME' !== element.tagName ? Array.prototype.slice.call(element.childNodes || []) : [];\n  };\n  /**\n   * isBlockNode method\n   *\n   * @param {Element} element - specifies the node element.\n   * @returns {boolean} - sepcifies the boolean value\n   * @hidden\n    */\n\n\n  DOMNode.prototype.isBlockNode = function (element) {\n    return !!element && element.nodeType === Node.ELEMENT_NODE && CONSTANT.BLOCK_TAGS.indexOf(element.tagName.toLowerCase()) >= 0;\n  };\n  /**\n   * isLink method\n   *\n   * @param {Element} element - specifies the element\n   * @returns {boolean} -  specifies the boolean value\n   * @hidden\n    */\n\n\n  DOMNode.prototype.isLink = function (element) {\n    return !!element && element.nodeType === Node.ELEMENT_NODE && 'a' === element.tagName.toLowerCase();\n  };\n  /**\n   * blockParentNode method\n   *\n   * @param {Element} element - specifies the element\n   * @returns {Element} - returns the element value\n   * @hidden\n    */\n\n\n  DOMNode.prototype.blockParentNode = function (element) {\n    for (; element && element.parentNode !== this.parent && (!element.parentNode || !this.hasClass(element.parentNode, 'e-node-inner')); null) {\n      element = element.parentNode;\n\n      if (this.isBlockNode(element)) {\n        return element;\n      }\n    }\n\n    return element;\n  };\n  /**\n   * rawAttributes method\n   *\n   * @param {Element} element - specifies the element\n   * @returns {string} - returns the string value\n   * @hidden\n    */\n\n\n  DOMNode.prototype.rawAttributes = function (element) {\n    var rawAttr = {};\n    var attributes = element.attributes;\n\n    if (attributes.length > 0) {\n      for (var d = 0; d < attributes.length; d++) {\n        var e = attributes[d];\n        rawAttr[e.nodeName] = e.value;\n      }\n    }\n\n    return rawAttr;\n  };\n  /**\n   * attributes method\n   *\n   * @param {Element} element - sepcifies the element.\n   * @returns {string} - returns the string value.\n   * @hidden\n    */\n\n\n  DOMNode.prototype.attributes = function (element) {\n    if (!element) {\n      return '';\n    }\n\n    var attr = '';\n    var rawAttr = this.rawAttributes(element);\n    var orderRawAttr = Object.keys(rawAttr).sort();\n\n    for (var e = 0; e < orderRawAttr.length; e++) {\n      var attrKey = orderRawAttr[e];\n      var attrValue = rawAttr[attrKey];\n      /* eslint-disable */\n\n      if (attrValue.indexOf(\"'\") < 0 && attrValue.indexOf('\"') >= 0) {\n        attr += ' ' + attrKey + \"='\" + attrValue + \"'\";\n      } else if (attrValue.indexOf('\"') >= 0 && attrValue.indexOf(\"'\") >= 0) {\n        /* eslint-enable */\n        attrValue = attrValue.replace(/\"/g, '&quot;');\n        attr += ' ' + attrKey + '=\"' + attrValue + '\"';\n      } else {\n        attr += ' ' + attrKey + '=\"' + attrValue + '\"';\n      }\n    }\n\n    return attr;\n  };\n  /**\n   * clearAttributes method\n   *\n   * @param {Element} element - specifies the element\n   * @returns {void}\n   * @hidden\n    */\n\n\n  DOMNode.prototype.clearAttributes = function (element) {\n    for (var attr = element.attributes, c = attr.length - 1; c >= 0; c--) {\n      var key = attr[c];\n      element.removeAttribute(key.nodeName);\n    }\n  };\n  /**\n   * openTagString method\n   *\n   * @param {Element} element - specifies the element.\n   * @returns {string} - returns the string\n   * @hidden\n    */\n\n\n  DOMNode.prototype.openTagString = function (element) {\n    return '<' + element.tagName.toLowerCase() + this.attributes(element) + '>';\n  };\n  /**\n   * closeTagString method\n   *\n   * @param {Element} element - specifies the element\n   * @returns {string} - returns the string value\n   * @hidden\n    */\n\n\n  DOMNode.prototype.closeTagString = function (element) {\n    return '</' + element.tagName.toLowerCase() + '>';\n  };\n  /**\n   * createTagString method\n   *\n   * @param {string} tagName - specifies the tag name\n   * @param {Element} relativeElement - specifies the relative element\n   * @param {string} innerHTML - specifies the string value\n   * @returns {string} - returns the string value.\n   * @hidden\n    */\n\n\n  DOMNode.prototype.createTagString = function (tagName, relativeElement, innerHTML) {\n    return '<' + tagName.toLowerCase() + this.attributes(relativeElement) + '>' + innerHTML + '</' + tagName.toLowerCase() + '>';\n  };\n  /**\n   * isList method\n   *\n   * @param {Element} element - specifes the element.\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n\n\n  DOMNode.prototype.isList = function (element) {\n    return !!element && ['UL', 'OL'].indexOf(element.tagName) >= 0;\n  };\n  /**\n   * isElement method\n   *\n   * @param {Element} element - specifes the element.\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n\n\n  DOMNode.prototype.isElement = function (element) {\n    return element === this.parent;\n  };\n  /**\n   * isEditable method\n   *\n   * @param {Element} element - specifes the element.\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n\n\n  DOMNode.prototype.isEditable = function (element) {\n    return (!element.getAttribute || element.getAttribute('contenteditable') === 'true') && ['STYLE', 'SCRIPT'].indexOf(element.tagName) < 0;\n  };\n  /**\n   * hasClass method\n   *\n   * @param {Element} element - specifes the element.\n   * @param {string} className - specifies the class name value\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n\n\n  DOMNode.prototype.hasClass = function (element, className) {\n    return element && element.classList && element.classList.contains(className);\n  };\n  /**\n   * replaceWith method\n   *\n   * @param {Element} element - specifes the element.\n   * @param {string} value - specifies the string value\n   * @returns {void}\n   * @hidden\n    */\n\n\n  DOMNode.prototype.replaceWith = function (element, value) {\n    var parentNode = element.parentNode;\n    parentNode.insertBefore(this.parseHTMLFragment(value), element);\n    detach(element);\n  };\n  /**\n   * parseHTMLFragment method\n   *\n   * @param {string} value - specifies the string value\n   * @returns {Element} - returns the element\n   * @hidden\n    */\n\n\n  DOMNode.prototype.parseHTMLFragment = function (value) {\n    /* eslint-disable */\n    var temp = createElement('template');\n    temp.innerHTML = value;\n\n    if (temp.content instanceof DocumentFragment) {\n      return temp.content;\n    } else {\n      return document.createRange().createContextualFragment(value);\n    }\n    /* eslint-enable */\n\n  };\n  /**\n   * wrap method\n   *\n   * @param {Element} element - specifies the element\n   * @param {Element} wrapper - specifies the element.\n   * @returns {Element} - returns the element\n   * @hidden\n    */\n\n\n  DOMNode.prototype.wrap = function (element, wrapper) {\n    element.parentNode.insertBefore(wrapper, element);\n    wrapper = element.previousSibling;\n    wrapper.appendChild(element);\n    return wrapper;\n  };\n  /**\n   * insertAfter method\n   *\n   * @param {Element} newNode - specifies the new node element\n   * @param {Element} referenceNode - specifies the referenece node\n   * @returns {void}\n   * @hidden\n    */\n\n\n  DOMNode.prototype.insertAfter = function (newNode, referenceNode) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  };\n  /**\n   * wrapInner method\n   *\n   * @param {Element} parent - specifies the parent element.\n   * @param {Element} wrapper - specifies the wrapper element.\n   * @returns {Element} - returns the element\n   * @hidden\n    */\n\n\n  DOMNode.prototype.wrapInner = function (parent, wrapper) {\n    parent.appendChild(wrapper);\n    wrapper = parent.querySelector('.e-rte-wrap-inner');\n    wrapper.classList.remove('e-rte-wrap-inner');\n\n    if (wrapper.classList.length === 0) {\n      wrapper.removeAttribute('class');\n    }\n\n    while (parent.firstChild !== wrapper) {\n      wrapper.appendChild(parent.firstChild);\n    }\n\n    return wrapper;\n  };\n  /**\n   * unWrap method\n   *\n   * @param {Element} element - specifies the element.\n   * @returns {Element} - returns the element.\n   * @hidden\n    */\n\n\n  DOMNode.prototype.unWrap = function (element) {\n    var parent = element.parentNode;\n    var unWrapNode = [];\n\n    while (element.firstChild) {\n      unWrapNode.push(element.firstChild);\n      parent.insertBefore(element.firstChild, element);\n    }\n\n    unWrapNode = unWrapNode.length > 0 ? unWrapNode : [element.parentNode];\n    parent.removeChild(element);\n    return unWrapNode;\n  };\n  /**\n   * getSelectedNode method\n   *\n   * @param {Element} element - specifies the element\n   * @param {number} index - specifies the index value.\n   * @returns {Element} - returns the element\n   * @hidden\n    */\n\n\n  DOMNode.prototype.getSelectedNode = function (element, index) {\n    if (element.nodeType === Node.ELEMENT_NODE && element.childNodes.length > 0 && element.childNodes[index - 1] && element.childNodes[index - 1].nodeType === Node.ELEMENT_NODE && (element.childNodes[index - 1].classList.contains(markerClassName.startSelection) || element.childNodes[index - 1].classList.contains(markerClassName.endSelection))) {\n      element = element.childNodes[index - 1];\n    } else if (element.nodeType === Node.ELEMENT_NODE && element.childNodes.length > 0 && element.childNodes[index]) {\n      element = element.childNodes[index];\n    }\n\n    if (element.nodeType === Node.TEXT_NODE) {\n      element = element.parentNode;\n    }\n\n    return element;\n  };\n  /**\n   * nodeFinds method\n   *\n   * @param {Element} element - specifies the element.\n   * @param {Element[]} elements - specifies the array of elements\n   * @returns {Element[]} - returnts the array elements\n   * @hidden\n    */\n\n\n  DOMNode.prototype.nodeFinds = function (element, elements) {\n    var existNodes = [];\n\n    for (var i = 0; i < elements.length; i++) {\n      if (element.contains(elements[i]) && element !== elements[i]) {\n        existNodes.push(elements[i]);\n      }\n    }\n\n    return existNodes;\n  };\n  /**\n   * isEditorArea method\n   *\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n\n\n  DOMNode.prototype.isEditorArea = function () {\n    var range = this.getRangePoint(0);\n    var element;\n\n    for (element = range.commonAncestorContainer; element && !this.isElement(element); null) {\n      element = element.parentNode;\n    }\n\n    return !!this.isElement(element);\n  };\n  /**\n   * getRangePoint method\n   *\n   * @param {number} point - specifies the number value.\n   * @returns {Range} - returns the range.\n   * @hidden\n    */\n\n\n  DOMNode.prototype.getRangePoint = function (point) {\n    var selection = this.getSelection();\n    var ranges = [];\n\n    if (selection && selection.getRangeAt && selection.rangeCount) {\n      ranges = [];\n\n      for (var f = 0; f < selection.rangeCount; f++) {\n        ranges.push(selection.getRangeAt(f));\n      }\n    } else {\n      ranges = [this.currentDocument.createRange()];\n    }\n\n    return 'undefined' !== typeof point ? ranges[point] : ranges;\n  };\n\n  DOMNode.prototype.getSelection = function () {\n    return this.nodeSelection.get(this.currentDocument);\n  };\n  /**\n   * getPreviousNode method\n   *\n   * @param {Element} element - specifies the element\n   * @returns {Element} - returns the element\n   * @hidden\n    */\n\n\n  DOMNode.prototype.getPreviousNode = function (element) {\n    element = element.previousElementSibling;\n\n    for (; element && element.textContent === '\\n'; null) {\n      element = element.previousElementSibling;\n    }\n\n    return element;\n  };\n  /**\n   * encode method\n   *\n   * @param {string} value - specifies the string value\n   * @returns {string} - specifies the string value\n   * @hidden\n    */\n\n\n  DOMNode.prototype.encode = function (value) {\n    var divNode = document.createElement('div');\n    divNode.innerText = value; // eslint-disable-next-line\n\n    return divNode.innerHTML.replace(/<br\\s*[\\/]?>/gi, '\\n');\n  };\n  /**\n   * saveMarker method\n   *\n   * @param {NodeSelection} save - specifies the node selection,\n   * @param {string} action - specifies the action  value.\n   * @returns {NodeSelection} - returns the value\n   * @hidden\n    */\n\n\n  DOMNode.prototype.saveMarker = function (save, action) {\n    var start = this.parent.querySelector('.' + markerClassName.startSelection);\n    var end = this.parent.querySelector('.' + markerClassName.endSelection);\n    var startTextNode;\n    var endTextNode;\n\n    if (start.textContent === '' && isNullOrUndefined(end) && action !== 'tab') {\n      if (start.childNodes.length === 1 && start.childNodes[0].nodeName === 'BR') {\n        start.innerHTML = '&#65279;&#65279;<br>';\n      } else {\n        start.innerHTML = '&#65279;&#65279;';\n      }\n    }\n\n    if (this.hasClass(start, markerClassName.startSelection) && start.classList.length > 1) {\n      var replace = this.createTagString(CONSTANT.DEFAULT_TAG, start, this.encode(start.textContent));\n      this.replaceWith(start, replace);\n      start = this.parent.querySelector('.' + markerClassName.startSelection);\n      start.classList.remove(markerClassName.startSelection);\n      startTextNode = start.childNodes[0];\n    } else {\n      startTextNode = this.unWrap(start)[0];\n    }\n\n    if (this.hasClass(end, markerClassName.endSelection) && end.classList.length > 1) {\n      var replace = this.createTagString(CONSTANT.DEFAULT_TAG, end, this.encode(end.textContent));\n      this.replaceWith(end, replace);\n      end = this.parent.querySelector('.' + markerClassName.endSelection);\n      end.classList.remove(markerClassName.endSelection);\n      endTextNode = end.childNodes[0];\n    } else {\n      endTextNode = end ? this.unWrap(end)[0] : startTextNode;\n    }\n\n    save.startContainer = save.getNodeArray(startTextNode, true);\n    save.endContainer = save.getNodeArray(endTextNode, false);\n    return save;\n  };\n\n  DOMNode.prototype.marker = function (className, textContent) {\n    return '<span class=\"' + className + '\">' + textContent + '</span>';\n  };\n  /**\n   * setMarker method\n   *\n   * @param {NodeSelection} save - specifies the node selection.\n   * @returns {void}\n   * @hidden\n    */\n\n\n  DOMNode.prototype.setMarker = function (save) {\n    var range = save.range;\n    var startChildNodes = range.startContainer.childNodes;\n    var isTableStart = startChildNodes.length > 1 && startChildNodes[0].nodeName === 'TABLE';\n    var start = (isTableStart ? getLastTextNode(startChildNodes[range.startOffset + 1]) : startChildNodes[range.startOffset > 0 ? range.startOffset - 1 : range.startOffset]) || range.startContainer;\n    var end = range.endContainer.childNodes[range.endOffset > 0 ? range.endOffset - 1 : range.endOffset] || range.endContainer;\n\n    if (start.nodeType === Node.ELEMENT_NODE && end.nodeType === Node.ELEMENT_NODE && (start.contains(end) || end.contains(start))) {\n      var existNode = start.contains(end) ? start : end;\n      var isElement = existNode.nodeType !== Node.TEXT_NODE;\n\n      if (isElement) {\n        var nodes = [];\n        var textNodes = [];\n\n        for (var node = existNode; existNode.contains(node); null) {\n          if (nodes.indexOf(node) < 0 && node.childNodes && node.childNodes.length) {\n            nodes.push(node);\n            node = node.childNodes[0];\n          } else if (node.nextSibling) {\n            node = node.nextSibling;\n          } else if (node.parentNode) {\n            node = node.parentNode;\n            nodes.push(node);\n          }\n\n          if (textNodes.indexOf(node) < 0 && (node.nodeType === Node.TEXT_NODE || CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.parentNode.tagName.toLocaleLowerCase()) >= 0 && (node.tagName === 'BR' || node.tagName === 'IMG'))) {\n            textNodes.push(node);\n          }\n        }\n\n        if (textNodes.length) {\n          start = start.contains(end) ? textNodes[0] : start;\n          end = textNodes[textNodes.length - 1];\n        }\n      }\n    }\n\n    if (start !== end) {\n      if (start.nodeType !== Node.TEXT_NODE && (start.tagName === 'BR' && CONSTANT.IGNORE_BLOCK_TAGS.indexOf(start.parentNode.tagName.toLocaleLowerCase()) >= 0 || start.tagName === 'IMG')) {\n        this.replaceWith(start, this.marker(markerClassName.startSelection, this.encode(start.textContent)));\n        var markerStart = range.startContainer.querySelector('.' + markerClassName.startSelection);\n        markerStart.appendChild(start);\n      } else {\n        this.replaceWith(start, this.marker(markerClassName.startSelection, this.encode(start.textContent)));\n      }\n\n      if (end.nodeType !== Node.TEXT_NODE && end.tagName === 'BR' && CONSTANT.IGNORE_BLOCK_TAGS.indexOf(end.parentNode.tagName.toLocaleLowerCase()) >= 0) {\n        this.replaceWith(end, this.marker(markerClassName.endSelection, this.encode(end.textContent)));\n        var markerEnd = range.endContainer.querySelector('.' + markerClassName.endSelection);\n        markerEnd.appendChild(end);\n      } else {\n        this.ensureSelfClosingTag(end, markerClassName.endSelection, range);\n      }\n    } else {\n      this.ensureSelfClosingTag(start, markerClassName.startSelection, range);\n    }\n  };\n  /**\n   * ensureSelfClosingTag method\n   *\n   * @param {Element} start - specifies the element.\n   * @param {string} className - specifes the class name string value\n   * @param {Range} range - specifies the range value\n   * @returns {void}\n   * @hidden\n    */\n\n\n  DOMNode.prototype.ensureSelfClosingTag = function (start, className, range) {\n    var isTable = false;\n\n    if (start.nodeType === 3) {\n      this.replaceWith(start, this.marker(className, this.encode(start.textContent)));\n    } else if (start.tagName === 'BR') {\n      this.replaceWith(start, this.marker(className, this.encode(start.textContent)));\n      var markerStart = range.startContainer.querySelector('.' + className);\n      markerStart.appendChild(start);\n    } else {\n      if (start.tagName === 'IMG') {\n        var parNode = document.createElement('p');\n        start.parentElement.insertBefore(parNode, start);\n        parNode.appendChild(start);\n        start = parNode.children[0];\n      }\n\n      if (start.tagName === 'TABLE') {\n        isTable = true;\n\n        if (start.textContent === '') {\n          var tdNode = start.querySelectorAll('td');\n          start = tdNode[tdNode.length - 1];\n          start = !isNullOrUndefined(start.childNodes[0]) ? start.childNodes[0] : start;\n        } else {\n          var lastNode = start.lastChild;\n\n          while (lastNode.nodeType !== 3 && lastNode.nodeName !== '#text' && lastNode.nodeName !== 'BR') {\n            lastNode = lastNode.lastChild;\n          }\n\n          start = lastNode;\n        }\n      }\n\n      for (var i = 0; i < selfClosingTags.length; i++) {\n        start = start.tagName === selfClosingTags[i] && !isTable ? start.parentNode : start;\n      }\n\n      if (start.nodeType === 3 && start.nodeName === '#text') {\n        this.replaceWith(start, this.marker(className, this.encode(start.textContent)));\n      } else if (start.nodeName === 'BR') {\n        this.replaceWith(start, this.marker(markerClassName.endSelection, this.encode(start.textContent)));\n        var markerEnd = range.endContainer.querySelector('.' + markerClassName.endSelection);\n        markerEnd.appendChild(start);\n      } else {\n        var marker = this.marker(className, '');\n        append([this.parseHTMLFragment(marker)], start);\n      }\n    }\n  };\n  /**\n   * createTempNode method\n   *\n   * @param {Element} element - specifies the element.\n   * @returns {Element} - returns the element\n   * @hidden\n    */\n\n\n  DOMNode.prototype.createTempNode = function (element) {\n    var textContent = element.textContent;\n\n    if (element.tagName === 'BR') {\n      var wrapper = '<' + CONSTANT.DEFAULT_TAG + '></' + CONSTANT.DEFAULT_TAG + '>';\n      var node = element.parentNode;\n\n      if (CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.tagName.toLocaleLowerCase()) >= 0) {\n        element = this.wrap(element, this.parseHTMLFragment(wrapper));\n      }\n    } else if (element.nodeType !== Node.TEXT_NODE && (element.classList.contains(markerClassName.startSelection) || element.classList.contains(markerClassName.endSelection)) || textContent.replace(/\\n/g, '').replace(/(^ *)|( *$)/g, '').length > 0 || textContent.length && textContent.indexOf('\\n') < 0) {\n      var wrapper = '<' + CONSTANT.DEFAULT_TAG + '></' + CONSTANT.DEFAULT_TAG + '>';\n      var target = element;\n      element = this.wrap(element, this.parseHTMLFragment(wrapper));\n      var ignoreBr = target.nodeType === Node.ELEMENT_NODE && target.firstChild && target.firstChild.nodeName === 'BR' && (target.classList.contains(markerClassName.startSelection) || target.classList.contains(markerClassName.endSelection));\n\n      if (!ignoreBr && element.nextElementSibling && element.nextElementSibling.tagName === 'BR') {\n        element.appendChild(element.nextElementSibling);\n      }\n    }\n\n    return element;\n  };\n  /**\n   * getImageTagInSelection method\n   *\n   * @returns {void}\n   * @hidden\n    */\n\n\n  DOMNode.prototype.getImageTagInSelection = function () {\n    var selection = this.getSelection();\n\n    if (this.isEditorArea() && selection.rangeCount) {\n      return selection.focusNode.querySelectorAll('img');\n    }\n\n    return null;\n  };\n  /**\n   * blockNodes method\n   *\n   * @returns {Node[]} - returns the node array values\n   * @hidden\n    */\n\n\n  DOMNode.prototype.blockNodes = function () {\n    var collectionNodes = [];\n    var selection = this.getSelection();\n\n    if (this.isEditorArea() && selection.rangeCount) {\n      var ranges = this.getRangePoint();\n\n      for (var j = 0; j < ranges.length; j++) {\n        var parentNode = void 0;\n        var range = ranges[j];\n        var startNode = this.getSelectedNode(range.startContainer, range.startOffset);\n        var endNode = this.getSelectedNode(range.endContainer, range.endOffset);\n\n        if (this.isBlockNode(startNode) && collectionNodes.indexOf(startNode) < 0) {\n          collectionNodes.push(startNode);\n        }\n\n        parentNode = this.blockParentNode(startNode);\n\n        if (parentNode && collectionNodes.indexOf(parentNode) < 0) {\n          if (CONSTANT.IGNORE_BLOCK_TAGS.indexOf(parentNode.tagName.toLocaleLowerCase()) >= 0 && (startNode.tagName === 'BR' || startNode.nodeType === Node.TEXT_NODE || startNode.classList.contains(markerClassName.startSelection) || startNode.classList.contains(markerClassName.endSelection))) {\n            var tempNode = startNode.previousSibling && startNode.previousSibling.nodeType === Node.TEXT_NODE ? startNode.previousSibling : startNode;\n\n            if (!startNode.nextSibling && !startNode.previousSibling && startNode.tagName === 'BR') {\n              collectionNodes.push(tempNode);\n            } else {\n              collectionNodes.push(this.createTempNode(tempNode));\n            }\n          } else {\n            collectionNodes.push(parentNode);\n          }\n        }\n\n        var nodes = [];\n\n        for (var node = startNode; node !== endNode && node !== this.parent; null) {\n          if (nodes.indexOf(node) < 0 && node.childNodes && node.childNodes.length) {\n            nodes.push(node);\n            node = node.childNodes[0];\n          } else if (node && node.nodeType !== 8 && (node.tagName === 'BR' || node.nodeType === Node.TEXT_NODE && node.textContent.trim() !== '' || node.nodeType !== Node.TEXT_NODE && (node.classList.contains(markerClassName.startSelection) || node.classList.contains(markerClassName.endSelection))) && CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.parentNode.tagName.toLocaleLowerCase()) >= 0) {\n            node = this.createTempNode(node);\n          } else if (node.nextSibling && node.nextSibling.nodeType !== 8 && (node.nextSibling.tagName === 'BR' || node.nextSibling.nodeType === Node.TEXT_NODE || node.nextSibling.classList.contains(markerClassName.startSelection) || node.nextSibling.classList.contains(markerClassName.endSelection)) && CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.nextSibling.parentNode.tagName.toLocaleLowerCase()) >= 0) {\n            node = this.createTempNode(node.nextSibling);\n          } else if (node.nextSibling) {\n            node = node.nextSibling;\n          } else if (node.parentNode) {\n            node = node.parentNode;\n            nodes.push(node);\n          }\n\n          if (collectionNodes.indexOf(node) < 0 && node.nodeType === Node.ELEMENT_NODE && CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.parentNode.tagName.toLocaleLowerCase()) >= 0 && (node.classList.contains(markerClassName.startSelection) || node.classList.contains(markerClassName.endSelection))) {\n            collectionNodes.push(this.createTempNode(node));\n          }\n\n          if (this.isBlockNode(node) && this.ignoreTableTag(node) && nodes.indexOf(node) < 0 && collectionNodes.indexOf(node) < 0 && (node !== endNode || range.endOffset > 0)) {\n            collectionNodes.push(node);\n          }\n\n          if (node.nodeName === 'IMG' && node.parentElement.contentEditable === 'true') {\n            collectionNodes.push(node);\n          }\n        }\n\n        parentNode = this.blockParentNode(endNode);\n\n        if (parentNode && this.ignoreTableTag(parentNode) && collectionNodes.indexOf(parentNode) < 0 && !isNullOrUndefined(parentNode.previousElementSibling) && parentNode.previousElementSibling.tagName !== 'IMG') {\n          collectionNodes.push(parentNode);\n        }\n      }\n    }\n\n    for (var i = collectionNodes.length - 1; i > 0; i--) {\n      var nodes = this.nodeFinds(collectionNodes[i], collectionNodes);\n\n      if (nodes.length) {\n        var listNodes = collectionNodes[i].querySelectorAll('ul, ol');\n\n        if (collectionNodes[i].tagName === 'LI' && listNodes.length > 0) {\n          continue;\n        } else {\n          collectionNodes.splice(i, 1);\n        }\n      }\n    }\n\n    return collectionNodes;\n  };\n\n  DOMNode.prototype.ignoreTableTag = function (element) {\n    return !(CONSTANT.TABLE_BLOCK_TAGS.indexOf(element.tagName.toLocaleLowerCase()) >= 0);\n  };\n\n  return DOMNode;\n}();\n\nexport { DOMNode };","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/dom-node.js"],"names":["CONSTANT","append","detach","createElement","isNullOrUndefined","NodeSelection","selfClosingTags","getLastTextNode","markerClassName","startSelection","endSelection","DOMNode","parent","currentDocument","nodeSelection","prototype","contents","element","tagName","Array","slice","call","childNodes","isBlockNode","nodeType","Node","ELEMENT_NODE","BLOCK_TAGS","indexOf","toLowerCase","isLink","blockParentNode","parentNode","hasClass","rawAttributes","rawAttr","attributes","length","d","e","nodeName","value","attr","orderRawAttr","Object","keys","sort","attrKey","attrValue","replace","clearAttributes","c","key","removeAttribute","openTagString","closeTagString","createTagString","relativeElement","innerHTML","isList","isElement","isEditable","getAttribute","className","classList","contains","replaceWith","insertBefore","parseHTMLFragment","temp","content","DocumentFragment","document","createRange","createContextualFragment","wrap","wrapper","previousSibling","appendChild","insertAfter","newNode","referenceNode","nextSibling","wrapInner","querySelector","remove","firstChild","unWrap","unWrapNode","push","removeChild","getSelectedNode","index","TEXT_NODE","nodeFinds","elements","existNodes","i","isEditorArea","range","getRangePoint","commonAncestorContainer","point","selection","getSelection","ranges","getRangeAt","rangeCount","f","get","getPreviousNode","previousElementSibling","textContent","encode","divNode","innerText","saveMarker","save","action","start","end","startTextNode","endTextNode","DEFAULT_TAG","startContainer","getNodeArray","endContainer","marker","setMarker","startChildNodes","isTableStart","startOffset","endOffset","existNode","nodes","textNodes","node","IGNORE_BLOCK_TAGS","toLocaleLowerCase","markerStart","markerEnd","ensureSelfClosingTag","isTable","parNode","parentElement","children","tdNode","querySelectorAll","lastNode","lastChild","createTempNode","target","ignoreBr","nextElementSibling","getImageTagInSelection","focusNode","blockNodes","collectionNodes","j","startNode","endNode","tempNode","trim","ignoreTableTag","contentEditable","listNodes","splice","TABLE_BLOCK_TAGS"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,oBAA1B;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,aAAzB,EAAwCC,iBAAxC,QAAiE,sBAAjE;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAO,IAAIC,eAAe,GAAG;AACzBC,EAAAA,cAAc,EAAE,uBADS;AAEzBC,EAAAA,YAAY,EAAE;AAFW,CAAtB;AAIP;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO;AAAG;AAAe,YAAY;AACrC;AACJ;AACA;AACA;AACA;AACA;AACA;AAEI,WAASA,OAAT,CAAiBC,MAAjB,EAAyBC,eAAzB,EAA0C;AACtC,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKE,aAAL,GAAqB,IAAIT,aAAJ,EAArB;AACA,SAAKQ,eAAL,GAAuBA,eAAvB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIF,EAAAA,OAAO,CAACI,SAAR,CAAkBC,QAAlB,GAA6B,UAAUC,OAAV,EAAmB;AAC5C,WAAQA,OAAO,IAAI,aAAaA,OAAO,CAACC,OAAhC,GAA0CC,KAAK,CAACJ,SAAN,CAAgBK,KAAhB,CAAsBC,IAAtB,CAA2BJ,OAAO,CAACK,UAAR,IAAsB,EAAjD,CAA1C,GAAiG,EAAzG;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIX,EAAAA,OAAO,CAACI,SAAR,CAAkBQ,WAAlB,GAAgC,UAAUN,OAAV,EAAmB;AAC/C,WAAQ,CAAC,CAACA,OAAF,IAAcA,OAAO,CAACO,QAAR,KAAqBC,IAAI,CAACC,YAA1B,IAA0C1B,QAAQ,CAAC2B,UAAT,CAAoBC,OAApB,CAA4BX,OAAO,CAACC,OAAR,CAAgBW,WAAhB,EAA5B,KAA8D,CAA9H;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIlB,EAAAA,OAAO,CAACI,SAAR,CAAkBe,MAAlB,GAA2B,UAAUb,OAAV,EAAmB;AAC1C,WAAQ,CAAC,CAACA,OAAF,IAAcA,OAAO,CAACO,QAAR,KAAqBC,IAAI,CAACC,YAA1B,IAA0C,QAAQT,OAAO,CAACC,OAAR,CAAgBW,WAAhB,EAAxE;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIlB,EAAAA,OAAO,CAACI,SAAR,CAAkBgB,eAAlB,GAAoC,UAAUd,OAAV,EAAmB;AACnD,WAAOA,OAAO,IAAIA,OAAO,CAACe,UAAR,KAAuB,KAAKpB,MAAvC,KAAmD,CAACK,OAAO,CAACe,UAAT,IACtD,CAAC,KAAKC,QAAL,CAAchB,OAAO,CAACe,UAAtB,EAAkC,cAAlC,CADE,CAAP,EAC0D,IAD1D,EACgE;AAC5Df,MAAAA,OAAO,GAAGA,OAAO,CAACe,UAAlB;;AACA,UAAI,KAAKT,WAAL,CAAiBN,OAAjB,CAAJ,EAA+B;AAC3B,eAAOA,OAAP;AACH;AACJ;;AACD,WAAOA,OAAP;AACH,GATD;AAUA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIN,EAAAA,OAAO,CAACI,SAAR,CAAkBmB,aAAlB,GAAkC,UAAUjB,OAAV,EAAmB;AACjD,QAAIkB,OAAO,GAAG,EAAd;AACA,QAAIC,UAAU,GAAGnB,OAAO,CAACmB,UAAzB;;AACA,QAAIA,UAAU,CAACC,MAAX,GAAoB,CAAxB,EAA2B;AACvB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACC,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;AACxC,YAAIC,CAAC,GAAGH,UAAU,CAACE,CAAD,CAAlB;AACAH,QAAAA,OAAO,CAACI,CAAC,CAACC,QAAH,CAAP,GAAsBD,CAAC,CAACE,KAAxB;AACH;AACJ;;AACD,WAAON,OAAP;AACH,GAVD;AAWA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIxB,EAAAA,OAAO,CAACI,SAAR,CAAkBqB,UAAlB,GAA+B,UAAUnB,OAAV,EAAmB;AAC9C,QAAI,CAACA,OAAL,EAAc;AACV,aAAO,EAAP;AACH;;AACD,QAAIyB,IAAI,GAAG,EAAX;AACA,QAAIP,OAAO,GAAG,KAAKD,aAAL,CAAmBjB,OAAnB,CAAd;AACA,QAAI0B,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYV,OAAZ,EAAqBW,IAArB,EAAnB;;AACA,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,YAAY,CAACN,MAAjC,EAAyCE,CAAC,EAA1C,EAA8C;AAC1C,UAAIQ,OAAO,GAAGJ,YAAY,CAACJ,CAAD,CAA1B;AACA,UAAIS,SAAS,GAAGb,OAAO,CAACY,OAAD,CAAvB;AACA;;AACA,UAAIC,SAAS,CAACpB,OAAV,CAAkB,GAAlB,IAAyB,CAAzB,IAA8BoB,SAAS,CAACpB,OAAV,CAAkB,GAAlB,KAA0B,CAA5D,EAA+D;AAC3Dc,QAAAA,IAAI,IAAI,MAAMK,OAAN,GAAgB,IAAhB,GAAuBC,SAAvB,GAAmC,GAA3C;AACH,OAFD,MAGK,IAAIA,SAAS,CAACpB,OAAV,CAAkB,GAAlB,KAA0B,CAA1B,IAA+BoB,SAAS,CAACpB,OAAV,CAAkB,GAAlB,KAA0B,CAA7D,EAAgE;AACjE;AACAoB,QAAAA,SAAS,GAAGA,SAAS,CAACC,OAAV,CAAkB,IAAlB,EAAwB,QAAxB,CAAZ;AACAP,QAAAA,IAAI,IAAI,MAAMK,OAAN,GAAgB,IAAhB,GAAuBC,SAAvB,GAAmC,GAA3C;AACH,OAJI,MAKA;AACDN,QAAAA,IAAI,IAAI,MAAMK,OAAN,GAAgB,IAAhB,GAAuBC,SAAvB,GAAmC,GAA3C;AACH;AACJ;;AACD,WAAON,IAAP;AACH,GAxBD;AAyBA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEI/B,EAAAA,OAAO,CAACI,SAAR,CAAkBmC,eAAlB,GAAoC,UAAUjC,OAAV,EAAmB;AACnD,SAAK,IAAIyB,IAAI,GAAGzB,OAAO,CAACmB,UAAnB,EAA+Be,CAAC,GAAGT,IAAI,CAACL,MAAL,GAAc,CAAtD,EAAyDc,CAAC,IAAI,CAA9D,EAAiEA,CAAC,EAAlE,EAAsE;AAClE,UAAIC,GAAG,GAAGV,IAAI,CAACS,CAAD,CAAd;AACAlC,MAAAA,OAAO,CAACoC,eAAR,CAAwBD,GAAG,CAACZ,QAA5B;AACH;AACJ,GALD;AAMA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEI7B,EAAAA,OAAO,CAACI,SAAR,CAAkBuC,aAAlB,GAAkC,UAAUrC,OAAV,EAAmB;AACjD,WAAO,MAAMA,OAAO,CAACC,OAAR,CAAgBW,WAAhB,EAAN,GAAsC,KAAKO,UAAL,CAAgBnB,OAAhB,CAAtC,GAAiE,GAAxE;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIN,EAAAA,OAAO,CAACI,SAAR,CAAkBwC,cAAlB,GAAmC,UAAUtC,OAAV,EAAmB;AAClD,WAAO,OAAOA,OAAO,CAACC,OAAR,CAAgBW,WAAhB,EAAP,GAAuC,GAA9C;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEIlB,EAAAA,OAAO,CAACI,SAAR,CAAkByC,eAAlB,GAAoC,UAAUtC,OAAV,EAAmBuC,eAAnB,EAAoCC,SAApC,EAA+C;AAC/E,WAAO,MAAMxC,OAAO,CAACW,WAAR,EAAN,GAA8B,KAAKO,UAAL,CAAgBqB,eAAhB,CAA9B,GAAiE,GAAjE,GAAuEC,SAAvE,GAAmF,IAAnF,GAA0FxC,OAAO,CAACW,WAAR,EAA1F,GAAkH,GAAzH;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIlB,EAAAA,OAAO,CAACI,SAAR,CAAkB4C,MAAlB,GAA2B,UAAU1C,OAAV,EAAmB;AAC1C,WAAO,CAAC,CAACA,OAAF,IAAa,CAAC,IAAD,EAAO,IAAP,EAAaW,OAAb,CAAqBX,OAAO,CAACC,OAA7B,KAAyC,CAA7D;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIP,EAAAA,OAAO,CAACI,SAAR,CAAkB6C,SAAlB,GAA8B,UAAU3C,OAAV,EAAmB;AAC7C,WAAOA,OAAO,KAAK,KAAKL,MAAxB;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEID,EAAAA,OAAO,CAACI,SAAR,CAAkB8C,UAAlB,GAA+B,UAAU5C,OAAV,EAAmB;AAC9C,WAAQ,CAAC,CAACA,OAAO,CAAC6C,YAAT,IAAyB7C,OAAO,CAAC6C,YAAR,CAAqB,iBAArB,MAA4C,MAAtE,KACD,CAAC,OAAD,EAAU,QAAV,EAAoBlC,OAApB,CAA4BX,OAAO,CAACC,OAApC,IAA+C,CADtD;AAEH,GAHD;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEIP,EAAAA,OAAO,CAACI,SAAR,CAAkBkB,QAAlB,GAA6B,UAAUhB,OAAV,EAAmB8C,SAAnB,EAA8B;AACvD,WAAO9C,OAAO,IAAIA,OAAO,CAAC+C,SAAnB,IAAgC/C,OAAO,CAAC+C,SAAR,CAAkBC,QAAlB,CAA2BF,SAA3B,CAAvC;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEIpD,EAAAA,OAAO,CAACI,SAAR,CAAkBmD,WAAlB,GAAgC,UAAUjD,OAAV,EAAmBwB,KAAnB,EAA0B;AACtD,QAAIT,UAAU,GAAGf,OAAO,CAACe,UAAzB;AACAA,IAAAA,UAAU,CAACmC,YAAX,CAAwB,KAAKC,iBAAL,CAAuB3B,KAAvB,CAAxB,EAAuDxB,OAAvD;AACAf,IAAAA,MAAM,CAACe,OAAD,CAAN;AACH,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIN,EAAAA,OAAO,CAACI,SAAR,CAAkBqD,iBAAlB,GAAsC,UAAU3B,KAAV,EAAiB;AACnD;AACA,QAAI4B,IAAI,GAAGlE,aAAa,CAAC,UAAD,CAAxB;AACAkE,IAAAA,IAAI,CAACX,SAAL,GAAiBjB,KAAjB;;AACA,QAAI4B,IAAI,CAACC,OAAL,YAAwBC,gBAA5B,EAA8C;AAC1C,aAAOF,IAAI,CAACC,OAAZ;AACH,KAFD,MAGK;AACD,aAAOE,QAAQ,CAACC,WAAT,GAAuBC,wBAAvB,CAAgDjC,KAAhD,CAAP;AACH;AACD;;AACH,GAXD;AAYA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEI9B,EAAAA,OAAO,CAACI,SAAR,CAAkB4D,IAAlB,GAAyB,UAAU1D,OAAV,EAAmB2D,OAAnB,EAA4B;AACjD3D,IAAAA,OAAO,CAACe,UAAR,CAAmBmC,YAAnB,CAAgCS,OAAhC,EAAyC3D,OAAzC;AACA2D,IAAAA,OAAO,GAAG3D,OAAO,CAAC4D,eAAlB;AACAD,IAAAA,OAAO,CAACE,WAAR,CAAoB7D,OAApB;AACA,WAAO2D,OAAP;AACH,GALD;AAMA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEIjE,EAAAA,OAAO,CAACI,SAAR,CAAkBgE,WAAlB,GAAgC,UAAUC,OAAV,EAAmBC,aAAnB,EAAkC;AAC9DA,IAAAA,aAAa,CAACjD,UAAd,CAAyBmC,YAAzB,CAAsCa,OAAtC,EAA+CC,aAAa,CAACC,WAA7D;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEIvE,EAAAA,OAAO,CAACI,SAAR,CAAkBoE,SAAlB,GAA8B,UAAUvE,MAAV,EAAkBgE,OAAlB,EAA2B;AACrDhE,IAAAA,MAAM,CAACkE,WAAP,CAAmBF,OAAnB;AACAA,IAAAA,OAAO,GAAGhE,MAAM,CAACwE,aAAP,CAAqB,mBAArB,CAAV;AACAR,IAAAA,OAAO,CAACZ,SAAR,CAAkBqB,MAAlB,CAAyB,kBAAzB;;AACA,QAAIT,OAAO,CAACZ,SAAR,CAAkB3B,MAAlB,KAA6B,CAAjC,EAAoC;AAChCuC,MAAAA,OAAO,CAACvB,eAAR,CAAwB,OAAxB;AACH;;AACD,WAAOzC,MAAM,CAAC0E,UAAP,KAAsBV,OAA7B,EAAsC;AAClCA,MAAAA,OAAO,CAACE,WAAR,CAAoBlE,MAAM,CAAC0E,UAA3B;AACH;;AACD,WAAOV,OAAP;AACH,GAXD;AAYA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIjE,EAAAA,OAAO,CAACI,SAAR,CAAkBwE,MAAlB,GAA2B,UAAUtE,OAAV,EAAmB;AAC1C,QAAIL,MAAM,GAAGK,OAAO,CAACe,UAArB;AACA,QAAIwD,UAAU,GAAG,EAAjB;;AACA,WAAOvE,OAAO,CAACqE,UAAf,EAA2B;AACvBE,MAAAA,UAAU,CAACC,IAAX,CAAgBxE,OAAO,CAACqE,UAAxB;AACA1E,MAAAA,MAAM,CAACuD,YAAP,CAAoBlD,OAAO,CAACqE,UAA5B,EAAwCrE,OAAxC;AACH;;AACDuE,IAAAA,UAAU,GAAGA,UAAU,CAACnD,MAAX,GAAoB,CAApB,GAAwBmD,UAAxB,GAAqC,CAACvE,OAAO,CAACe,UAAT,CAAlD;AACApB,IAAAA,MAAM,CAAC8E,WAAP,CAAmBzE,OAAnB;AACA,WAAOuE,UAAP;AACH,GAVD;AAWA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEI7E,EAAAA,OAAO,CAACI,SAAR,CAAkB4E,eAAlB,GAAoC,UAAU1E,OAAV,EAAmB2E,KAAnB,EAA0B;AAC1D,QAAI3E,OAAO,CAACO,QAAR,KAAqBC,IAAI,CAACC,YAA1B,IAA0CT,OAAO,CAACK,UAAR,CAAmBe,MAAnB,GAA4B,CAAtE,IACApB,OAAO,CAACK,UAAR,CAAmBsE,KAAK,GAAG,CAA3B,CADA,IACiC3E,OAAO,CAACK,UAAR,CAAmBsE,KAAK,GAAG,CAA3B,EAA8BpE,QAA9B,KAA2CC,IAAI,CAACC,YADjF,KAECT,OAAO,CAACK,UAAR,CAAmBsE,KAAK,GAAG,CAA3B,EAA8B5B,SAA9B,CAAwCC,QAAxC,CAAiDzD,eAAe,CAACC,cAAjE,KACGQ,OAAO,CAACK,UAAR,CAAmBsE,KAAK,GAAG,CAA3B,EAA8B5B,SAA9B,CAAwCC,QAAxC,CAAiDzD,eAAe,CAACE,YAAjE,CAHJ,CAAJ,EAGyF;AACrFO,MAAAA,OAAO,GAAGA,OAAO,CAACK,UAAR,CAAmBsE,KAAK,GAAG,CAA3B,CAAV;AACH,KALD,MAMK,IAAI3E,OAAO,CAACO,QAAR,KAAqBC,IAAI,CAACC,YAA1B,IAA0CT,OAAO,CAACK,UAAR,CAAmBe,MAAnB,GAA4B,CAAtE,IAA2EpB,OAAO,CAACK,UAAR,CAAmBsE,KAAnB,CAA/E,EAA0G;AAC3G3E,MAAAA,OAAO,GAAGA,OAAO,CAACK,UAAR,CAAmBsE,KAAnB,CAAV;AACH;;AACD,QAAI3E,OAAO,CAACO,QAAR,KAAqBC,IAAI,CAACoE,SAA9B,EAAyC;AACrC5E,MAAAA,OAAO,GAAGA,OAAO,CAACe,UAAlB;AACH;;AACD,WAAOf,OAAP;AACH,GAdD;AAeA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEIN,EAAAA,OAAO,CAACI,SAAR,CAAkB+E,SAAlB,GAA8B,UAAU7E,OAAV,EAAmB8E,QAAnB,EAA6B;AACvD,QAAIC,UAAU,GAAG,EAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAAC1D,MAA7B,EAAqC4D,CAAC,EAAtC,EAA0C;AACtC,UAAIhF,OAAO,CAACgD,QAAR,CAAiB8B,QAAQ,CAACE,CAAD,CAAzB,KAAiChF,OAAO,KAAK8E,QAAQ,CAACE,CAAD,CAAzD,EAA8D;AAC1DD,QAAAA,UAAU,CAACP,IAAX,CAAgBM,QAAQ,CAACE,CAAD,CAAxB;AACH;AACJ;;AACD,WAAOD,UAAP;AACH,GARD;AASA;AACJ;AACA;AACA;AACA;AACA;;;AAEIrF,EAAAA,OAAO,CAACI,SAAR,CAAkBmF,YAAlB,GAAiC,YAAY;AACzC,QAAIC,KAAK,GAAG,KAAKC,aAAL,CAAmB,CAAnB,CAAZ;AACA,QAAInF,OAAJ;;AACA,SAAKA,OAAO,GAAGkF,KAAK,CAACE,uBAArB,EAA8CpF,OAAO,IAAI,CAAC,KAAK2C,SAAL,CAAe3C,OAAf,CAA1D,EAAmF,IAAnF,EAAyF;AACrFA,MAAAA,OAAO,GAAGA,OAAO,CAACe,UAAlB;AACH;;AACD,WAAO,CAAC,CAAC,KAAK4B,SAAL,CAAe3C,OAAf,CAAT;AACH,GAPD;AAQA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIN,EAAAA,OAAO,CAACI,SAAR,CAAkBqF,aAAlB,GAAkC,UAAUE,KAAV,EAAiB;AAC/C,QAAIC,SAAS,GAAG,KAAKC,YAAL,EAAhB;AACA,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAIF,SAAS,IAAIA,SAAS,CAACG,UAAvB,IAAqCH,SAAS,CAACI,UAAnD,EAA+D;AAC3DF,MAAAA,MAAM,GAAG,EAAT;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,SAAS,CAACI,UAA9B,EAA0CC,CAAC,EAA3C,EAA+C;AAC3CH,QAAAA,MAAM,CAAChB,IAAP,CAAYc,SAAS,CAACG,UAAV,CAAqBE,CAArB,CAAZ;AACH;AACJ,KALD,MAMK;AACDH,MAAAA,MAAM,GAAG,CAAC,KAAK5F,eAAL,CAAqB4D,WAArB,EAAD,CAAT;AACH;;AACD,WAAO,gBAAgB,OAAO6B,KAAvB,GAA+BG,MAAM,CAACH,KAAD,CAArC,GAA+CG,MAAtD;AACH,GAbD;;AAcA9F,EAAAA,OAAO,CAACI,SAAR,CAAkByF,YAAlB,GAAiC,YAAY;AACzC,WAAO,KAAK1F,aAAL,CAAmB+F,GAAnB,CAAuB,KAAKhG,eAA5B,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIF,EAAAA,OAAO,CAACI,SAAR,CAAkB+F,eAAlB,GAAoC,UAAU7F,OAAV,EAAmB;AACnDA,IAAAA,OAAO,GAAGA,OAAO,CAAC8F,sBAAlB;;AACA,WAAO9F,OAAO,IAAIA,OAAO,CAAC+F,WAAR,KAAwB,IAA1C,EAAgD,IAAhD,EAAsD;AAClD/F,MAAAA,OAAO,GAAGA,OAAO,CAAC8F,sBAAlB;AACH;;AACD,WAAO9F,OAAP;AACH,GAND;AAOA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIN,EAAAA,OAAO,CAACI,SAAR,CAAkBkG,MAAlB,GAA2B,UAAUxE,KAAV,EAAiB;AACxC,QAAIyE,OAAO,GAAG1C,QAAQ,CAACrE,aAAT,CAAuB,KAAvB,CAAd;AACA+G,IAAAA,OAAO,CAACC,SAAR,GAAoB1E,KAApB,CAFwC,CAGxC;;AACA,WAAOyE,OAAO,CAACxD,SAAR,CAAkBT,OAAlB,CAA0B,gBAA1B,EAA4C,IAA5C,CAAP;AACH,GALD;AAMA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEItC,EAAAA,OAAO,CAACI,SAAR,CAAkBqG,UAAlB,GAA+B,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AACnD,QAAIC,KAAK,GAAG,KAAK3G,MAAL,CAAYwE,aAAZ,CAA0B,MAAM5E,eAAe,CAACC,cAAhD,CAAZ;AACA,QAAI+G,GAAG,GAAG,KAAK5G,MAAL,CAAYwE,aAAZ,CAA0B,MAAM5E,eAAe,CAACE,YAAhD,CAAV;AACA,QAAI+G,aAAJ;AACA,QAAIC,WAAJ;;AACA,QAAIH,KAAK,CAACP,WAAN,KAAsB,EAAtB,IAA4B5G,iBAAiB,CAACoH,GAAD,CAA7C,IAAsDF,MAAM,KAAK,KAArE,EAA4E;AACxE,UAAIC,KAAK,CAACjG,UAAN,CAAiBe,MAAjB,KAA4B,CAA5B,IAAiCkF,KAAK,CAACjG,UAAN,CAAiB,CAAjB,EAAoBkB,QAApB,KAAiC,IAAtE,EAA4E;AACxE+E,QAAAA,KAAK,CAAC7D,SAAN,GAAkB,sBAAlB;AACH,OAFD,MAGK;AACD6D,QAAAA,KAAK,CAAC7D,SAAN,GAAkB,kBAAlB;AACH;AACJ;;AACD,QAAI,KAAKzB,QAAL,CAAcsF,KAAd,EAAqB/G,eAAe,CAACC,cAArC,KAAwD8G,KAAK,CAACvD,SAAN,CAAgB3B,MAAhB,GAAyB,CAArF,EAAwF;AACpF,UAAIY,OAAO,GAAG,KAAKO,eAAL,CAAqBxD,QAAQ,CAAC2H,WAA9B,EAA2CJ,KAA3C,EAAkD,KAAKN,MAAL,CAAYM,KAAK,CAACP,WAAlB,CAAlD,CAAd;AACA,WAAK9C,WAAL,CAAiBqD,KAAjB,EAAwBtE,OAAxB;AACAsE,MAAAA,KAAK,GAAG,KAAK3G,MAAL,CAAYwE,aAAZ,CAA0B,MAAM5E,eAAe,CAACC,cAAhD,CAAR;AACA8G,MAAAA,KAAK,CAACvD,SAAN,CAAgBqB,MAAhB,CAAuB7E,eAAe,CAACC,cAAvC;AACAgH,MAAAA,aAAa,GAAGF,KAAK,CAACjG,UAAN,CAAiB,CAAjB,CAAhB;AACH,KAND,MAOK;AACDmG,MAAAA,aAAa,GAAG,KAAKlC,MAAL,CAAYgC,KAAZ,EAAmB,CAAnB,CAAhB;AACH;;AACD,QAAI,KAAKtF,QAAL,CAAcuF,GAAd,EAAmBhH,eAAe,CAACE,YAAnC,KAAoD8G,GAAG,CAACxD,SAAJ,CAAc3B,MAAd,GAAuB,CAA/E,EAAkF;AAC9E,UAAIY,OAAO,GAAG,KAAKO,eAAL,CAAqBxD,QAAQ,CAAC2H,WAA9B,EAA2CH,GAA3C,EAAgD,KAAKP,MAAL,CAAYO,GAAG,CAACR,WAAhB,CAAhD,CAAd;AACA,WAAK9C,WAAL,CAAiBsD,GAAjB,EAAsBvE,OAAtB;AACAuE,MAAAA,GAAG,GAAG,KAAK5G,MAAL,CAAYwE,aAAZ,CAA0B,MAAM5E,eAAe,CAACE,YAAhD,CAAN;AACA8G,MAAAA,GAAG,CAACxD,SAAJ,CAAcqB,MAAd,CAAqB7E,eAAe,CAACE,YAArC;AACAgH,MAAAA,WAAW,GAAGF,GAAG,CAAClG,UAAJ,CAAe,CAAf,CAAd;AACH,KAND,MAOK;AACDoG,MAAAA,WAAW,GAAGF,GAAG,GAAG,KAAKjC,MAAL,CAAYiC,GAAZ,EAAiB,CAAjB,CAAH,GAAyBC,aAA1C;AACH;;AACDJ,IAAAA,IAAI,CAACO,cAAL,GAAsBP,IAAI,CAACQ,YAAL,CAAkBJ,aAAlB,EAAiC,IAAjC,CAAtB;AACAJ,IAAAA,IAAI,CAACS,YAAL,GAAoBT,IAAI,CAACQ,YAAL,CAAkBH,WAAlB,EAA+B,KAA/B,CAApB;AACA,WAAOL,IAAP;AACH,GApCD;;AAqCA1G,EAAAA,OAAO,CAACI,SAAR,CAAkBgH,MAAlB,GAA2B,UAAUhE,SAAV,EAAqBiD,WAArB,EAAkC;AACzD,WAAO,kBAAkBjD,SAAlB,GAA8B,IAA9B,GAAqCiD,WAArC,GAAmD,SAA1D;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIrG,EAAAA,OAAO,CAACI,SAAR,CAAkBiH,SAAlB,GAA8B,UAAUX,IAAV,EAAgB;AAC1C,QAAIlB,KAAK,GAAGkB,IAAI,CAAClB,KAAjB;AACA,QAAI8B,eAAe,GAAG9B,KAAK,CAACyB,cAAN,CAAqBtG,UAA3C;AACA,QAAI4G,YAAY,GAAGD,eAAe,CAAC5F,MAAhB,GAAyB,CAAzB,IAA8B4F,eAAe,CAAC,CAAD,CAAf,CAAmBzF,QAAnB,KAAgC,OAAjF;AACA,QAAI+E,KAAK,GAAI,CAACW,YAAY,GAAG3H,eAAe,CAAC0H,eAAe,CAAC9B,KAAK,CAACgC,WAAN,GAAoB,CAArB,CAAhB,CAAlB,GACtBF,eAAe,CAAE9B,KAAK,CAACgC,WAAN,GAAoB,CAArB,GAA2BhC,KAAK,CAACgC,WAAN,GAAoB,CAA/C,GAAoDhC,KAAK,CAACgC,WAA3D,CADN,KACkFhC,KAAK,CAACyB,cADrG;AAEA,QAAIJ,GAAG,GAAIrB,KAAK,CAAC2B,YAAN,CAAmBxG,UAAnB,CAA+B6E,KAAK,CAACiC,SAAN,GAAkB,CAAnB,GAAyBjC,KAAK,CAACiC,SAAN,GAAkB,CAA3C,GAAgDjC,KAAK,CAACiC,SAApF,KACJjC,KAAK,CAAC2B,YADb;;AAEA,QAAKP,KAAK,CAAC/F,QAAN,KAAmBC,IAAI,CAACC,YAAxB,IAAwC8F,GAAG,CAAChG,QAAJ,KAAiBC,IAAI,CAACC,YAA/D,KAAiF6F,KAAK,CAACtD,QAAN,CAAeuD,GAAf,KAAuBA,GAAG,CAACvD,QAAJ,CAAasD,KAAb,CAAxG,CAAJ,EAAkI;AAC9H,UAAIc,SAAS,GAAGd,KAAK,CAACtD,QAAN,CAAeuD,GAAf,IAAsBD,KAAtB,GAA8BC,GAA9C;AACA,UAAI5D,SAAS,GAAGyE,SAAS,CAAC7G,QAAV,KAAuBC,IAAI,CAACoE,SAA5C;;AACA,UAAIjC,SAAJ,EAAe;AACX,YAAI0E,KAAK,GAAG,EAAZ;AACA,YAAIC,SAAS,GAAG,EAAhB;;AACA,aAAK,IAAIC,IAAI,GAAGH,SAAhB,EAA2BA,SAAS,CAACpE,QAAV,CAAmBuE,IAAnB,CAA3B,EAAqD,IAArD,EAA2D;AACvD,cAAIF,KAAK,CAAC1G,OAAN,CAAc4G,IAAd,IAAsB,CAAtB,IAA2BA,IAAI,CAAClH,UAAhC,IAA8CkH,IAAI,CAAClH,UAAL,CAAgBe,MAAlE,EAA0E;AACtEiG,YAAAA,KAAK,CAAC7C,IAAN,CAAW+C,IAAX;AACAA,YAAAA,IAAI,GAAGA,IAAI,CAAClH,UAAL,CAAgB,CAAhB,CAAP;AACH,WAHD,MAIK,IAAIkH,IAAI,CAACtD,WAAT,EAAsB;AACvBsD,YAAAA,IAAI,GAAGA,IAAI,CAACtD,WAAZ;AACH,WAFI,MAGA,IAAIsD,IAAI,CAACxG,UAAT,EAAqB;AACtBwG,YAAAA,IAAI,GAAGA,IAAI,CAACxG,UAAZ;AACAsG,YAAAA,KAAK,CAAC7C,IAAN,CAAW+C,IAAX;AACH;;AACD,cAAID,SAAS,CAAC3G,OAAV,CAAkB4G,IAAlB,IAA0B,CAA1B,KAAgCA,IAAI,CAAChH,QAAL,KAAkBC,IAAI,CAACoE,SAAvB,IAC/B7F,QAAQ,CAACyI,iBAAT,CAA2B7G,OAA3B,CAAmC4G,IAAI,CAACxG,UAAL,CAAgBd,OAAhB,CAAwBwH,iBAAxB,EAAnC,KAAmF,CAAnF,KACOF,IAAI,CAACtH,OAAL,KAAiB,IAAjB,IAAyBsH,IAAI,CAACtH,OAAL,KAAiB,KADjD,CADD,CAAJ,EAEgE;AAC5DqH,YAAAA,SAAS,CAAC9C,IAAV,CAAe+C,IAAf;AACH;AACJ;;AACD,YAAID,SAAS,CAAClG,MAAd,EAAsB;AAClBkF,UAAAA,KAAK,GAAGA,KAAK,CAACtD,QAAN,CAAeuD,GAAf,IAAsBe,SAAS,CAAC,CAAD,CAA/B,GAAqChB,KAA7C;AACAC,UAAAA,GAAG,GAAGe,SAAS,CAACA,SAAS,CAAClG,MAAV,GAAmB,CAApB,CAAf;AACH;AACJ;AACJ;;AACD,QAAIkF,KAAK,KAAKC,GAAd,EAAmB;AACf,UAAID,KAAK,CAAC/F,QAAN,KAAmBC,IAAI,CAACoE,SAAxB,KAAuC0B,KAAK,CAACrG,OAAN,KAAkB,IAAlB,IACvClB,QAAQ,CAACyI,iBAAT,CAA2B7G,OAA3B,CAAmC2F,KAAK,CAACvF,UAAN,CAAiBd,OAAjB,CAAyBwH,iBAAzB,EAAnC,KAAoF,CAD9C,IAEtCnB,KAAK,CAACrG,OAAN,KAAkB,KAFlB,CAAJ,EAE8B;AAC1B,aAAKgD,WAAL,CAAiBqD,KAAjB,EAAwB,KAAKQ,MAAL,CAAYvH,eAAe,CAACC,cAA5B,EAA4C,KAAKwG,MAAL,CAAYM,KAAK,CAACP,WAAlB,CAA5C,CAAxB;AACA,YAAI2B,WAAW,GAAGxC,KAAK,CAACyB,cAAN,CAAqBxC,aAArB,CAAmC,MAAM5E,eAAe,CAACC,cAAzD,CAAlB;AACAkI,QAAAA,WAAW,CAAC7D,WAAZ,CAAwByC,KAAxB;AACH,OAND,MAOK;AACD,aAAKrD,WAAL,CAAiBqD,KAAjB,EAAwB,KAAKQ,MAAL,CAAYvH,eAAe,CAACC,cAA5B,EAA4C,KAAKwG,MAAL,CAAYM,KAAK,CAACP,WAAlB,CAA5C,CAAxB;AACH;;AACD,UAAIQ,GAAG,CAAChG,QAAJ,KAAiBC,IAAI,CAACoE,SAAtB,IAAmC2B,GAAG,CAACtG,OAAJ,KAAgB,IAAnD,IACAlB,QAAQ,CAACyI,iBAAT,CAA2B7G,OAA3B,CAAmC4F,GAAG,CAACxF,UAAJ,CAAed,OAAf,CAAuBwH,iBAAvB,EAAnC,KAAkF,CADtF,EACyF;AACrF,aAAKxE,WAAL,CAAiBsD,GAAjB,EAAsB,KAAKO,MAAL,CAAYvH,eAAe,CAACE,YAA5B,EAA0C,KAAKuG,MAAL,CAAYO,GAAG,CAACR,WAAhB,CAA1C,CAAtB;AACA,YAAI4B,SAAS,GAAGzC,KAAK,CAAC2B,YAAN,CAAmB1C,aAAnB,CAAiC,MAAM5E,eAAe,CAACE,YAAvD,CAAhB;AACAkI,QAAAA,SAAS,CAAC9D,WAAV,CAAsB0C,GAAtB;AACH,OALD,MAMK;AACD,aAAKqB,oBAAL,CAA0BrB,GAA1B,EAA+BhH,eAAe,CAACE,YAA/C,EAA6DyF,KAA7D;AACH;AACJ,KApBD,MAqBK;AACD,WAAK0C,oBAAL,CAA0BtB,KAA1B,EAAiC/G,eAAe,CAACC,cAAjD,EAAiE0F,KAAjE;AACH;AACJ,GA9DD;AA+DA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEIxF,EAAAA,OAAO,CAACI,SAAR,CAAkB8H,oBAAlB,GAAyC,UAAUtB,KAAV,EAAiBxD,SAAjB,EAA4BoC,KAA5B,EAAmC;AACxE,QAAI2C,OAAO,GAAG,KAAd;;AACA,QAAIvB,KAAK,CAAC/F,QAAN,KAAmB,CAAvB,EAA0B;AACtB,WAAK0C,WAAL,CAAiBqD,KAAjB,EAAwB,KAAKQ,MAAL,CAAYhE,SAAZ,EAAuB,KAAKkD,MAAL,CAAYM,KAAK,CAACP,WAAlB,CAAvB,CAAxB;AACH,KAFD,MAGK,IAAIO,KAAK,CAACrG,OAAN,KAAkB,IAAtB,EAA4B;AAC7B,WAAKgD,WAAL,CAAiBqD,KAAjB,EAAwB,KAAKQ,MAAL,CAAYhE,SAAZ,EAAuB,KAAKkD,MAAL,CAAYM,KAAK,CAACP,WAAlB,CAAvB,CAAxB;AACA,UAAI2B,WAAW,GAAGxC,KAAK,CAACyB,cAAN,CAAqBxC,aAArB,CAAmC,MAAMrB,SAAzC,CAAlB;AACA4E,MAAAA,WAAW,CAAC7D,WAAZ,CAAwByC,KAAxB;AACH,KAJI,MAKA;AACD,UAAIA,KAAK,CAACrG,OAAN,KAAkB,KAAtB,EAA6B;AACzB,YAAI6H,OAAO,GAAGvE,QAAQ,CAACrE,aAAT,CAAuB,GAAvB,CAAd;AACAoH,QAAAA,KAAK,CAACyB,aAAN,CAAoB7E,YAApB,CAAiC4E,OAAjC,EAA0CxB,KAA1C;AACAwB,QAAAA,OAAO,CAACjE,WAAR,CAAoByC,KAApB;AACAA,QAAAA,KAAK,GAAGwB,OAAO,CAACE,QAAR,CAAiB,CAAjB,CAAR;AACH;;AACD,UAAI1B,KAAK,CAACrG,OAAN,KAAkB,OAAtB,EAA+B;AAC3B4H,QAAAA,OAAO,GAAG,IAAV;;AACA,YAAIvB,KAAK,CAACP,WAAN,KAAsB,EAA1B,EAA8B;AAC1B,cAAIkC,MAAM,GAAG3B,KAAK,CAAC4B,gBAAN,CAAuB,IAAvB,CAAb;AACA5B,UAAAA,KAAK,GAAG2B,MAAM,CAACA,MAAM,CAAC7G,MAAP,GAAgB,CAAjB,CAAd;AACAkF,UAAAA,KAAK,GAAG,CAACnH,iBAAiB,CAACmH,KAAK,CAACjG,UAAN,CAAiB,CAAjB,CAAD,CAAlB,GAA0CiG,KAAK,CAACjG,UAAN,CAAiB,CAAjB,CAA1C,GAAgEiG,KAAxE;AACH,SAJD,MAKK;AACD,cAAI6B,QAAQ,GAAG7B,KAAK,CAAC8B,SAArB;;AACA,iBAAOD,QAAQ,CAAC5H,QAAT,KAAsB,CAAtB,IAA2B4H,QAAQ,CAAC5G,QAAT,KAAsB,OAAjD,IACH4G,QAAQ,CAAC5G,QAAT,KAAsB,IAD1B,EACgC;AAC5B4G,YAAAA,QAAQ,GAAGA,QAAQ,CAACC,SAApB;AACH;;AACD9B,UAAAA,KAAK,GAAG6B,QAAR;AACH;AACJ;;AACD,WAAK,IAAInD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3F,eAAe,CAAC+B,MAApC,EAA4C4D,CAAC,EAA7C,EAAiD;AAC7CsB,QAAAA,KAAK,GAAIA,KAAK,CAACrG,OAAN,KAAkBZ,eAAe,CAAC2F,CAAD,CAAjC,IAAwC,CAAC6C,OAA1C,GAAqDvB,KAAK,CAACvF,UAA3D,GAAwEuF,KAAhF;AACH;;AACD,UAAIA,KAAK,CAAC/F,QAAN,KAAmB,CAAnB,IAAwB+F,KAAK,CAAC/E,QAAN,KAAmB,OAA/C,EAAwD;AACpD,aAAK0B,WAAL,CAAiBqD,KAAjB,EAAwB,KAAKQ,MAAL,CAAYhE,SAAZ,EAAuB,KAAKkD,MAAL,CAAYM,KAAK,CAACP,WAAlB,CAAvB,CAAxB;AACH,OAFD,MAGK,IAAIO,KAAK,CAAC/E,QAAN,KAAmB,IAAvB,EAA6B;AAC9B,aAAK0B,WAAL,CAAiBqD,KAAjB,EAAwB,KAAKQ,MAAL,CAAYvH,eAAe,CAACE,YAA5B,EAA0C,KAAKuG,MAAL,CAAYM,KAAK,CAACP,WAAlB,CAA1C,CAAxB;AACA,YAAI4B,SAAS,GAAGzC,KAAK,CAAC2B,YAAN,CAAmB1C,aAAnB,CAAiC,MAAM5E,eAAe,CAACE,YAAvD,CAAhB;AACAkI,QAAAA,SAAS,CAAC9D,WAAV,CAAsByC,KAAtB;AACH,OAJI,MAKA;AACD,YAAIQ,MAAM,GAAG,KAAKA,MAAL,CAAYhE,SAAZ,EAAuB,EAAvB,CAAb;AACA9D,QAAAA,MAAM,CAAC,CAAC,KAAKmE,iBAAL,CAAuB2D,MAAvB,CAAD,CAAD,EAAmCR,KAAnC,CAAN;AACH;AACJ;AACJ,GAjDD;AAkDA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEI5G,EAAAA,OAAO,CAACI,SAAR,CAAkBuI,cAAlB,GAAmC,UAAUrI,OAAV,EAAmB;AAClD,QAAI+F,WAAW,GAAG/F,OAAO,CAAC+F,WAA1B;;AACA,QAAI/F,OAAO,CAACC,OAAR,KAAoB,IAAxB,EAA8B;AAC1B,UAAI0D,OAAO,GAAG,MAAM5E,QAAQ,CAAC2H,WAAf,GAA6B,KAA7B,GAAqC3H,QAAQ,CAAC2H,WAA9C,GAA4D,GAA1E;AACA,UAAIa,IAAI,GAAGvH,OAAO,CAACe,UAAnB;;AACA,UAAIhC,QAAQ,CAACyI,iBAAT,CAA2B7G,OAA3B,CAAmC4G,IAAI,CAACtH,OAAL,CAAawH,iBAAb,EAAnC,KAAwE,CAA5E,EAA+E;AAC3EzH,QAAAA,OAAO,GAAG,KAAK0D,IAAL,CAAU1D,OAAV,EAAmB,KAAKmD,iBAAL,CAAuBQ,OAAvB,CAAnB,CAAV;AACH;AACJ,KAND,MAOK,IAAM3D,OAAO,CAACO,QAAR,KAAqBC,IAAI,CAACoE,SAA1B,KACN5E,OAAO,CAAC+C,SAAR,CAAkBC,QAAlB,CAA2BzD,eAAe,CAACC,cAA3C,KACGQ,OAAO,CAAC+C,SAAR,CAAkBC,QAAlB,CAA2BzD,eAAe,CAACE,YAA3C,CAFG,CAAD,IAGNsG,WAAW,CAAC/D,OAAZ,CAAoB,KAApB,EAA2B,EAA3B,EAA+BA,OAA/B,CAAuC,cAAvC,EAAuD,EAAvD,EAA2DZ,MAA3D,GAAoE,CAH9D,IAIN2E,WAAW,CAAC3E,MAAZ,IAAsB2E,WAAW,CAACpF,OAAZ,CAAoB,IAApB,IAA4B,CAJjD,EAIqD;AACtD,UAAIgD,OAAO,GAAG,MAAM5E,QAAQ,CAAC2H,WAAf,GAA6B,KAA7B,GAAqC3H,QAAQ,CAAC2H,WAA9C,GAA4D,GAA1E;AACA,UAAI4B,MAAM,GAAGtI,OAAb;AACAA,MAAAA,OAAO,GAAG,KAAK0D,IAAL,CAAU1D,OAAV,EAAmB,KAAKmD,iBAAL,CAAuBQ,OAAvB,CAAnB,CAAV;AACA,UAAI4E,QAAQ,GAAGD,MAAM,CAAC/H,QAAP,KAAoBC,IAAI,CAACC,YAAzB,IAAyC6H,MAAM,CAACjE,UAAhD,IAA8DiE,MAAM,CAACjE,UAAP,CAAkB9C,QAAlB,KAA+B,IAA7F,KACP+G,MAAM,CAACvF,SAAP,CAAiBC,QAAjB,CAA0BzD,eAAe,CAACC,cAA1C,KACA8I,MAAM,CAACvF,SAAP,CAAiBC,QAAjB,CAA0BzD,eAAe,CAACE,YAA1C,CAFO,CAAf;;AAGA,UAAI,CAAC8I,QAAD,IAAavI,OAAO,CAACwI,kBAArB,IAA2CxI,OAAO,CAACwI,kBAAR,CAA2BvI,OAA3B,KAAuC,IAAtF,EAA4F;AACxFD,QAAAA,OAAO,CAAC6D,WAAR,CAAoB7D,OAAO,CAACwI,kBAA5B;AACH;AACJ;;AACD,WAAOxI,OAAP;AACH,GAzBD;AA0BA;AACJ;AACA;AACA;AACA;AACA;;;AAEIN,EAAAA,OAAO,CAACI,SAAR,CAAkB2I,sBAAlB,GAA2C,YAAY;AACnD,QAAInD,SAAS,GAAG,KAAKC,YAAL,EAAhB;;AACA,QAAI,KAAKN,YAAL,MAAuBK,SAAS,CAACI,UAArC,EAAiD;AAC7C,aAAOJ,SAAS,CAACoD,SAAV,CAAoBR,gBAApB,CAAqC,KAArC,CAAP;AACH;;AACD,WAAO,IAAP;AACH,GAND;AAOA;AACJ;AACA;AACA;AACA;AACA;;;AAEIxI,EAAAA,OAAO,CAACI,SAAR,CAAkB6I,UAAlB,GAA+B,YAAY;AACvC,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAItD,SAAS,GAAG,KAAKC,YAAL,EAAhB;;AACA,QAAI,KAAKN,YAAL,MAAuBK,SAAS,CAACI,UAArC,EAAiD;AAC7C,UAAIF,MAAM,GAAG,KAAKL,aAAL,EAAb;;AACA,WAAK,IAAI0D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrD,MAAM,CAACpE,MAA3B,EAAmCyH,CAAC,EAApC,EAAwC;AACpC,YAAI9H,UAAU,GAAG,KAAK,CAAtB;AACA,YAAImE,KAAK,GAAGM,MAAM,CAACqD,CAAD,CAAlB;AACA,YAAIC,SAAS,GAAG,KAAKpE,eAAL,CAAqBQ,KAAK,CAACyB,cAA3B,EAA2CzB,KAAK,CAACgC,WAAjD,CAAhB;AACA,YAAI6B,OAAO,GAAG,KAAKrE,eAAL,CAAqBQ,KAAK,CAAC2B,YAA3B,EAAyC3B,KAAK,CAACiC,SAA/C,CAAd;;AACA,YAAI,KAAK7G,WAAL,CAAiBwI,SAAjB,KAA+BF,eAAe,CAACjI,OAAhB,CAAwBmI,SAAxB,IAAqC,CAAxE,EAA2E;AACvEF,UAAAA,eAAe,CAACpE,IAAhB,CAAqBsE,SAArB;AACH;;AACD/H,QAAAA,UAAU,GAAG,KAAKD,eAAL,CAAqBgI,SAArB,CAAb;;AACA,YAAI/H,UAAU,IAAI6H,eAAe,CAACjI,OAAhB,CAAwBI,UAAxB,IAAsC,CAAxD,EAA2D;AACvD,cAAIhC,QAAQ,CAACyI,iBAAT,CAA2B7G,OAA3B,CAAmCI,UAAU,CAACd,OAAX,CAAmBwH,iBAAnB,EAAnC,KAA8E,CAA9E,KAAoFqB,SAAS,CAAC7I,OAAV,KAAsB,IAAtB,IACpF6I,SAAS,CAACvI,QAAV,KAAuBC,IAAI,CAACoE,SADwD,IAEpFkE,SAAS,CAAC/F,SAAV,CAAoBC,QAApB,CAA6BzD,eAAe,CAACC,cAA7C,CAFoF,IAGpFsJ,SAAS,CAAC/F,SAAV,CAAoBC,QAApB,CAA6BzD,eAAe,CAACE,YAA7C,CAHA,CAAJ,EAGiE;AAC7D,gBAAIuJ,QAAQ,GAAGF,SAAS,CAAClF,eAAV,IACXkF,SAAS,CAAClF,eAAV,CAA0BrD,QAA1B,KAAuCC,IAAI,CAACoE,SADjC,GAEXkE,SAAS,CAAClF,eAFC,GAEiBkF,SAFhC;;AAGA,gBAAI,CAACA,SAAS,CAAC7E,WAAX,IAA0B,CAAC6E,SAAS,CAAClF,eAArC,IAAwDkF,SAAS,CAAC7I,OAAV,KAAsB,IAAlF,EAAwF;AACpF2I,cAAAA,eAAe,CAACpE,IAAhB,CAAqBwE,QAArB;AACH,aAFD,MAGK;AACDJ,cAAAA,eAAe,CAACpE,IAAhB,CAAqB,KAAK6D,cAAL,CAAoBW,QAApB,CAArB;AACH;AACJ,WAbD,MAcK;AACDJ,YAAAA,eAAe,CAACpE,IAAhB,CAAqBzD,UAArB;AACH;AACJ;;AACD,YAAIsG,KAAK,GAAG,EAAZ;;AACA,aAAK,IAAIE,IAAI,GAAGuB,SAAhB,EAA2BvB,IAAI,KAAKwB,OAAT,IAAoBxB,IAAI,KAAK,KAAK5H,MAA7D,EAAqE,IAArE,EAA2E;AACvE,cAAI0H,KAAK,CAAC1G,OAAN,CAAc4G,IAAd,IAAsB,CAAtB,IAA2BA,IAAI,CAAClH,UAAhC,IAA8CkH,IAAI,CAAClH,UAAL,CAAgBe,MAAlE,EAA0E;AACtEiG,YAAAA,KAAK,CAAC7C,IAAN,CAAW+C,IAAX;AACAA,YAAAA,IAAI,GAAGA,IAAI,CAAClH,UAAL,CAAgB,CAAhB,CAAP;AACH,WAHD,MAIK,IAAIkH,IAAI,IAAIA,IAAI,CAAChH,QAAL,KAAkB,CAA1B,KAAgCgH,IAAI,CAACtH,OAAL,KAAiB,IAAjB,IAA0BsH,IAAI,CAAChH,QAAL,KAAkBC,IAAI,CAACoE,SAAvB,IAC/D2C,IAAI,CAACxB,WAAL,CAAiBkD,IAAjB,OAA4B,EADS,IACD1B,IAAI,CAAChH,QAAL,KAAkBC,IAAI,CAACoE,SAAvB,KACnC2C,IAAI,CAACxE,SAAL,CAAeC,QAAf,CAAwBzD,eAAe,CAACC,cAAxC,KACG+H,IAAI,CAACxE,SAAL,CAAeC,QAAf,CAAwBzD,eAAe,CAACE,YAAxC,CAFgC,CAD/B,KAILV,QAAQ,CAACyI,iBAAT,CAA2B7G,OAA3B,CAAmC4G,IAAI,CAACxG,UAAL,CAAgBd,OAAhB,CAAwBwH,iBAAxB,EAAnC,KAAmF,CAJlF,EAIqF;AACtFF,YAAAA,IAAI,GAAG,KAAKc,cAAL,CAAoBd,IAApB,CAAP;AACH,WANI,MAOA,IAAIA,IAAI,CAACtD,WAAL,IAAoBsD,IAAI,CAACtD,WAAL,CAAiB1D,QAAjB,KAA8B,CAAlD,KACJgH,IAAI,CAACtD,WAAL,CAAiBhE,OAAjB,KAA6B,IAA7B,IACGsH,IAAI,CAACtD,WAAL,CAAiB1D,QAAjB,KAA8BC,IAAI,CAACoE,SADtC,IAEG2C,IAAI,CAACtD,WAAL,CAAiBlB,SAAjB,CAA2BC,QAA3B,CAAoCzD,eAAe,CAACC,cAApD,CAFH,IAGG+H,IAAI,CAACtD,WAAL,CAAiBlB,SAAjB,CAA2BC,QAA3B,CAAoCzD,eAAe,CAACE,YAApD,CAJC,KAKLV,QAAQ,CAACyI,iBAAT,CAA2B7G,OAA3B,CAAmC4G,IAAI,CAACtD,WAAL,CAAiBlD,UAAjB,CAA4Bd,OAA5B,CAAoCwH,iBAApC,EAAnC,KAA+F,CAL9F,EAKiG;AAClGF,YAAAA,IAAI,GAAG,KAAKc,cAAL,CAAoBd,IAAI,CAACtD,WAAzB,CAAP;AACH,WAPI,MAQA,IAAIsD,IAAI,CAACtD,WAAT,EAAsB;AACvBsD,YAAAA,IAAI,GAAGA,IAAI,CAACtD,WAAZ;AACH,WAFI,MAGA,IAAIsD,IAAI,CAACxG,UAAT,EAAqB;AACtBwG,YAAAA,IAAI,GAAGA,IAAI,CAACxG,UAAZ;AACAsG,YAAAA,KAAK,CAAC7C,IAAN,CAAW+C,IAAX;AACH;;AACD,cAAIqB,eAAe,CAACjI,OAAhB,CAAwB4G,IAAxB,IAAgC,CAAhC,IAAqCA,IAAI,CAAChH,QAAL,KAAkBC,IAAI,CAACC,YAA5D,IACA1B,QAAQ,CAACyI,iBAAT,CAA2B7G,OAA3B,CAAmC4G,IAAI,CAACxG,UAAL,CAAgBd,OAAhB,CAAwBwH,iBAAxB,EAAnC,KAAmF,CADnF,KAECF,IAAI,CAACxE,SAAL,CAAeC,QAAf,CAAwBzD,eAAe,CAACC,cAAxC,KACG+H,IAAI,CAACxE,SAAL,CAAeC,QAAf,CAAwBzD,eAAe,CAACE,YAAxC,CAHJ,CAAJ,EAGgE;AAC5DmJ,YAAAA,eAAe,CAACpE,IAAhB,CAAqB,KAAK6D,cAAL,CAAoBd,IAApB,CAArB;AACH;;AACD,cAAI,KAAKjH,WAAL,CAAiBiH,IAAjB,KAA0B,KAAK2B,cAAL,CAAoB3B,IAApB,CAA1B,IAAuDF,KAAK,CAAC1G,OAAN,CAAc4G,IAAd,IAAsB,CAA7E,IACAqB,eAAe,CAACjI,OAAhB,CAAwB4G,IAAxB,IAAgC,CADhC,KACsCA,IAAI,KAAKwB,OAAT,IAAoB7D,KAAK,CAACiC,SAAN,GAAkB,CAD5E,CAAJ,EACoF;AAChFyB,YAAAA,eAAe,CAACpE,IAAhB,CAAqB+C,IAArB;AACH;;AACD,cAAIA,IAAI,CAAChG,QAAL,KAAkB,KAAlB,IAA2BgG,IAAI,CAACQ,aAAL,CAAmBoB,eAAnB,KAAuC,MAAtE,EAA8E;AAC1EP,YAAAA,eAAe,CAACpE,IAAhB,CAAqB+C,IAArB;AACH;AACJ;;AACDxG,QAAAA,UAAU,GAAG,KAAKD,eAAL,CAAqBiI,OAArB,CAAb;;AACA,YAAIhI,UAAU,IAAI,KAAKmI,cAAL,CAAoBnI,UAApB,CAAd,IAAiD6H,eAAe,CAACjI,OAAhB,CAAwBI,UAAxB,IAAsC,CAAvF,IACC,CAAC5B,iBAAiB,CAAC4B,UAAU,CAAC+E,sBAAZ,CAAlB,IAAyD/E,UAAU,CAAC+E,sBAAX,CAAkC7F,OAAlC,KAA8C,KAD5G,EACoH;AAChH2I,UAAAA,eAAe,CAACpE,IAAhB,CAAqBzD,UAArB;AACH;AACJ;AACJ;;AACD,SAAK,IAAIiE,CAAC,GAAG4D,eAAe,CAACxH,MAAhB,GAAyB,CAAtC,EAAyC4D,CAAC,GAAG,CAA7C,EAAgDA,CAAC,EAAjD,EAAqD;AACjD,UAAIqC,KAAK,GAAG,KAAKxC,SAAL,CAAe+D,eAAe,CAAC5D,CAAD,CAA9B,EAAmC4D,eAAnC,CAAZ;;AACA,UAAIvB,KAAK,CAACjG,MAAV,EAAkB;AACd,YAAIgI,SAAS,GAAGR,eAAe,CAAC5D,CAAD,CAAf,CAAmBkD,gBAAnB,CAAoC,QAApC,CAAhB;;AACA,YAAIU,eAAe,CAAC5D,CAAD,CAAf,CAAmB/E,OAAnB,KAA+B,IAA/B,IAAuCmJ,SAAS,CAAChI,MAAV,GAAmB,CAA9D,EAAiE;AAC7D;AACH,SAFD,MAGK;AACDwH,UAAAA,eAAe,CAACS,MAAhB,CAAuBrE,CAAvB,EAA0B,CAA1B;AACH;AACJ;AACJ;;AACD,WAAO4D,eAAP;AACH,GA/FD;;AAgGAlJ,EAAAA,OAAO,CAACI,SAAR,CAAkBoJ,cAAlB,GAAmC,UAAUlJ,OAAV,EAAmB;AAClD,WAAO,EAAEjB,QAAQ,CAACuK,gBAAT,CAA0B3I,OAA1B,CAAkCX,OAAO,CAACC,OAAR,CAAgBwH,iBAAhB,EAAlC,KAA0E,CAA5E,CAAP;AACH,GAFD;;AAGA,SAAO/H,OAAP;AACH,CAvvB4B,EAA7B;;AAwvBA,SAASA,OAAT","sourcesContent":["import * as CONSTANT from './../base/constant';\nimport { append, detach, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { NodeSelection } from './../../selection/index';\nimport { selfClosingTags } from '../../common/config';\nimport { getLastTextNode } from '../../common/util';\nexport var markerClassName = {\n    startSelection: 'e-editor-select-start',\n    endSelection: 'e-editor-select-end'\n};\n/**\n * DOMNode internal plugin\n *\n * @hidden\n\n */\nvar DOMNode = /** @class */ (function () {\n    /**\n     * Constructor for creating the DOMNode plugin\n     *\n     * @param {Element} parent - specifies the parent element\n     * @param {Document} currentDocument - specifies the current document.\n     * @hidden\n\n     */\n    function DOMNode(parent, currentDocument) {\n        this.parent = parent;\n        this.nodeSelection = new NodeSelection();\n        this.currentDocument = currentDocument;\n    }\n    /**\n     * contents method\n     *\n     * @param {Element} element - specifies the element.\n     * @returns {void}\n     * @hidden\n\n     */\n    DOMNode.prototype.contents = function (element) {\n        return (element && 'IFRAME' !== element.tagName ? Array.prototype.slice.call(element.childNodes || []) : []);\n    };\n    /**\n     * isBlockNode method\n     *\n     * @param {Element} element - specifies the node element.\n     * @returns {boolean} - sepcifies the boolean value\n     * @hidden\n\n     */\n    DOMNode.prototype.isBlockNode = function (element) {\n        return (!!element && (element.nodeType === Node.ELEMENT_NODE && CONSTANT.BLOCK_TAGS.indexOf(element.tagName.toLowerCase()) >= 0));\n    };\n    /**\n     * isLink method\n     *\n     * @param {Element} element - specifies the element\n     * @returns {boolean} -  specifies the boolean value\n     * @hidden\n\n     */\n    DOMNode.prototype.isLink = function (element) {\n        return (!!element && (element.nodeType === Node.ELEMENT_NODE && 'a' === element.tagName.toLowerCase()));\n    };\n    /**\n     * blockParentNode method\n     *\n     * @param {Element} element - specifies the element\n     * @returns {Element} - returns the element value\n     * @hidden\n\n     */\n    DOMNode.prototype.blockParentNode = function (element) {\n        for (; element && element.parentNode !== this.parent && ((!element.parentNode ||\n            !this.hasClass(element.parentNode, 'e-node-inner'))); null) {\n            element = element.parentNode;\n            if (this.isBlockNode(element)) {\n                return element;\n            }\n        }\n        return element;\n    };\n    /**\n     * rawAttributes method\n     *\n     * @param {Element} element - specifies the element\n     * @returns {string} - returns the string value\n     * @hidden\n\n     */\n    DOMNode.prototype.rawAttributes = function (element) {\n        var rawAttr = {};\n        var attributes = element.attributes;\n        if (attributes.length > 0) {\n            for (var d = 0; d < attributes.length; d++) {\n                var e = attributes[d];\n                rawAttr[e.nodeName] = e.value;\n            }\n        }\n        return rawAttr;\n    };\n    /**\n     * attributes method\n     *\n     * @param {Element} element - sepcifies the element.\n     * @returns {string} - returns the string value.\n     * @hidden\n\n     */\n    DOMNode.prototype.attributes = function (element) {\n        if (!element) {\n            return '';\n        }\n        var attr = '';\n        var rawAttr = this.rawAttributes(element);\n        var orderRawAttr = Object.keys(rawAttr).sort();\n        for (var e = 0; e < orderRawAttr.length; e++) {\n            var attrKey = orderRawAttr[e];\n            var attrValue = rawAttr[attrKey];\n            /* eslint-disable */\n            if (attrValue.indexOf(\"'\") < 0 && attrValue.indexOf('\"') >= 0) {\n                attr += ' ' + attrKey + \"='\" + attrValue + \"'\";\n            }\n            else if (attrValue.indexOf('\"') >= 0 && attrValue.indexOf(\"'\") >= 0) {\n                /* eslint-enable */\n                attrValue = attrValue.replace(/\"/g, '&quot;');\n                attr += ' ' + attrKey + '=\"' + attrValue + '\"';\n            }\n            else {\n                attr += ' ' + attrKey + '=\"' + attrValue + '\"';\n            }\n        }\n        return attr;\n    };\n    /**\n     * clearAttributes method\n     *\n     * @param {Element} element - specifies the element\n     * @returns {void}\n     * @hidden\n\n     */\n    DOMNode.prototype.clearAttributes = function (element) {\n        for (var attr = element.attributes, c = attr.length - 1; c >= 0; c--) {\n            var key = attr[c];\n            element.removeAttribute(key.nodeName);\n        }\n    };\n    /**\n     * openTagString method\n     *\n     * @param {Element} element - specifies the element.\n     * @returns {string} - returns the string\n     * @hidden\n\n     */\n    DOMNode.prototype.openTagString = function (element) {\n        return '<' + element.tagName.toLowerCase() + this.attributes(element) + '>';\n    };\n    /**\n     * closeTagString method\n     *\n     * @param {Element} element - specifies the element\n     * @returns {string} - returns the string value\n     * @hidden\n\n     */\n    DOMNode.prototype.closeTagString = function (element) {\n        return '</' + element.tagName.toLowerCase() + '>';\n    };\n    /**\n     * createTagString method\n     *\n     * @param {string} tagName - specifies the tag name\n     * @param {Element} relativeElement - specifies the relative element\n     * @param {string} innerHTML - specifies the string value\n     * @returns {string} - returns the string value.\n     * @hidden\n\n     */\n    DOMNode.prototype.createTagString = function (tagName, relativeElement, innerHTML) {\n        return '<' + tagName.toLowerCase() + this.attributes(relativeElement) + '>' + innerHTML + '</' + tagName.toLowerCase() + '>';\n    };\n    /**\n     * isList method\n     *\n     * @param {Element} element - specifes the element.\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    DOMNode.prototype.isList = function (element) {\n        return !!element && ['UL', 'OL'].indexOf(element.tagName) >= 0;\n    };\n    /**\n     * isElement method\n     *\n     * @param {Element} element - specifes the element.\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    DOMNode.prototype.isElement = function (element) {\n        return element === this.parent;\n    };\n    /**\n     * isEditable method\n     *\n     * @param {Element} element - specifes the element.\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    DOMNode.prototype.isEditable = function (element) {\n        return ((!element.getAttribute || element.getAttribute('contenteditable') === 'true')\n            && ['STYLE', 'SCRIPT'].indexOf(element.tagName) < 0);\n    };\n    /**\n     * hasClass method\n     *\n     * @param {Element} element - specifes the element.\n     * @param {string} className - specifies the class name value\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    DOMNode.prototype.hasClass = function (element, className) {\n        return element && element.classList && element.classList.contains(className);\n    };\n    /**\n     * replaceWith method\n     *\n     * @param {Element} element - specifes the element.\n     * @param {string} value - specifies the string value\n     * @returns {void}\n     * @hidden\n\n     */\n    DOMNode.prototype.replaceWith = function (element, value) {\n        var parentNode = element.parentNode;\n        parentNode.insertBefore(this.parseHTMLFragment(value), element);\n        detach(element);\n    };\n    /**\n     * parseHTMLFragment method\n     *\n     * @param {string} value - specifies the string value\n     * @returns {Element} - returns the element\n     * @hidden\n\n     */\n    DOMNode.prototype.parseHTMLFragment = function (value) {\n        /* eslint-disable */\n        var temp = createElement('template');\n        temp.innerHTML = value;\n        if (temp.content instanceof DocumentFragment) {\n            return temp.content;\n        }\n        else {\n            return document.createRange().createContextualFragment(value);\n        }\n        /* eslint-enable */\n    };\n    /**\n     * wrap method\n     *\n     * @param {Element} element - specifies the element\n     * @param {Element} wrapper - specifies the element.\n     * @returns {Element} - returns the element\n     * @hidden\n\n     */\n    DOMNode.prototype.wrap = function (element, wrapper) {\n        element.parentNode.insertBefore(wrapper, element);\n        wrapper = element.previousSibling;\n        wrapper.appendChild(element);\n        return wrapper;\n    };\n    /**\n     * insertAfter method\n     *\n     * @param {Element} newNode - specifies the new node element\n     * @param {Element} referenceNode - specifies the referenece node\n     * @returns {void}\n     * @hidden\n\n     */\n    DOMNode.prototype.insertAfter = function (newNode, referenceNode) {\n        referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n    };\n    /**\n     * wrapInner method\n     *\n     * @param {Element} parent - specifies the parent element.\n     * @param {Element} wrapper - specifies the wrapper element.\n     * @returns {Element} - returns the element\n     * @hidden\n\n     */\n    DOMNode.prototype.wrapInner = function (parent, wrapper) {\n        parent.appendChild(wrapper);\n        wrapper = parent.querySelector('.e-rte-wrap-inner');\n        wrapper.classList.remove('e-rte-wrap-inner');\n        if (wrapper.classList.length === 0) {\n            wrapper.removeAttribute('class');\n        }\n        while (parent.firstChild !== wrapper) {\n            wrapper.appendChild(parent.firstChild);\n        }\n        return wrapper;\n    };\n    /**\n     * unWrap method\n     *\n     * @param {Element} element - specifies the element.\n     * @returns {Element} - returns the element.\n     * @hidden\n\n     */\n    DOMNode.prototype.unWrap = function (element) {\n        var parent = element.parentNode;\n        var unWrapNode = [];\n        while (element.firstChild) {\n            unWrapNode.push(element.firstChild);\n            parent.insertBefore(element.firstChild, element);\n        }\n        unWrapNode = unWrapNode.length > 0 ? unWrapNode : [element.parentNode];\n        parent.removeChild(element);\n        return unWrapNode;\n    };\n    /**\n     * getSelectedNode method\n     *\n     * @param {Element} element - specifies the element\n     * @param {number} index - specifies the index value.\n     * @returns {Element} - returns the element\n     * @hidden\n\n     */\n    DOMNode.prototype.getSelectedNode = function (element, index) {\n        if (element.nodeType === Node.ELEMENT_NODE && element.childNodes.length > 0 &&\n            element.childNodes[index - 1] && element.childNodes[index - 1].nodeType === Node.ELEMENT_NODE &&\n            (element.childNodes[index - 1].classList.contains(markerClassName.startSelection) ||\n                element.childNodes[index - 1].classList.contains(markerClassName.endSelection))) {\n            element = element.childNodes[index - 1];\n        }\n        else if (element.nodeType === Node.ELEMENT_NODE && element.childNodes.length > 0 && element.childNodes[index]) {\n            element = element.childNodes[index];\n        }\n        if (element.nodeType === Node.TEXT_NODE) {\n            element = element.parentNode;\n        }\n        return element;\n    };\n    /**\n     * nodeFinds method\n     *\n     * @param {Element} element - specifies the element.\n     * @param {Element[]} elements - specifies the array of elements\n     * @returns {Element[]} - returnts the array elements\n     * @hidden\n\n     */\n    DOMNode.prototype.nodeFinds = function (element, elements) {\n        var existNodes = [];\n        for (var i = 0; i < elements.length; i++) {\n            if (element.contains(elements[i]) && element !== elements[i]) {\n                existNodes.push(elements[i]);\n            }\n        }\n        return existNodes;\n    };\n    /**\n     * isEditorArea method\n     *\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    DOMNode.prototype.isEditorArea = function () {\n        var range = this.getRangePoint(0);\n        var element;\n        for (element = range.commonAncestorContainer; element && !this.isElement(element); null) {\n            element = element.parentNode;\n        }\n        return !!this.isElement(element);\n    };\n    /**\n     * getRangePoint method\n     *\n     * @param {number} point - specifies the number value.\n     * @returns {Range} - returns the range.\n     * @hidden\n\n     */\n    DOMNode.prototype.getRangePoint = function (point) {\n        var selection = this.getSelection();\n        var ranges = [];\n        if (selection && selection.getRangeAt && selection.rangeCount) {\n            ranges = [];\n            for (var f = 0; f < selection.rangeCount; f++) {\n                ranges.push(selection.getRangeAt(f));\n            }\n        }\n        else {\n            ranges = [this.currentDocument.createRange()];\n        }\n        return 'undefined' !== typeof point ? ranges[point] : ranges;\n    };\n    DOMNode.prototype.getSelection = function () {\n        return this.nodeSelection.get(this.currentDocument);\n    };\n    /**\n     * getPreviousNode method\n     *\n     * @param {Element} element - specifies the element\n     * @returns {Element} - returns the element\n     * @hidden\n\n     */\n    DOMNode.prototype.getPreviousNode = function (element) {\n        element = element.previousElementSibling;\n        for (; element && element.textContent === '\\n'; null) {\n            element = element.previousElementSibling;\n        }\n        return element;\n    };\n    /**\n     * encode method\n     *\n     * @param {string} value - specifies the string value\n     * @returns {string} - specifies the string value\n     * @hidden\n\n     */\n    DOMNode.prototype.encode = function (value) {\n        var divNode = document.createElement('div');\n        divNode.innerText = value;\n        // eslint-disable-next-line\n        return divNode.innerHTML.replace(/<br\\s*[\\/]?>/gi, '\\n');\n    };\n    /**\n     * saveMarker method\n     *\n     * @param {NodeSelection} save - specifies the node selection,\n     * @param {string} action - specifies the action  value.\n     * @returns {NodeSelection} - returns the value\n     * @hidden\n\n     */\n    DOMNode.prototype.saveMarker = function (save, action) {\n        var start = this.parent.querySelector('.' + markerClassName.startSelection);\n        var end = this.parent.querySelector('.' + markerClassName.endSelection);\n        var startTextNode;\n        var endTextNode;\n        if (start.textContent === '' && isNullOrUndefined(end) && action !== 'tab') {\n            if (start.childNodes.length === 1 && start.childNodes[0].nodeName === 'BR') {\n                start.innerHTML = '&#65279;&#65279;<br>';\n            }\n            else {\n                start.innerHTML = '&#65279;&#65279;';\n            }\n        }\n        if (this.hasClass(start, markerClassName.startSelection) && start.classList.length > 1) {\n            var replace = this.createTagString(CONSTANT.DEFAULT_TAG, start, this.encode(start.textContent));\n            this.replaceWith(start, replace);\n            start = this.parent.querySelector('.' + markerClassName.startSelection);\n            start.classList.remove(markerClassName.startSelection);\n            startTextNode = start.childNodes[0];\n        }\n        else {\n            startTextNode = this.unWrap(start)[0];\n        }\n        if (this.hasClass(end, markerClassName.endSelection) && end.classList.length > 1) {\n            var replace = this.createTagString(CONSTANT.DEFAULT_TAG, end, this.encode(end.textContent));\n            this.replaceWith(end, replace);\n            end = this.parent.querySelector('.' + markerClassName.endSelection);\n            end.classList.remove(markerClassName.endSelection);\n            endTextNode = end.childNodes[0];\n        }\n        else {\n            endTextNode = end ? this.unWrap(end)[0] : startTextNode;\n        }\n        save.startContainer = save.getNodeArray(startTextNode, true);\n        save.endContainer = save.getNodeArray(endTextNode, false);\n        return save;\n    };\n    DOMNode.prototype.marker = function (className, textContent) {\n        return '<span class=\"' + className + '\">' + textContent + '</span>';\n    };\n    /**\n     * setMarker method\n     *\n     * @param {NodeSelection} save - specifies the node selection.\n     * @returns {void}\n     * @hidden\n\n     */\n    DOMNode.prototype.setMarker = function (save) {\n        var range = save.range;\n        var startChildNodes = range.startContainer.childNodes;\n        var isTableStart = startChildNodes.length > 1 && startChildNodes[0].nodeName === 'TABLE';\n        var start = ((isTableStart ? getLastTextNode(startChildNodes[range.startOffset + 1]) :\n            startChildNodes[(range.startOffset > 0) ? (range.startOffset - 1) : range.startOffset]) || range.startContainer);\n        var end = (range.endContainer.childNodes[(range.endOffset > 0) ? (range.endOffset - 1) : range.endOffset]\n            || range.endContainer);\n        if ((start.nodeType === Node.ELEMENT_NODE && end.nodeType === Node.ELEMENT_NODE) && (start.contains(end) || end.contains(start))) {\n            var existNode = start.contains(end) ? start : end;\n            var isElement = existNode.nodeType !== Node.TEXT_NODE;\n            if (isElement) {\n                var nodes = [];\n                var textNodes = [];\n                for (var node = existNode; existNode.contains(node); null) {\n                    if (nodes.indexOf(node) < 0 && node.childNodes && node.childNodes.length) {\n                        nodes.push(node);\n                        node = node.childNodes[0];\n                    }\n                    else if (node.nextSibling) {\n                        node = node.nextSibling;\n                    }\n                    else if (node.parentNode) {\n                        node = node.parentNode;\n                        nodes.push(node);\n                    }\n                    if (textNodes.indexOf(node) < 0 && (node.nodeType === Node.TEXT_NODE ||\n                        (CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.parentNode.tagName.toLocaleLowerCase()) >= 0\n                            && (node.tagName === 'BR' || node.tagName === 'IMG')))) {\n                        textNodes.push(node);\n                    }\n                }\n                if (textNodes.length) {\n                    start = start.contains(end) ? textNodes[0] : start;\n                    end = textNodes[textNodes.length - 1];\n                }\n            }\n        }\n        if (start !== end) {\n            if (start.nodeType !== Node.TEXT_NODE && ((start.tagName === 'BR' &&\n                CONSTANT.IGNORE_BLOCK_TAGS.indexOf(start.parentNode.tagName.toLocaleLowerCase()) >= 0) ||\n                start.tagName === 'IMG')) {\n                this.replaceWith(start, this.marker(markerClassName.startSelection, this.encode(start.textContent)));\n                var markerStart = range.startContainer.querySelector('.' + markerClassName.startSelection);\n                markerStart.appendChild(start);\n            }\n            else {\n                this.replaceWith(start, this.marker(markerClassName.startSelection, this.encode(start.textContent)));\n            }\n            if (end.nodeType !== Node.TEXT_NODE && end.tagName === 'BR' &&\n                CONSTANT.IGNORE_BLOCK_TAGS.indexOf(end.parentNode.tagName.toLocaleLowerCase()) >= 0) {\n                this.replaceWith(end, this.marker(markerClassName.endSelection, this.encode(end.textContent)));\n                var markerEnd = range.endContainer.querySelector('.' + markerClassName.endSelection);\n                markerEnd.appendChild(end);\n            }\n            else {\n                this.ensureSelfClosingTag(end, markerClassName.endSelection, range);\n            }\n        }\n        else {\n            this.ensureSelfClosingTag(start, markerClassName.startSelection, range);\n        }\n    };\n    /**\n     * ensureSelfClosingTag method\n     *\n     * @param {Element} start - specifies the element.\n     * @param {string} className - specifes the class name string value\n     * @param {Range} range - specifies the range value\n     * @returns {void}\n     * @hidden\n\n     */\n    DOMNode.prototype.ensureSelfClosingTag = function (start, className, range) {\n        var isTable = false;\n        if (start.nodeType === 3) {\n            this.replaceWith(start, this.marker(className, this.encode(start.textContent)));\n        }\n        else if (start.tagName === 'BR') {\n            this.replaceWith(start, this.marker(className, this.encode(start.textContent)));\n            var markerStart = range.startContainer.querySelector('.' + className);\n            markerStart.appendChild(start);\n        }\n        else {\n            if (start.tagName === 'IMG') {\n                var parNode = document.createElement('p');\n                start.parentElement.insertBefore(parNode, start);\n                parNode.appendChild(start);\n                start = parNode.children[0];\n            }\n            if (start.tagName === 'TABLE') {\n                isTable = true;\n                if (start.textContent === '') {\n                    var tdNode = start.querySelectorAll('td');\n                    start = tdNode[tdNode.length - 1];\n                    start = !isNullOrUndefined(start.childNodes[0]) ? start.childNodes[0] : start;\n                }\n                else {\n                    var lastNode = start.lastChild;\n                    while (lastNode.nodeType !== 3 && lastNode.nodeName !== '#text' &&\n                        lastNode.nodeName !== 'BR') {\n                        lastNode = lastNode.lastChild;\n                    }\n                    start = lastNode;\n                }\n            }\n            for (var i = 0; i < selfClosingTags.length; i++) {\n                start = (start.tagName === selfClosingTags[i] && !isTable) ? start.parentNode : start;\n            }\n            if (start.nodeType === 3 && start.nodeName === '#text') {\n                this.replaceWith(start, this.marker(className, this.encode(start.textContent)));\n            }\n            else if (start.nodeName === 'BR') {\n                this.replaceWith(start, this.marker(markerClassName.endSelection, this.encode(start.textContent)));\n                var markerEnd = range.endContainer.querySelector('.' + markerClassName.endSelection);\n                markerEnd.appendChild(start);\n            }\n            else {\n                var marker = this.marker(className, '');\n                append([this.parseHTMLFragment(marker)], start);\n            }\n        }\n    };\n    /**\n     * createTempNode method\n     *\n     * @param {Element} element - specifies the element.\n     * @returns {Element} - returns the element\n     * @hidden\n\n     */\n    DOMNode.prototype.createTempNode = function (element) {\n        var textContent = element.textContent;\n        if (element.tagName === 'BR') {\n            var wrapper = '<' + CONSTANT.DEFAULT_TAG + '></' + CONSTANT.DEFAULT_TAG + '>';\n            var node = element.parentNode;\n            if (CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.tagName.toLocaleLowerCase()) >= 0) {\n                element = this.wrap(element, this.parseHTMLFragment(wrapper));\n            }\n        }\n        else if (((element.nodeType !== Node.TEXT_NODE &&\n            (element.classList.contains(markerClassName.startSelection) ||\n                element.classList.contains(markerClassName.endSelection))) ||\n            textContent.replace(/\\n/g, '').replace(/(^ *)|( *$)/g, '').length > 0 ||\n            textContent.length && textContent.indexOf('\\n') < 0)) {\n            var wrapper = '<' + CONSTANT.DEFAULT_TAG + '></' + CONSTANT.DEFAULT_TAG + '>';\n            var target = element;\n            element = this.wrap(element, this.parseHTMLFragment(wrapper));\n            var ignoreBr = target.nodeType === Node.ELEMENT_NODE && target.firstChild && target.firstChild.nodeName === 'BR'\n                && (target.classList.contains(markerClassName.startSelection) ||\n                    target.classList.contains(markerClassName.endSelection));\n            if (!ignoreBr && element.nextElementSibling && element.nextElementSibling.tagName === 'BR') {\n                element.appendChild(element.nextElementSibling);\n            }\n        }\n        return element;\n    };\n    /**\n     * getImageTagInSelection method\n     *\n     * @returns {void}\n     * @hidden\n\n     */\n    DOMNode.prototype.getImageTagInSelection = function () {\n        var selection = this.getSelection();\n        if (this.isEditorArea() && selection.rangeCount) {\n            return selection.focusNode.querySelectorAll('img');\n        }\n        return null;\n    };\n    /**\n     * blockNodes method\n     *\n     * @returns {Node[]} - returns the node array values\n     * @hidden\n\n     */\n    DOMNode.prototype.blockNodes = function () {\n        var collectionNodes = [];\n        var selection = this.getSelection();\n        if (this.isEditorArea() && selection.rangeCount) {\n            var ranges = this.getRangePoint();\n            for (var j = 0; j < ranges.length; j++) {\n                var parentNode = void 0;\n                var range = ranges[j];\n                var startNode = this.getSelectedNode(range.startContainer, range.startOffset);\n                var endNode = this.getSelectedNode(range.endContainer, range.endOffset);\n                if (this.isBlockNode(startNode) && collectionNodes.indexOf(startNode) < 0) {\n                    collectionNodes.push(startNode);\n                }\n                parentNode = this.blockParentNode(startNode);\n                if (parentNode && collectionNodes.indexOf(parentNode) < 0) {\n                    if (CONSTANT.IGNORE_BLOCK_TAGS.indexOf(parentNode.tagName.toLocaleLowerCase()) >= 0 && (startNode.tagName === 'BR' ||\n                        startNode.nodeType === Node.TEXT_NODE ||\n                        startNode.classList.contains(markerClassName.startSelection) ||\n                        startNode.classList.contains(markerClassName.endSelection))) {\n                        var tempNode = startNode.previousSibling &&\n                            startNode.previousSibling.nodeType === Node.TEXT_NODE ?\n                            startNode.previousSibling : startNode;\n                        if (!startNode.nextSibling && !startNode.previousSibling && startNode.tagName === 'BR') {\n                            collectionNodes.push(tempNode);\n                        }\n                        else {\n                            collectionNodes.push(this.createTempNode(tempNode));\n                        }\n                    }\n                    else {\n                        collectionNodes.push(parentNode);\n                    }\n                }\n                var nodes = [];\n                for (var node = startNode; node !== endNode && node !== this.parent; null) {\n                    if (nodes.indexOf(node) < 0 && node.childNodes && node.childNodes.length) {\n                        nodes.push(node);\n                        node = node.childNodes[0];\n                    }\n                    else if (node && node.nodeType !== 8 && (node.tagName === 'BR' || (node.nodeType === Node.TEXT_NODE &&\n                        node.textContent.trim() !== '') || (node.nodeType !== Node.TEXT_NODE &&\n                        (node.classList.contains(markerClassName.startSelection) ||\n                            node.classList.contains(markerClassName.endSelection)))) &&\n                        CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.parentNode.tagName.toLocaleLowerCase()) >= 0) {\n                        node = this.createTempNode(node);\n                    }\n                    else if (node.nextSibling && node.nextSibling.nodeType !== 8 &&\n                        (node.nextSibling.tagName === 'BR' ||\n                            node.nextSibling.nodeType === Node.TEXT_NODE ||\n                            node.nextSibling.classList.contains(markerClassName.startSelection) ||\n                            node.nextSibling.classList.contains(markerClassName.endSelection)) &&\n                        CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.nextSibling.parentNode.tagName.toLocaleLowerCase()) >= 0) {\n                        node = this.createTempNode(node.nextSibling);\n                    }\n                    else if (node.nextSibling) {\n                        node = node.nextSibling;\n                    }\n                    else if (node.parentNode) {\n                        node = node.parentNode;\n                        nodes.push(node);\n                    }\n                    if (collectionNodes.indexOf(node) < 0 && node.nodeType === Node.ELEMENT_NODE &&\n                        CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.parentNode.tagName.toLocaleLowerCase()) >= 0 &&\n                        (node.classList.contains(markerClassName.startSelection) ||\n                            node.classList.contains(markerClassName.endSelection))) {\n                        collectionNodes.push(this.createTempNode(node));\n                    }\n                    if (this.isBlockNode(node) && this.ignoreTableTag(node) && nodes.indexOf(node) < 0 &&\n                        collectionNodes.indexOf(node) < 0 && (node !== endNode || range.endOffset > 0)) {\n                        collectionNodes.push(node);\n                    }\n                    if (node.nodeName === 'IMG' && node.parentElement.contentEditable === 'true') {\n                        collectionNodes.push(node);\n                    }\n                }\n                parentNode = this.blockParentNode(endNode);\n                if (parentNode && this.ignoreTableTag(parentNode) && collectionNodes.indexOf(parentNode) < 0 &&\n                    (!isNullOrUndefined(parentNode.previousElementSibling) && parentNode.previousElementSibling.tagName !== 'IMG')) {\n                    collectionNodes.push(parentNode);\n                }\n            }\n        }\n        for (var i = collectionNodes.length - 1; i > 0; i--) {\n            var nodes = this.nodeFinds(collectionNodes[i], collectionNodes);\n            if (nodes.length) {\n                var listNodes = collectionNodes[i].querySelectorAll('ul, ol');\n                if (collectionNodes[i].tagName === 'LI' && listNodes.length > 0) {\n                    continue;\n                }\n                else {\n                    collectionNodes.splice(i, 1);\n                }\n            }\n        }\n        return collectionNodes;\n    };\n    DOMNode.prototype.ignoreTableTag = function (element) {\n        return !(CONSTANT.TABLE_BLOCK_TAGS.indexOf(element.tagName.toLocaleLowerCase()) >= 0);\n    };\n    return DOMNode;\n}());\nexport { DOMNode };\n"]},"metadata":{},"sourceType":"module"}