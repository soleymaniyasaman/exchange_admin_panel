{"ast":null,"code":"import { notification } from 'antd';\nimport axios from 'axios';\nimport { BASE_URL, PREFIX } from \"./constants\";\nimport { getTokenObject } from \"./utils\";\n\nconst openNotification = describe => {\n  notification.error({\n    message: `پیغام خطا `,\n    description: describe,\n    placement: \"bottomRight\",\n    className: \"bg-danger\",\n    style: {\n      zIndex: '50000'\n    }\n  });\n  notification.config({\n    rtl: false\n  });\n};\n\nexport const api = axios.create({\n  // baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  if (!config.headers.Authorization) {\n    let token = getTokenObject();\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token.Authorization}`;\n    }\n  } // refreshToken()\n\n\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => {\n  console.log(\"resp\", response);\n\n  if (response.status === 201) {\n    let responseMessage = response.data.message ? response.data.message : undefined;\n  }\n\n  if (error.response.status === 500) {\n    return openNotification('ارتباط با سرور برقرار نشد');\n  }\n\n  return response;\n}, async function (error) {\n  // const originalRequest = error.config;\n  if (error.response.status === 401) {\n    window.location.href = `${PREFIX}/login`;\n  }\n\n  if (error.response.status === 403) {\n    return openNotification('کاربر دسترسی ندارد');\n  }\n\n  if (error.response.status === 405) {\n    return openNotification('تیکت بسته شده است');\n  }\n\n  if (error.response.status === 500) {\n    return openNotification('ارتباط با سرور برقرار نشد');\n  }\n\n  if (error.response.status === 400) {\n    if (error.response.data.status_code === 5050) {\n      return openNotification('موجودی کافی نمی باشد.');\n    } else if (error.response.data.status_code === 404) {\n      return openNotification('رمز وارد شده صحیح نمی باشد.');\n    } else if (error.response.data.status_code === 4001) {\n      return openNotification('کاربر با این شماره وجود دارد.');\n    } else if (error.response.data.status_code === 4002) {\n      return openNotification('کاربر با این کد دعوت وجود ندارد');\n    } else if (error.response.data.status_code === 4003) {\n      return openNotification('رمز عبور اشتباه است');\n    } else if (error.response.data.status_code === 4050) {\n      return openNotification('زمان استفاده از کد تایید به پایان رسیده است');\n    } else if (error.response.data.status_code === 4051) {\n      return openNotification('کد تایید اشتباه است');\n    } else if (error.response.data.status_code === 4052) {\n      return openNotification('کد تایید برای شما ارسال گردیده است');\n    } else if (error.response.data.status_code === 4053) {\n      return openNotification('پیامک ارسال نشد');\n    } else if (error.response.data.status_code === 4100) {\n      return openNotification('ایمیل شما تایید نشده است لطفا ابتدا ایمیل خود را تایید کنید.');\n    } else if (error.response.data.status_code === 4101) {\n      return openNotification('ایمیل کاربر تغییر نکرد!');\n    } else if (error.response.data.status_code === 4150) {\n      return openNotification('کاربر احراز هویت نشده است لطفا ابتدا احراز هویت کنید');\n    } else if (error.response.data.status_code === 4151) {\n      return openNotification('بعد از تایید شدن میتوانید شماره و آدرس خود را عوض کنید');\n    } else if (error.response.data.status_code === 4200) {\n      return openNotification('کارت بانکی شما تایید نشده است لطفا ابتدا کارت بانکی خود را تایید کنید');\n    } else if (error.response.data.status_code === 4300) {\n      return openNotification('سرویس با خطا روبرو است');\n    } else if (error.response.data.status_code === 4250) {\n      return openNotification('فایل فرستاده شده وجود دارد');\n    } else if (error.response.data.status_code === 4350) {\n      return openNotification('کد تایید اشتباه است');\n    } else if (error.response.data.status_code === 4351) {\n      return openNotification('شناسایی دوعاملی در حال حاضر فعال است');\n    } else if (error.response.data.status_code === 4352) {\n      return openNotification('کد تایید اشتباه است');\n    } else if (error.response.data.status_code === 4353) {\n      return openNotification('کد otp فعال نیست');\n    } else if (error.response.data.status_code === 4354) {\n      return openNotification('you should select on of types ');\n    } else if (error.response.data.status_code === 5000) {\n      return openNotification('خطای داخلی رخ داده است');\n    } else if (error.response.data.status_code === 5001) {\n      return openNotification('نام کاربری قبلا ثبت شده است');\n    } else if (error.response.data.status_code === 5950) {\n      // return console.error('error',error.response.data.status_code)\n      return openNotification('درخواست شما صحیح نمی باشد');\n    } else if (error.response.data.status_code === 5100) {\n      return openNotification('مارکت موجودی ندارد');\n    } else if (error.response.data.status_code === 5051) {\n      return openNotification('input quantity accuracy too high');\n    } else if (error.response.data.status_code === 5052) {\n      return openNotification('مبلغ وارد شده کمتر از حد مجاز است');\n    } else if (error.response.data.status_code === 5053) {\n      return openNotification('در حال حاضر مارکت فعال نمی باشد');\n    } else if (error.response.data.status_code === 5150) {\n      return console.error('error', error.response.data.status_code);\n    } else if (error.response.data.status_code === 6950) {\n      return console.error('error', error.response.data.status_code);\n    } else if (error.response.data.status_code === 6001) {\n      return openNotification('کیف پول موجودی ندارد');\n    } else if (error.response.data.status_code === 6050) {\n      return openNotification('کیف پولی برای شما یافت نشد.');\n    } else if (error.response.data.status_code === 6051) {\n      return openNotification('شماره کارتی برای شما یافت نشد');\n    } else if (error.response.data.status_code === 6052) {\n      return openNotification('برداشت از این کیف پول امکان پذیر نیست');\n    } else if (error.response.data.status_code === 6053) {\n      return openNotification('لطفا شبکه و آدرس کیف پول مقصد را وارد کنید');\n    } else if (error.response.data.status_code === 6054) {\n      return openNotification('quantity must greater than 0 or current asset quantity');\n    } else if (error.response.data.status_code === 6100) {\n      return openNotification('این درگاه بانکی در دسترس نیست');\n    } else if (error.response.data.status_code === 6101) {\n      return openNotification('ارور ورودی زرین پال');\n    } else if (error.response.data.status_code === 6102) {\n      return openNotification('درگاه زرین پال در دسترس نمی باشد');\n    } else if (error.response.data.status_code === 6103) {\n      return openNotification('این پرداخت معتبر نمی باشد');\n    } else if (error.response.data.status_code === 6150) {\n      return openNotification('سرور به مشکل برخورده است');\n    } else if (error.response.data.status_code === 6151) {\n      return openNotification('wallet manager service not available');\n    } else if (error.response.data.status_code === 6152) {\n      return openNotification('config service not available');\n    } else {\n      return openNotification('درخواست شما با خطا روبرو شده است');\n    }\n  }\n\n  if (error.response.status === 501) {\n    return openNotification('ارتباط با سرور برقرار نشد');\n  }\n\n  if (error.response.status === 502) {\n    return openNotification('ارتباط با سرور برقرار نشد');\n  }\n\n  if (error.response.status === 503) {\n    return openNotification('ارتباط با سرور برقرار نشد');\n  }\n\n  if (error.response.status === 504) {\n    return openNotification('ارتباط با سرور برقرار نشد');\n  }\n\n  if (error.response.status === 505) {\n    return openNotification('ارتباط با سرور برقرار نشد');\n  }\n\n  if (error.response.status === 404) {\n    return openNotification('کاربر با این مشخصات یافت نشد.');\n  }\n\n  return Promise.reject(error);\n});","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/api.js"],"names":["notification","axios","BASE_URL","PREFIX","getTokenObject","openNotification","describe","error","message","description","placement","className","style","zIndex","config","rtl","api","create","headers","interceptors","request","use","Authorization","token","Promise","reject","response","console","log","status","responseMessage","data","undefined","window","location","href","status_code"],"mappings":"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","sourcesContent":["import { notification } from 'antd';\nimport axios from 'axios';\n\nimport { BASE_URL, PREFIX } from \"./constants\";\n\nimport { getTokenObject } from \"./utils\";\n\n\nconst openNotification = describe => {\n\n    notification.error({\n\n        message: `پیغام خطا `,\n\n        description: describe,\n\n        placement: \"bottomRight\",\n\n        className: \"bg-danger\",\n\n        style: { zIndex: '50000' }\n\n\n\n    });\n\n    notification.config({\n\n        rtl: false\n\n    })\n\n};\n\nexport const api = axios.create({\n\n    // baseURL: BASE_URL,\n\n    headers: {\n\n        'Content-Type': 'application/json'\n\n    },\n\n})\n\napi.interceptors.request.use(config => {\n\n    if (!config.headers.Authorization) {\n\n        let token = getTokenObject()\n\n        if (token) {\n\n            config.headers.Authorization = `Bearer ${token.Authorization}`;\n\n        }\n\n    }\n\n    // refreshToken()\n\n    return config;\n\n}, error => Promise.reject(error));\n\n\napi.interceptors.response.use((response) => {\n    console.log(\"resp\",response)\n    if (response.status === 201) {\n\n        let responseMessage = response.data.message ? response.data.message : undefined\n\n    }\n    if (error.response.status === 500) {\n\n        return openNotification('ارتباط با سرور برقرار نشد')\n\n    }\n\n    return response\n\n}, async function (error) {\n\n    // const originalRequest = error.config;\n\n    if (error.response.status === 401) {\n\n        window.location.href = `${PREFIX}/login`\n\n    }\n    if (error.response.status === 403) {\n\n        return openNotification('کاربر دسترسی ندارد')\n\n    }\n\n    if (error.response.status === 405) {\n\n        return openNotification('تیکت بسته شده است')\n\n    }\n    if (error.response.status === 500) {\n\n        return openNotification('ارتباط با سرور برقرار نشد')\n\n    }\n\n    if (error.response.status === 400) {\n\n        if (error.response.data.status_code === 5050) {\n\n            return openNotification('موجودی کافی نمی باشد.')\n\n        } else if (error.response.data.status_code === 404) {\n\n            return openNotification('رمز وارد شده صحیح نمی باشد.')\n\n        } else if (error.response.data.status_code === 4001) {\n\n            return openNotification('کاربر با این شماره وجود دارد.')\n\n        } else if (error.response.data.status_code === 4002) {\n\n            return openNotification('کاربر با این کد دعوت وجود ندارد')\n\n        } else if (error.response.data.status_code === 4003) {\n\n            return openNotification('رمز عبور اشتباه است')\n\n        } else if (error.response.data.status_code === 4050) {\n\n            return openNotification('زمان استفاده از کد تایید به پایان رسیده است')\n\n        } else if (error.response.data.status_code === 4051) {\n\n            return openNotification('کد تایید اشتباه است')\n\n        } else if (error.response.data.status_code === 4052) {\n\n            return openNotification('کد تایید برای شما ارسال گردیده است')\n\n        } else if (error.response.data.status_code === 4053) {\n\n            return openNotification('پیامک ارسال نشد')\n\n        } else if (error.response.data.status_code === 4100) {\n\n            return openNotification('ایمیل شما تایید نشده است لطفا ابتدا ایمیل خود را تایید کنید.')\n\n        } else if (error.response.data.status_code === 4101) {\n\n            return openNotification('ایمیل کاربر تغییر نکرد!')\n\n        } else if (error.response.data.status_code === 4150) {\n\n            return openNotification('کاربر احراز هویت نشده است لطفا ابتدا احراز هویت کنید')\n\n        } else if (error.response.data.status_code === 4151) {\n\n            return openNotification('بعد از تایید شدن میتوانید شماره و آدرس خود را عوض کنید')\n\n        } else if (error.response.data.status_code === 4200) {\n\n            return openNotification('کارت بانکی شما تایید نشده است لطفا ابتدا کارت بانکی خود را تایید کنید')\n\n        } else if (error.response.data.status_code === 4300) {\n\n            return openNotification('سرویس با خطا روبرو است')\n\n        } else if (error.response.data.status_code === 4250) {\n\n            return openNotification('فایل فرستاده شده وجود دارد')\n\n        } else if (error.response.data.status_code === 4350) {\n\n            return openNotification('کد تایید اشتباه است')\n\n        } else if (error.response.data.status_code === 4351) {\n\n            return openNotification('شناسایی دوعاملی در حال حاضر فعال است')\n\n        } else if (error.response.data.status_code === 4352) {\n\n            return openNotification('کد تایید اشتباه است')\n\n        } else if (error.response.data.status_code === 4353) {\n\n            return openNotification('کد otp فعال نیست')\n\n        } else if (error.response.data.status_code === 4354) {\n\n            return openNotification('you should select on of types ')\n\n        } else if (error.response.data.status_code === 5000) {\n\n            return openNotification('خطای داخلی رخ داده است')\n\n        } else if (error.response.data.status_code === 5001) {\n\n            return openNotification('نام کاربری قبلا ثبت شده است')\n\n        } else if (error.response.data.status_code === 5950) {\n\n            // return console.error('error',error.response.data.status_code)\n\n            return openNotification('درخواست شما صحیح نمی باشد')\n\n        } else if (error.response.data.status_code === 5100) {\n\n            return openNotification('مارکت موجودی ندارد')\n\n        } else if (error.response.data.status_code === 5051) {\n\n            return openNotification('input quantity accuracy too high')\n\n        } else if (error.response.data.status_code === 5052) {\n\n            return openNotification('مبلغ وارد شده کمتر از حد مجاز است')\n\n        } else if (error.response.data.status_code === 5053) {\n\n            return openNotification('در حال حاضر مارکت فعال نمی باشد')\n\n        } else if (error.response.data.status_code === 5150) {\n\n            return console.error('error', error.response.data.status_code)\n\n        } else if (error.response.data.status_code === 6950) {\n\n            return console.error('error', error.response.data.status_code)\n\n        } else if (error.response.data.status_code === 6001) {\n\n            return openNotification('کیف پول موجودی ندارد')\n\n        } else if (error.response.data.status_code === 6050) {\n\n            return openNotification('کیف پولی برای شما یافت نشد.')\n\n        } else if (error.response.data.status_code === 6051) {\n\n            return openNotification('شماره کارتی برای شما یافت نشد')\n\n        } else if (error.response.data.status_code === 6052) {\n\n            return openNotification('برداشت از این کیف پول امکان پذیر نیست')\n\n        } else if (error.response.data.status_code === 6053) {\n\n            return openNotification('لطفا شبکه و آدرس کیف پول مقصد را وارد کنید')\n\n        }else if (error.response.data.status_code === 6054) {\n\n            return openNotification('quantity must greater than 0 or current asset quantity')\n\n        }  else if (error.response.data.status_code === 6100) {\n\n            return openNotification('این درگاه بانکی در دسترس نیست')\n\n        } else if (error.response.data.status_code === 6101) {\n\n            return openNotification('ارور ورودی زرین پال')\n\n        } else if (error.response.data.status_code === 6102) {\n\n            return openNotification('درگاه زرین پال در دسترس نمی باشد')\n\n        } else if (error.response.data.status_code === 6103) {\n\n            return openNotification('این پرداخت معتبر نمی باشد')\n\n        } else if (error.response.data.status_code === 6150) {\n\n            return openNotification('سرور به مشکل برخورده است')\n\n        } else if (error.response.data.status_code === 6151) {\n\n            return openNotification('wallet manager service not available')\n\n        } else if (error.response.data.status_code === 6152) {\n\n            return openNotification('config service not available')\n\n        } else {\n\n            return openNotification('درخواست شما با خطا روبرو شده است')\n        }\n\n    }\n\n    if (error.response.status === 501) {\n\n        return openNotification('ارتباط با سرور برقرار نشد')\n\n    }\n\n    if (error.response.status === 502) {\n\n        return openNotification('ارتباط با سرور برقرار نشد')\n\n    }\n\n    if (error.response.status === 503) {\n\n        return openNotification('ارتباط با سرور برقرار نشد')\n\n    }\n\n    if (error.response.status === 504) {\n\n        return openNotification('ارتباط با سرور برقرار نشد')\n\n    }\n\n    if (error.response.status === 505) {\n\n        return openNotification('ارتباط با سرور برقرار نشد')\n\n    }\n\n    if (error.response.status === 404) {\n\n        return openNotification('کاربر با این مشخصات یافت نشد.')\n\n    }\n    \n    return Promise.reject(error);\n\n});\n\n"]},"metadata":{},"sourceType":"module"}