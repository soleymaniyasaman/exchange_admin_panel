{"ast":null,"code":"import * as events from '../base/constant';\nimport { isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { MarkdownFormatter } from '../formatter/markdown-formatter';\nimport { RenderType } from '../base/enum';\nimport * as classes from '../base/classes';\nimport { MarkdownToolbarStatus } from './markdown-toolbar-status';\nimport { MarkdownRender } from '../renderer/markdown-renderer';\nimport { MarkdownSelection } from './../../markdown-parser/plugin/markdown-selection';\n/**\n * `MarkdownEditor` module is used to markdown editor\n */\n\nvar MarkdownEditor =\n/** @class */\nfunction () {\n  function MarkdownEditor(parent, serviceLocator) {\n    this.parent = parent;\n    this.locator = serviceLocator;\n    this.renderFactory = this.locator.getService('rendererFactory');\n    this.addEventListener();\n  }\n  /**\n   * Destroys the Markdown.\n   *\n   * @function destroy\n   * @returns {void}\n   * @hidden\n    */\n\n\n  MarkdownEditor.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n\n  MarkdownEditor.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.saveSelection = new MarkdownSelection();\n    this.parent.on(events.initialLoad, this.instantiateRenderer, this);\n    this.parent.on(events.initialEnd, this.render, this);\n    this.parent.on(events.modelChanged, this.onPropertyChanged, this);\n    this.parent.on(events.markdownToolbarClick, this.onToolbarClick, this);\n    this.parent.on(events.destroy, this.destroy, this);\n    this.parent.on(events.selectAll, this.selectAll, this);\n    this.parent.on(events.getSelectedHtml, this.getSelectedHtml, this);\n    this.parent.on(events.selectionSave, this.onSelectionSave, this);\n    this.parent.on(events.selectionRestore, this.onSelectionRestore, this);\n    this.parent.on(events.readOnlyMode, this.updateReadOnly, this);\n  };\n\n  MarkdownEditor.prototype.updateReadOnly = function () {\n    if (this.parent.readonly) {\n      this.parent.contentModule.getEditPanel().setAttribute('readonly', 'readonly');\n      addClass([this.parent.element], classes.CLS_RTE_READONLY);\n    } else {\n      this.parent.contentModule.getEditPanel().removeAttribute('readonly');\n      removeClass([this.parent.element], classes.CLS_RTE_READONLY);\n    }\n  };\n\n  MarkdownEditor.prototype.onSelectionSave = function () {\n    var textArea = this.parent.contentModule.getEditPanel();\n    this.saveSelection.save(textArea.selectionStart, textArea.selectionEnd);\n  }; // eslint-disable-next-line\n\n\n  MarkdownEditor.prototype.onSelectionRestore = function (e) {\n    this.contentRenderer.getEditPanel().focus();\n    var textArea = this.parent.contentModule.getEditPanel();\n    this.saveSelection.restore(textArea);\n  };\n\n  MarkdownEditor.prototype.onToolbarClick = function (args) {\n    var item = args.item;\n    var textArea = this.parent.contentModule.getEditPanel();\n    textArea.focus();\n    var startOffset = textArea.selectionStart;\n    var endOffset = textArea.selectionEnd;\n    var text = textArea.value.substring(startOffset, endOffset);\n\n    switch (item.subCommand) {\n      case 'Maximize':\n        this.parent.notify(events.enableFullScreen, {\n          args: args\n        });\n        break;\n\n      case 'Minimize':\n        this.parent.notify(events.disableFullScreen, {\n          args: args\n        });\n        break;\n\n      case 'CreateLink':\n        this.parent.notify(events.insertLink, {\n          member: 'link',\n          args: args,\n          text: text,\n          module: 'Markdown'\n        });\n        break;\n\n      case 'Image':\n        this.parent.notify(events.insertImage, {\n          member: 'image',\n          args: args,\n          text: text,\n          module: 'Markdown'\n        });\n        break;\n\n      case 'CreateTable':\n        {\n          var tableConstant = {\n            'headingText': this.parent.localeObj.getConstant('TableHeadingText'),\n            'colText': this.parent.localeObj.getConstant('TableColText')\n          };\n          this.parent.formatter.process(this.parent, args, args.originalEvent, tableConstant);\n          break;\n        }\n\n      default:\n        this.parent.formatter.process(this.parent, args, args.originalEvent, null);\n        break;\n    }\n  };\n\n  MarkdownEditor.prototype.instantiateRenderer = function () {\n    this.renderFactory.addRenderer(RenderType.Content, new MarkdownRender(this.parent));\n  };\n\n  MarkdownEditor.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.initialEnd, this.render);\n    this.parent.off(events.modelChanged, this.onPropertyChanged);\n    this.parent.off(events.destroy, this.destroy);\n    this.parent.off(events.markdownToolbarClick, this.onToolbarClick);\n    this.parent.off(events.initialLoad, this.instantiateRenderer);\n    this.parent.off(events.selectAll, this.selectAll);\n    this.parent.off(events.getSelectedHtml, this.getSelectedHtml);\n    this.parent.off(events.selectionSave, this.onSelectionSave);\n    this.parent.off(events.selectionRestore, this.onSelectionRestore);\n    this.parent.off(events.readOnlyMode, this.updateReadOnly);\n  };\n\n  MarkdownEditor.prototype.render = function () {\n    this.contentRenderer = this.renderFactory.getRenderer(RenderType.Content);\n    var editElement = this.contentRenderer.getEditPanel();\n    var option = {\n      undoRedoSteps: this.parent.undoRedoSteps,\n      undoRedoTimer: this.parent.undoRedoTimer\n    };\n\n    if (isNullOrUndefined(this.parent.formatter)) {\n      this.parent.formatter = new MarkdownFormatter({\n        element: editElement,\n        options: option\n      });\n    } else {\n      this.parent.formatter.updateFormatter(editElement, this.contentRenderer.getDocument(), option);\n    }\n\n    if (this.parent.toolbarSettings.enable) {\n      this.toolbarUpdate = new MarkdownToolbarStatus(this.parent);\n    }\n\n    this.parent.notify(events.bindOnEnd, {});\n  };\n  /**\n   * Called internally if any of the property value changed.\n   *\n   * @param {RichTextEditorModel} e - specifies the editor model\n   * @returns {void}\n   * @hidden\n    */\n\n\n  MarkdownEditor.prototype.onPropertyChanged = function (e) {\n    // On property code change here\n    if (!isNullOrUndefined(e.newProp.formatter)) {\n      var editElement = this.contentRenderer.getEditPanel();\n      var option = {\n        undoRedoSteps: this.parent.undoRedoSteps,\n        undoRedoTimer: this.parent.undoRedoTimer\n      };\n      this.parent.formatter.updateFormatter(editElement, this.contentRenderer.getDocument(), option);\n    }\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {void}\n   */\n\n\n  MarkdownEditor.prototype.getModuleName = function () {\n    return 'markdownEditor';\n  };\n  /**\n   * For selecting all content in RTE\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  MarkdownEditor.prototype.selectAll = function () {\n    this.parent.formatter.editorManager.markdownSelection.setSelection(this.parent.contentModule.getEditPanel(), 0, this.parent.contentModule.getEditPanel().value.length);\n  };\n  /**\n   * For get a selected text in RTE\n   *\n   * @param {NotifyArgs} e - specifies the arguments.\n   * @returns {void}\n   * @private\n   */\n\n\n  MarkdownEditor.prototype.getSelectedHtml = function (e) {\n    e.callBack(this.parent.formatter.editorManager.markdownSelection.getSelectedText(this.parent.contentModule.getEditPanel()));\n  };\n\n  return MarkdownEditor;\n}();\n\nexport { MarkdownEditor };","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/actions/markdown-editor.js"],"names":["events","isNullOrUndefined","addClass","removeClass","MarkdownFormatter","RenderType","classes","MarkdownToolbarStatus","MarkdownRender","MarkdownSelection","MarkdownEditor","parent","serviceLocator","locator","renderFactory","getService","addEventListener","prototype","destroy","removeEventListener","isDestroyed","saveSelection","on","initialLoad","instantiateRenderer","initialEnd","render","modelChanged","onPropertyChanged","markdownToolbarClick","onToolbarClick","selectAll","getSelectedHtml","selectionSave","onSelectionSave","selectionRestore","onSelectionRestore","readOnlyMode","updateReadOnly","readonly","contentModule","getEditPanel","setAttribute","element","CLS_RTE_READONLY","removeAttribute","textArea","save","selectionStart","selectionEnd","e","contentRenderer","focus","restore","args","item","startOffset","endOffset","text","value","substring","subCommand","notify","enableFullScreen","disableFullScreen","insertLink","member","module","insertImage","tableConstant","localeObj","getConstant","formatter","process","originalEvent","addRenderer","Content","off","getRenderer","editElement","option","undoRedoSteps","undoRedoTimer","options","updateFormatter","getDocument","toolbarSettings","enable","toolbarUpdate","bindOnEnd","newProp","getModuleName","editorManager","markdownSelection","setSelection","length","callBack","getSelectedText"],"mappings":"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","sourcesContent":["import * as events from '../base/constant';\nimport { isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { MarkdownFormatter } from '../formatter/markdown-formatter';\nimport { RenderType } from '../base/enum';\nimport * as classes from '../base/classes';\nimport { MarkdownToolbarStatus } from './markdown-toolbar-status';\nimport { MarkdownRender } from '../renderer/markdown-renderer';\nimport { MarkdownSelection } from './../../markdown-parser/plugin/markdown-selection';\n/**\n * `MarkdownEditor` module is used to markdown editor\n */\nvar MarkdownEditor = /** @class */ (function () {\n    function MarkdownEditor(parent, serviceLocator) {\n        this.parent = parent;\n        this.locator = serviceLocator;\n        this.renderFactory = this.locator.getService('rendererFactory');\n        this.addEventListener();\n    }\n    /**\n     * Destroys the Markdown.\n     *\n     * @function destroy\n     * @returns {void}\n     * @hidden\n\n     */\n    MarkdownEditor.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    MarkdownEditor.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.saveSelection = new MarkdownSelection();\n        this.parent.on(events.initialLoad, this.instantiateRenderer, this);\n        this.parent.on(events.initialEnd, this.render, this);\n        this.parent.on(events.modelChanged, this.onPropertyChanged, this);\n        this.parent.on(events.markdownToolbarClick, this.onToolbarClick, this);\n        this.parent.on(events.destroy, this.destroy, this);\n        this.parent.on(events.selectAll, this.selectAll, this);\n        this.parent.on(events.getSelectedHtml, this.getSelectedHtml, this);\n        this.parent.on(events.selectionSave, this.onSelectionSave, this);\n        this.parent.on(events.selectionRestore, this.onSelectionRestore, this);\n        this.parent.on(events.readOnlyMode, this.updateReadOnly, this);\n    };\n    MarkdownEditor.prototype.updateReadOnly = function () {\n        if (this.parent.readonly) {\n            this.parent.contentModule.getEditPanel().setAttribute('readonly', 'readonly');\n            addClass([this.parent.element], classes.CLS_RTE_READONLY);\n        }\n        else {\n            this.parent.contentModule.getEditPanel().removeAttribute('readonly');\n            removeClass([this.parent.element], classes.CLS_RTE_READONLY);\n        }\n    };\n    MarkdownEditor.prototype.onSelectionSave = function () {\n        var textArea = this.parent.contentModule.getEditPanel();\n        this.saveSelection.save(textArea.selectionStart, textArea.selectionEnd);\n    };\n    // eslint-disable-next-line\n    MarkdownEditor.prototype.onSelectionRestore = function (e) {\n        this.contentRenderer.getEditPanel().focus();\n        var textArea = this.parent.contentModule.getEditPanel();\n        this.saveSelection.restore(textArea);\n    };\n    MarkdownEditor.prototype.onToolbarClick = function (args) {\n        var item = args.item;\n        var textArea = this.parent.contentModule.getEditPanel();\n        textArea.focus();\n        var startOffset = textArea.selectionStart;\n        var endOffset = textArea.selectionEnd;\n        var text = textArea.value.substring(startOffset, endOffset);\n        switch (item.subCommand) {\n            case 'Maximize':\n                this.parent.notify(events.enableFullScreen, { args: args });\n                break;\n            case 'Minimize':\n                this.parent.notify(events.disableFullScreen, { args: args });\n                break;\n            case 'CreateLink':\n                this.parent.notify(events.insertLink, { member: 'link', args: args, text: text, module: 'Markdown' });\n                break;\n            case 'Image':\n                this.parent.notify(events.insertImage, { member: 'image', args: args, text: text, module: 'Markdown' });\n                break;\n            case 'CreateTable': {\n                var tableConstant = {\n                    'headingText': this.parent.localeObj.getConstant('TableHeadingText'),\n                    'colText': this.parent.localeObj.getConstant('TableColText')\n                };\n                this.parent.formatter.process(this.parent, args, args.originalEvent, tableConstant);\n                break;\n            }\n            default:\n                this.parent.formatter.process(this.parent, args, args.originalEvent, null);\n                break;\n        }\n    };\n    MarkdownEditor.prototype.instantiateRenderer = function () {\n        this.renderFactory.addRenderer(RenderType.Content, new MarkdownRender(this.parent));\n    };\n    MarkdownEditor.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.initialEnd, this.render);\n        this.parent.off(events.modelChanged, this.onPropertyChanged);\n        this.parent.off(events.destroy, this.destroy);\n        this.parent.off(events.markdownToolbarClick, this.onToolbarClick);\n        this.parent.off(events.initialLoad, this.instantiateRenderer);\n        this.parent.off(events.selectAll, this.selectAll);\n        this.parent.off(events.getSelectedHtml, this.getSelectedHtml);\n        this.parent.off(events.selectionSave, this.onSelectionSave);\n        this.parent.off(events.selectionRestore, this.onSelectionRestore);\n        this.parent.off(events.readOnlyMode, this.updateReadOnly);\n    };\n    MarkdownEditor.prototype.render = function () {\n        this.contentRenderer = this.renderFactory.getRenderer(RenderType.Content);\n        var editElement = this.contentRenderer.getEditPanel();\n        var option = { undoRedoSteps: this.parent.undoRedoSteps, undoRedoTimer: this.parent.undoRedoTimer };\n        if (isNullOrUndefined(this.parent.formatter)) {\n            this.parent.formatter = new MarkdownFormatter({\n                element: editElement,\n                options: option\n            });\n        }\n        else {\n            this.parent.formatter.updateFormatter(editElement, this.contentRenderer.getDocument(), option);\n        }\n        if (this.parent.toolbarSettings.enable) {\n            this.toolbarUpdate = new MarkdownToolbarStatus(this.parent);\n        }\n        this.parent.notify(events.bindOnEnd, {});\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {RichTextEditorModel} e - specifies the editor model\n     * @returns {void}\n     * @hidden\n\n     */\n    MarkdownEditor.prototype.onPropertyChanged = function (e) {\n        // On property code change here\n        if (!isNullOrUndefined(e.newProp.formatter)) {\n            var editElement = this.contentRenderer.getEditPanel();\n            var option = { undoRedoSteps: this.parent.undoRedoSteps,\n                undoRedoTimer: this.parent.undoRedoTimer };\n            this.parent.formatter.updateFormatter(editElement, this.contentRenderer.getDocument(), option);\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {void}\n     */\n    MarkdownEditor.prototype.getModuleName = function () {\n        return 'markdownEditor';\n    };\n    /**\n     * For selecting all content in RTE\n     *\n     * @returns {void}\n     * @private\n     */\n    MarkdownEditor.prototype.selectAll = function () {\n        this.parent.formatter.editorManager.markdownSelection.setSelection(this.parent.contentModule.getEditPanel(), 0, this.parent.contentModule.getEditPanel().value.length);\n    };\n    /**\n     * For get a selected text in RTE\n     *\n     * @param {NotifyArgs} e - specifies the arguments.\n     * @returns {void}\n     * @private\n     */\n    MarkdownEditor.prototype.getSelectedHtml = function (e) {\n        e.callBack(this.parent.formatter.editorManager.markdownSelection.getSelectedText(this.parent.contentModule.getEditPanel()));\n    };\n    return MarkdownEditor;\n}());\nexport { MarkdownEditor };\n"]},"metadata":{},"sourceType":"module"}