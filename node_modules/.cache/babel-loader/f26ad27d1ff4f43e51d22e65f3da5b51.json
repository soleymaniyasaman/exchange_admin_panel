{"ast":null,"code":"/**\n * Is formatted or not.\n *\n * @hidden\n\n */\nvar IsFormatted =\n/** @class */\nfunction () {\n  function IsFormatted() {}\n  /**\n   * getFormattedNode method\n   *\n   * @param {Node} node - specifies the node.\n   * @param {string} format - specifies the string value.\n   * @param {Node} endNode - specifies the end node\n   * @returns {Node} - returns the node\n   * @hidden\n    */\n\n\n  IsFormatted.prototype.getFormattedNode = function (node, format, endNode) {\n    var parentNode = this.getFormatParent(node, format, endNode);\n\n    if (parentNode !== null && parentNode !== endNode) {\n      return parentNode;\n    }\n\n    return null;\n  };\n\n  IsFormatted.prototype.getFormatParent = function (node, format, endNode) {\n    do {\n      node = node.parentNode;\n    } while (node && node !== endNode && !this.isFormattedNode(node, format));\n\n    return node;\n  };\n\n  IsFormatted.prototype.isFormattedNode = function (node, format) {\n    switch (format) {\n      case 'bold':\n        return IsFormatted.isBold(node);\n\n      case 'italic':\n        return IsFormatted.isItalic(node);\n\n      case 'underline':\n        return IsFormatted.isUnderline(node);\n\n      case 'strikethrough':\n        return IsFormatted.isStrikethrough(node);\n\n      case 'superscript':\n        return IsFormatted.isSuperscript(node);\n\n      case 'subscript':\n        return IsFormatted.isSubscript(node);\n\n      case 'fontcolor':\n        return this.isFontColor(node);\n\n      case 'fontname':\n        return this.isFontName(node);\n\n      case 'fontsize':\n        return this.isFontSize(node);\n\n      case 'backgroundcolor':\n        return this.isBackgroundColor(node);\n\n      default:\n        return false;\n    }\n  };\n  /**\n   * isBold method\n   *\n   * @param {Node} node - specifies the node value\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n\n\n  IsFormatted.isBold = function (node) {\n    var validTags = ['strong', 'b'];\n\n    if (validTags.indexOf(node.nodeName.toLowerCase()) !== -1) {\n      return true;\n    } else if (this.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 && node.style && node.style.fontWeight === 'bold') {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * isItalic method\n   *\n   * @param {Node} node - specifies the node value\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n\n\n  IsFormatted.isItalic = function (node) {\n    var validTags = ['em', 'i'];\n\n    if (validTags.indexOf(node.nodeName.toLowerCase()) !== -1) {\n      return true;\n    } else if (this.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 && node.style && node.style.fontStyle === 'italic') {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * isUnderline method\n   *\n   * @param {Node} node - specifies the node value\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n\n\n  IsFormatted.isUnderline = function (node) {\n    var validTags = ['u'];\n\n    if (validTags.indexOf(node.nodeName.toLowerCase()) !== -1) {\n      return true;\n    } else if (this.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 && node.style && node.style.textDecoration === 'underline') {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * isStrikethrough method\n   *\n   * @param {Node} node - specifies the node value\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n\n\n  IsFormatted.isStrikethrough = function (node) {\n    var validTags = ['del', 'strike'];\n\n    if (validTags.indexOf(node.nodeName.toLowerCase()) !== -1) {\n      return true;\n    } else if (this.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 && node.style && node.style.textDecoration === 'line-through') {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * isSuperscript method\n   *\n   * @param {Node} node - specifies the node value\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n\n\n  IsFormatted.isSuperscript = function (node) {\n    var validTags = ['sup'];\n\n    if (validTags.indexOf(node.nodeName.toLowerCase()) !== -1) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * isSubscript method\n   *\n   * @param {Node} node - specifies the node value\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n\n\n  IsFormatted.isSubscript = function (node) {\n    var validTags = ['sub'];\n\n    if (validTags.indexOf(node.nodeName.toLowerCase()) !== -1) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  IsFormatted.prototype.isFontColor = function (node) {\n    var color = node.style && node.style.color;\n\n    if (IsFormatted.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 && color !== null && color !== '' && color !== undefined) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  IsFormatted.prototype.isBackgroundColor = function (node) {\n    var backColor = node.style && node.style.backgroundColor;\n\n    if (IsFormatted.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 && backColor !== null && backColor !== '' && backColor !== undefined) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  IsFormatted.prototype.isFontSize = function (node) {\n    var size = node.style && node.style.fontSize;\n\n    if (IsFormatted.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 && size !== null && size !== '' && size !== undefined) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  IsFormatted.prototype.isFontName = function (node) {\n    var name = node.style && node.style.fontFamily;\n\n    if (IsFormatted.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 && name !== null && name !== '' && name !== undefined) {\n      return true;\n    } else {\n      return false;\n    }\n  }; // Get Formatted Node\n\n\n  IsFormatted.inlineTags = ['a', 'abbr', 'acronym', 'b', 'bdo', 'big', 'cite', 'code', 'dfn', 'em', 'i', 'kbd', 'label', 'q', 'samp', 'small', 'span', 'strong', 'sub', 'sup', 'tt', 'u', 'var', 'del'];\n  return IsFormatted;\n}();\n\nexport { IsFormatted };","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/isformatted.js"],"names":["IsFormatted","prototype","getFormattedNode","node","format","endNode","parentNode","getFormatParent","isFormattedNode","isBold","isItalic","isUnderline","isStrikethrough","isSuperscript","isSubscript","isFontColor","isFontName","isFontSize","isBackgroundColor","validTags","indexOf","nodeName","toLowerCase","inlineTags","style","fontWeight","fontStyle","textDecoration","color","undefined","backColor","backgroundColor","size","fontSize","name","fontFamily"],"mappings":"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","sourcesContent":["/**\n * Is formatted or not.\n *\n * @hidden\n\n */\nvar IsFormatted = /** @class */ (function () {\n    function IsFormatted() {\n    }\n    /**\n     * getFormattedNode method\n     *\n     * @param {Node} node - specifies the node.\n     * @param {string} format - specifies the string value.\n     * @param {Node} endNode - specifies the end node\n     * @returns {Node} - returns the node\n     * @hidden\n\n     */\n    IsFormatted.prototype.getFormattedNode = function (node, format, endNode) {\n        var parentNode = this.getFormatParent(node, format, endNode);\n        if (parentNode !== null && parentNode !== endNode) {\n            return parentNode;\n        }\n        return null;\n    };\n    IsFormatted.prototype.getFormatParent = function (node, format, endNode) {\n        do {\n            node = node.parentNode;\n        } while (node && (node !== endNode) && !this.isFormattedNode(node, format));\n        return node;\n    };\n    IsFormatted.prototype.isFormattedNode = function (node, format) {\n        switch (format) {\n            case 'bold':\n                return IsFormatted.isBold(node);\n            case 'italic':\n                return IsFormatted.isItalic(node);\n            case 'underline':\n                return IsFormatted.isUnderline(node);\n            case 'strikethrough':\n                return IsFormatted.isStrikethrough(node);\n            case 'superscript':\n                return IsFormatted.isSuperscript(node);\n            case 'subscript':\n                return IsFormatted.isSubscript(node);\n            case 'fontcolor':\n                return this.isFontColor(node);\n            case 'fontname':\n                return this.isFontName(node);\n            case 'fontsize':\n                return this.isFontSize(node);\n            case 'backgroundcolor':\n                return this.isBackgroundColor(node);\n            default:\n                return false;\n        }\n    };\n    /**\n     * isBold method\n     *\n     * @param {Node} node - specifies the node value\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    IsFormatted.isBold = function (node) {\n        var validTags = ['strong', 'b'];\n        if (validTags.indexOf(node.nodeName.toLowerCase()) !== -1) {\n            return true;\n        }\n        else if (this.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 &&\n            node.style && node.style.fontWeight === 'bold') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * isItalic method\n     *\n     * @param {Node} node - specifies the node value\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    IsFormatted.isItalic = function (node) {\n        var validTags = ['em', 'i'];\n        if (validTags.indexOf(node.nodeName.toLowerCase()) !== -1) {\n            return true;\n        }\n        else if (this.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 &&\n            node.style && node.style.fontStyle === 'italic') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * isUnderline method\n     *\n     * @param {Node} node - specifies the node value\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    IsFormatted.isUnderline = function (node) {\n        var validTags = ['u'];\n        if (validTags.indexOf(node.nodeName.toLowerCase()) !== -1) {\n            return true;\n        }\n        else if (this.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 &&\n            node.style && node.style.textDecoration === 'underline') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * isStrikethrough method\n     *\n     * @param {Node} node - specifies the node value\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    IsFormatted.isStrikethrough = function (node) {\n        var validTags = ['del', 'strike'];\n        if (validTags.indexOf(node.nodeName.toLowerCase()) !== -1) {\n            return true;\n        }\n        else if (this.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 &&\n            node.style && node.style.textDecoration === 'line-through') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * isSuperscript method\n     *\n     * @param {Node} node - specifies the node value\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    IsFormatted.isSuperscript = function (node) {\n        var validTags = ['sup'];\n        if (validTags.indexOf(node.nodeName.toLowerCase()) !== -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * isSubscript method\n     *\n     * @param {Node} node - specifies the node value\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    IsFormatted.isSubscript = function (node) {\n        var validTags = ['sub'];\n        if (validTags.indexOf(node.nodeName.toLowerCase()) !== -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    IsFormatted.prototype.isFontColor = function (node) {\n        var color = node.style && node.style.color;\n        if (IsFormatted.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 &&\n            color !== null && color !== '' && color !== undefined) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    IsFormatted.prototype.isBackgroundColor = function (node) {\n        var backColor = node.style && node.style.backgroundColor;\n        if (IsFormatted.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 &&\n            backColor !== null && backColor !== '' && backColor !== undefined) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    IsFormatted.prototype.isFontSize = function (node) {\n        var size = node.style && node.style.fontSize;\n        if (IsFormatted.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 &&\n            size !== null && size !== '' && size !== undefined) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    IsFormatted.prototype.isFontName = function (node) {\n        var name = node.style && node.style.fontFamily;\n        if (IsFormatted.inlineTags.indexOf(node.nodeName.toLowerCase()) !== -1 &&\n            name !== null && name !== '' && name !== undefined) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    // Get Formatted Node\n    IsFormatted.inlineTags = [\n        'a',\n        'abbr',\n        'acronym',\n        'b',\n        'bdo',\n        'big',\n        'cite',\n        'code',\n        'dfn',\n        'em',\n        'i',\n        'kbd',\n        'label',\n        'q',\n        'samp',\n        'small',\n        'span',\n        'strong',\n        'sub',\n        'sup',\n        'tt',\n        'u',\n        'var',\n        'del'\n    ];\n    return IsFormatted;\n}());\nexport { IsFormatted };\n"]},"metadata":{},"sourceType":"module"}