{"ast":null,"code":"import { TreeView as BaseTreeView } from '@syncfusion/ej2-navigations';\nimport { isNullOrUndefined as isNOU, select, setValue, getValue, Draggable } from '@syncfusion/ej2-base';\nimport { KeyboardEvents, closest } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport * as CLS from '../base/classes';\nimport { read, Download, GetDetails, Delete } from '../common/operations';\nimport { createDialog } from '../pop-up/dialog';\nimport { updatePath, getPath, getDirectories } from '../common/utility';\nimport { createVirtualDragElement, dragStopHandler, dragStartHandler, draggingHandler, getDirectoryPath, getModule } from '../common/index';\nimport { copyFiles, cutFiles, removeActive, pasteHandler, getParentPath, readDropPath } from '../common/index';\nimport { hasEditAccess, createDeniedDialog, hasDownloadAccess, getAccessClass } from '../common/index';\n/**\n * NavigationPane module\n */\n\nvar NavigationPane =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the TreeView module\n   *\n   * @param {IFileManager} parent - specifies the parent element.\n   * @hidden\n   */\n  function NavigationPane(parent) {\n    this.removeNodes = [];\n    this.moveNames = [];\n    this.expandTree = false;\n    this.isDrag = false;\n    this.isPathDragged = false;\n    this.isRenameParent = false;\n    this.isRightClick = false;\n    this.renameParent = null;\n    this.parent = parent;\n    this.addEventListener();\n    this.keyConfigs = {\n      altEnter: 'alt+enter',\n      esc: 'escape',\n      del: 'delete',\n      ctrlX: 'ctrl+x',\n      ctrlC: 'ctrl+c',\n      ctrlV: 'ctrl+v',\n      ctrlShiftN: 'ctrl+shift+n',\n      shiftF10: 'shift+F10',\n      f2: 'f2'\n    };\n  }\n\n  NavigationPane.prototype.onInit = function () {\n    if (!isNOU(this.treeObj)) {\n      return;\n    } // eslint-disable-next-line\n\n\n    var rootData = getValue(this.parent.pathId[0], this.parent.feParent);\n    setValue('_fm_icon', 'e-fe-folder', rootData); // eslint-disable-next-line\n\n    var attr = {};\n    var id = getValue('id', rootData);\n\n    if (!isNOU(id)) {\n      setValue('data-id', id, attr);\n    }\n\n    if (!hasEditAccess(rootData)) {\n      setValue('class', getAccessClass(rootData), attr);\n    }\n\n    if (!isNOU(attr)) {\n      setValue('_fm_htmlAttr', attr, rootData);\n    }\n\n    this.treeObj = new BaseTreeView({\n      fields: {\n        dataSource: [rootData],\n        id: '_fm_id',\n        parentID: '_fm_pId',\n        expanded: '_fm_expanded',\n        selected: '_fm_selected',\n        text: 'name',\n        hasChildren: 'hasChild',\n        iconCss: '_fm_icon',\n        htmlAttributes: '_fm_htmlAttr',\n        tooltip: 'name'\n      },\n      enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n      nodeSelected: this.onNodeSelected.bind(this),\n      nodeExpanding: this.onNodeExpand.bind(this),\n      nodeClicked: this.onNodeClicked.bind(this),\n      allowEditing: true,\n      nodeEditing: this.onNodeEditing.bind(this),\n      drawNode: this.onDrowNode.bind(this),\n      enableRtl: this.parent.enableRtl,\n      dataBound: this.addDragDrop.bind(this)\n    });\n    this.treeObj.isStringTemplate = true;\n    this.treeObj.appendTo('#' + this.parent.element.id + CLS.TREE_ID);\n    this.wireEvents();\n  };\n\n  NavigationPane.prototype.addDragDrop = function () {\n    var _this = this;\n\n    if (!this.parent.isMobile && this.treeObj) {\n      if (this.parent.allowDragAndDrop) {\n        if (this.dragObj) {\n          this.dragObj.destroy();\n        }\n\n        this.dragObj = new Draggable(this.treeObj.element, {\n          cursorAt: this.parent.dragCursorPosition,\n          dragTarget: '.' + CLS.FULLROW,\n          distance: 5,\n          dragArea: this.parent.element,\n          drag: draggingHandler.bind(this, this.parent),\n          dragStart: function (args) {\n            dragStartHandler(_this.parent, args, _this.dragObj);\n          },\n          dragStop: dragStopHandler.bind(this, this.parent),\n          enableTailMode: true,\n          enableAutoScroll: true,\n          helper: this.dragHelper.bind(this)\n        });\n      } else if (!this.parent.allowDragAndDrop && this.dragObj) {\n        this.dragObj.destroy();\n      }\n    }\n  };\n\n  NavigationPane.prototype.dragHelper = function (args) {\n    var dragTarget = args.sender.target;\n\n    if (!dragTarget.classList.contains(CLS.FULLROW)) {\n      return null;\n    }\n\n    var dragLi = closest(dragTarget, 'li');\n    this.parent.dragPath = '';\n    this.parent.dragData = [];\n    this.parent.activeElements = [];\n    this.parent.activeElements = [dragLi];\n    this.parent.dragNodes = [];\n    getModule(this.parent, dragLi); // eslint-disable-next-line\n\n    this.parent.dragData = this.getTreeData(dragLi);\n    this.parent.dragPath = this.getDragPath(dragLi, this.parent.dragData[0].name);\n    this.parent.dragNodes.push(this.parent.dragData[0].name);\n    createVirtualDragElement(this.parent);\n    return this.parent.virtualDragElement;\n  };\n\n  NavigationPane.prototype.getDragPath = function (dragLi, text) {\n    var path = this.getDropPath(dragLi, text);\n    return getParentPath(path);\n  };\n\n  NavigationPane.prototype.getDropPath = function (node, text) {\n    var id = node.getAttribute('data-id');\n    var newText = this.parent.hasId ? id : text;\n    return getPath(node, newText, this.parent.hasId);\n  };\n\n  NavigationPane.prototype.onDrowNode = function (args) {\n    var eventArgs = {\n      element: args.node,\n      fileDetails: args.nodeData,\n      module: 'NavigationPane'\n    };\n    this.parent.trigger('fileLoad', eventArgs);\n  }; // eslint-disable-next-line\n\n\n  NavigationPane.prototype.addChild = function (files, target, prevent) {\n    // eslint-disable-next-line\n    var directories = getDirectories(files);\n\n    if (directories.length > 0) {\n      var length_1 = 0; // eslint-disable-next-line\n\n      var folders = directories;\n\n      while (length_1 < directories.length) {\n        // eslint-disable-next-line\n        folders[length_1]._fm_icon = 'e-fe-folder'; // eslint-disable-next-line\n\n        var attr = {};\n        var id = getValue('id', folders[length_1]);\n\n        if (!isNOU(id)) {\n          setValue('data-id', id, attr);\n        }\n\n        if (!hasEditAccess(folders[length_1])) {\n          setValue('class', getAccessClass(folders[length_1]), attr);\n        }\n\n        if (!isNOU(attr)) {\n          setValue('_fm_htmlAttr', attr, folders[length_1]);\n        }\n\n        length_1++;\n      } // eslint-disable-next-line\n\n\n      this.treeObj.addNodes(directories, target, null, prevent);\n    }\n  };\n\n  NavigationPane.prototype.onNodeSelected = function (args) {\n    if (this.parent.breadcrumbbarModule && this.parent.breadcrumbbarModule.searchObj && !this.renameParent) {\n      this.parent.breadcrumbbarModule.searchObj.element.value = '';\n      this.parent.isFiltered = false;\n    }\n\n    this.parent.searchedItems = [];\n\n    if (!args.isInteracted && !this.isRightClick && !this.isPathDragged && !this.isRenameParent) {\n      return;\n    }\n\n    this.activeNode = args.node;\n    this.parent.activeModule = 'navigationpane'; // eslint-disable-next-line\n\n    var nodeData = this.getTreeData(getValue('id', args.nodeData));\n\n    if (!this.renameParent) {\n      var eventArgs = {\n        cancel: false,\n        fileDetails: nodeData[0],\n        module: 'NavigationPane'\n      };\n      delete eventArgs.cancel;\n      this.parent.trigger('fileOpen', eventArgs);\n    }\n\n    this.parent.selectedItems = [];\n    this.parent.itemData = nodeData;\n    updatePath(args.node, this.parent.itemData[0], this.parent);\n    this.expandNodeTarget = null;\n\n    if (args.node.querySelector('.' + CLS.ICONS) && args.node.querySelector('.' + CLS.LIST_ITEM) === null) {\n      this.expandNodeTarget = 'add';\n    }\n\n    read(this.parent, this.isPathDragged ? events.pasteEnd : events.pathChanged, this.parent.path);\n    this.parent.visitedItem = args.node;\n    this.isPathDragged = this.isRenameParent = this.isRightClick = false;\n  };\n  /* istanbul ignore next */\n  // eslint-disable-next-line\n\n\n  NavigationPane.prototype.onPathDrag = function (args) {\n    this.isPathDragged = true;\n    this.selectResultNode(args[0]);\n  };\n  /* istanbul ignore next */\n\n\n  NavigationPane.prototype.onNodeExpand = function (args) {\n    if (!args.isInteracted && !this.isDrag) {\n      return;\n    }\n\n    if (args.node.querySelector('.' + CLS.LIST_ITEM) === null) {\n      var text = getValue('text', args.nodeData);\n      var id = args.node.getAttribute('data-id');\n      var isId = isNOU(id) ? false : true;\n      var newText = isNOU(id) ? text : id;\n      var path = getPath(args.node, newText, isId);\n      this.expandNodeTarget = args.node.getAttribute('data-uid');\n      this.parent.expandedId = this.expandNodeTarget;\n      this.parent.itemData = this.getTreeData(getValue('id', args.nodeData));\n      read(this.parent, events.nodeExpand, path);\n    }\n  };\n  /* istanbul ignore next */\n\n\n  NavigationPane.prototype.onNodeExpanded = function (args) {\n    this.addChild(args.files, this.expandNodeTarget, false);\n    this.parent.expandedId = null;\n  };\n\n  NavigationPane.prototype.onNodeClicked = function (args) {\n    this.parent.activeModule = 'navigationpane';\n    this.activeNode = args.node;\n\n    if (args.event.which === 3 && args.node.getAttribute('data-uid') !== this.treeObj.selectedNodes[0]) {\n      this.isRightClick = true;\n      this.treeObj.selectedNodes = [args.node.getAttribute('data-uid')];\n    } else if (args.node.getAttribute('data-uid') === this.treeObj.selectedNodes[0] && this.parent.selectedItems.length !== 0) {\n      this.parent.setProperties({\n        selectedItems: []\n      }, true);\n      var layout = this.parent.view === 'LargeIcons' ? 'largeiconsview' : 'detailsview';\n      this.parent.notify(events.modelChanged, {\n        module: layout,\n        newProp: {\n          selectedItems: []\n        }\n      });\n    }\n  };\n  /* istanbul ignore next */\n\n\n  NavigationPane.prototype.onNodeEditing = function (args) {\n    if (!isNOU(args.innerHtml)) {\n      args.cancel = true;\n    }\n  };\n\n  NavigationPane.prototype.onPathChanged = function (args) {\n    this.parent.isCut = false; // eslint-disable-next-line\n\n    var currFiles = getValue(this.parent.pathId[this.parent.pathId.length - 1], this.parent.feFiles);\n\n    if (this.expandNodeTarget === 'add') {\n      var sNode = select('[data-uid=\"' + this.treeObj.selectedNodes[0] + '\"]', this.treeObj.element);\n      var ul = select('.' + CLS.LIST_PARENT, sNode);\n\n      if (isNOU(ul)) {\n        this.addChild(args.files, this.treeObj.selectedNodes[0], !this.expandTree);\n      }\n\n      this.expandNodeTarget = '';\n    }\n\n    this.expandTree = false;\n\n    if (isNOU(currFiles)) {\n      setValue(this.parent.pathId[this.parent.pathId.length - 1], args.files, this.parent.feFiles);\n    }\n  };\n\n  NavigationPane.prototype.updateTree = function (args) {\n    if (this.treeObj) {\n      var id = this.treeObj.selectedNodes[0];\n      this.updateTreeNode(args, id);\n    }\n  };\n\n  NavigationPane.prototype.updateTreeNode = function (args, id) {\n    var toExpand = this.treeObj.expandedNodes.indexOf(id) === -1 ? false : true;\n    this.removeChildNodes(id);\n    this.addChild(args.files, id, !toExpand);\n  };\n\n  NavigationPane.prototype.removeChildNodes = function (id) {\n    var sNode = select('[data-uid=\"' + id + '\"]', this.treeObj.element);\n    var parent = select('.' + CLS.LIST_PARENT, sNode);\n    var childs = parent ? Array.prototype.slice.call(parent.children) : null;\n\n    if (childs) {\n      this.treeObj.removeNodes(childs);\n    }\n  };\n\n  NavigationPane.prototype.onOpenEnd = function (args) {\n    var sleId = this.parent.pathId[this.parent.pathId.length - 1];\n    this.treeObj.expandAll(this.treeObj.selectedNodes);\n    this.treeObj.selectedNodes = [sleId];\n    this.expandNodeTarget = 'add';\n    this.onPathChanged(args);\n  };\n\n  NavigationPane.prototype.onOpenInit = function (args) {\n    if (this.parent.activeModule === 'navigationpane') {\n      if (args.target.querySelector('.' + CLS.ICONS)) {\n        this.treeObj.expandAll(this.treeObj.selectedNodes);\n      }\n    }\n  };\n\n  NavigationPane.prototype.onInitialEnd = function (args) {\n    this.onInit();\n    this.addChild(args.files, getValue('_fm_id', args.cwd), false);\n  };\n\n  NavigationPane.prototype.onFinalizeEnd = function (args) {\n    this.onInit();\n    var id = getValue('_fm_id', args.cwd);\n    this.removeChildNodes(id);\n    this.addChild(args.files, id, false);\n    this.treeObj.selectedNodes = [this.parent.pathId[this.parent.pathId.length - 1]];\n  };\n\n  NavigationPane.prototype.onCreateEnd = function (args) {\n    this.updateTree(args);\n  };\n\n  NavigationPane.prototype.onSelectedData = function () {\n    if (this.parent.activeModule === 'navigationpane') {\n      this.updateItemData();\n    }\n  };\n\n  NavigationPane.prototype.onDeleteInit = function () {\n    if (this.parent.activeModule === 'navigationpane') {\n      this.updateActionData();\n      var name_1 = getValue('name', this.parent.itemData[0]);\n      Delete(this.parent, [name_1], this.parent.path, 'delete');\n    }\n  };\n  /* istanbul ignore next */\n\n\n  NavigationPane.prototype.onDeleteEnd = function (args) {\n    if (this.parent.activeModule === 'navigationpane') {\n      var selectedNode = this.treeObj.selectedNodes[0];\n      var selcetedEle = select('[data-uid=\"' + selectedNode + '\"]', this.treeObj.element);\n      var selectedNodeEle = closest(selcetedEle, '.' + CLS.LIST_PARENT).parentElement;\n      this.treeObj.selectedNodes = [selectedNodeEle.getAttribute('data-uid')];\n      this.treeObj.dataBind();\n    }\n\n    this.updateTree(args);\n  };\n\n  NavigationPane.prototype.onRefreshEnd = function (args) {\n    this.updateTree(args);\n  };\n\n  NavigationPane.prototype.onRenameInit = function () {\n    if (this.parent.activeModule === 'navigationpane') {\n      this.updateRenameData();\n    }\n  };\n  /* istanbul ignore next */\n\n\n  NavigationPane.prototype.onRenameEndParent = function (args) {\n    var id = this.renameParent ? this.renameParent : this.parent.pathId[this.parent.pathId.length - 1];\n    this.expandTree = this.treeObj.expandedNodes.indexOf(this.treeObj.selectedNodes[0]) !== -1;\n    this.updateTreeNode(args, id);\n    this.parent.expandedId = null;\n\n    if (this.renameParent) {\n      this.renameParent = null;\n    } else {\n      // eslint-disable-next-line\n      var resultData = [];\n\n      if (this.parent.hasId) {\n        resultData = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where('id', 'equal', this.parent.renamedId, false));\n      } else {\n        // eslint-disable-next-line\n        var nData = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where(this.treeObj.fields.text, 'equal', this.parent.renameText, false));\n\n        if (nData.length > 0) {\n          resultData = new DataManager(nData).executeLocal(new Query().where('_fm_pId', 'equal', id, false));\n        }\n      }\n\n      if (resultData.length > 0) {\n        this.isRenameParent = true;\n        var id_1 = getValue(this.treeObj.fields.id, resultData[0]);\n        this.treeObj.selectedNodes = [id_1];\n        this.treeObj.dataBind();\n      }\n    }\n  };\n  /* istanbul ignore next */\n\n\n  NavigationPane.prototype.onRenameEnd = function (args) {\n    if (this.parent.breadcrumbbarModule.searchObj.element.value === '' && !this.parent.isFiltered) {\n      this.updateTree(args);\n    } else {\n      // eslint-disable-next-line\n      var data = this.treeObj.getTreeData(); // eslint-disable-next-line\n\n      var resultData = [];\n\n      if (this.parent.hasId) {\n        resultData = new DataManager(data).executeLocal(new Query().where('id', 'equal', this.parent.renamedId, false));\n      } else {\n        // eslint-disable-next-line\n        var nData = new DataManager(data).executeLocal(new Query().where(this.treeObj.fields.text, 'equal', this.parent.currentItemText, false));\n\n        if (nData.length > 0) {\n          resultData = new DataManager(nData).executeLocal(new Query().where('filterPath', 'equal', this.parent.filterPath, false));\n        }\n      }\n\n      if (resultData.length > 0) {\n        this.renameParent = getValue(this.treeObj.fields.parentID, resultData[0]);\n        this.parent.expandedId = this.renameParent;\n        this.parent.itemData = this.getTreeData(this.renameParent);\n        read(this.parent, events.renameEndParent, this.parent.filterPath.replace(/\\\\/g, '/'));\n      }\n    }\n  };\n\n  NavigationPane.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName() && e.module !== 'common') {\n      /* istanbul ignore next */\n      return;\n    }\n\n    for (var _i = 0, _a = Object.keys(e.newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'allowDragAndDrop':\n          this.addDragDrop();\n          break;\n\n        case 'navigationPaneSettings':\n          read(this.parent, events.finalizeEnd, '/');\n          break;\n      }\n    }\n  };\n  /* istanbul ignore next */\n\n\n  NavigationPane.prototype.onDownLoadInit = function () {\n    this.doDownload();\n  };\n\n  NavigationPane.prototype.onSelectionChanged = function (e) {\n    this.treeObj.selectedNodes = [e.selectedNode];\n  };\n\n  NavigationPane.prototype.onClearPathInit = function (e) {\n    this.removeChildNodes(e.selectedNode);\n  };\n\n  NavigationPane.prototype.onDragEnd = function (args) {\n    var moveNames = [];\n\n    if (this.parent.isPasteError || this.parent.isSearchDrag) {\n      moveNames = this.getMoveNames(args.files, this.parent.isSearchDrag, this.parent.dragPath);\n    } else {\n      moveNames = this.moveNames;\n    }\n\n    this.treeObj.removeNodes(moveNames);\n  }; // eslint-disable-next-line\n\n\n  NavigationPane.prototype.getMoveNames = function (files, flag, path) {\n    var moveNames = [];\n\n    for (var i = 0; i < files.length; i++) {\n      if (!files[i].isFile) {\n        if (!this.parent.hasId) {\n          var name_2 = files[i].previousName;\n\n          if (flag) {\n            path = path + files[i].previousName;\n            var index = path.lastIndexOf('/');\n            name_2 = path.substring(index + 1);\n            path = path.substring(0, index + 1);\n          } // eslint-disable-next-line\n\n\n          var resultData = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where(this.treeObj.fields.text, 'equal', name_2, false));\n\n          for (var j = 0; j < resultData.length; j++) {\n            var fPath = getValue('filterPath', resultData[j]);\n            fPath = fPath.replace(/\\\\/g, '/');\n\n            if (fPath === path) {\n              moveNames.push(getValue(this.treeObj.fields.id, resultData[j]));\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    return moveNames;\n  };\n\n  NavigationPane.prototype.onCutEnd = function (args) {\n    var moveNames = [];\n\n    if (this.parent.isPasteError || this.parent.isSearchCut) {\n      this.moveNames = this.getMoveNames(args.files, this.parent.isSearchCut, this.parent.targetPath);\n    } else {\n      moveNames = this.moveNames;\n    }\n\n    this.treeObj.removeNodes(moveNames);\n  };\n  /* istanbul ignore next */\n  // eslint-disable-next-line\n\n\n  NavigationPane.prototype.selectResultNode = function (resultObj) {\n    if (!this.parent.hasId) {\n      var path = getValue('filterPath', resultObj);\n      var itemname = getValue('name', resultObj); // eslint-disable-next-line\n\n      var data = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where(this.treeObj.fields.text, 'equal', itemname, false));\n\n      if (data.length > 0) {\n        // eslint-disable-next-line\n        var resultData = new DataManager(data).executeLocal(new Query().where('filterPath', 'equal', path, false));\n\n        if (resultData.length > 0) {\n          var id = getValue(this.treeObj.fields.id, resultData[0]);\n          this.treeObj.selectedNodes = [id];\n          this.treeObj.dataBind();\n        }\n      }\n    } else {\n      this.treeObj.selectedNodes = [getValue('_fm_id', resultObj)];\n      this.treeObj.dataBind();\n    }\n  };\n\n  NavigationPane.prototype.onDropPath = function (args) {\n    this.onpasteEnd(args);\n    this.selectResultNode(this.parent.dropData);\n    this.parent.isDropEnd = !this.parent.isPasteError;\n  };\n\n  NavigationPane.prototype.onpasteEnd = function (args) {\n    // eslint-disable-next-line\n    var resultData = [];\n\n    if (this.parent.hasId) {\n      resultData = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where('id', 'equal', getValue('id', args.cwd), false));\n    } else {\n      // eslint-disable-next-line\n      var nData = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where(this.treeObj.fields.text, 'equal', getValue('name', args.cwd), false));\n\n      if (nData.length > 0) {\n        resultData = new DataManager(nData).executeLocal(new Query().where('filterPath', 'equal', getValue('filterPath', args.cwd), false));\n      }\n    }\n\n    if (resultData.length > 0) {\n      var id = getValue(this.treeObj.fields.id, resultData[0]);\n      var toExpand = this.treeObj.expandedNodes.indexOf(id) === -1;\n      this.removeChildNodes(id);\n      this.addChild(args.files, id, toExpand);\n    }\n\n    this.parent.expandedId = null;\n    this.onPathChanged(args);\n\n    if (this.parent.isDragDrop) {\n      this.checkDropPath(args);\n    }\n  };\n  /* istanbul ignore next */\n\n\n  NavigationPane.prototype.checkDropPath = function (args) {\n    if (this.parent.hasId) {\n      this.parent.isDropEnd = !this.parent.isPasteError;\n      readDropPath(this.parent);\n      return;\n    }\n\n    if (this.parent.dropPath.indexOf(getDirectoryPath(this.parent, args)) === -1) {\n      this.parent.isDropEnd = false;\n      readDropPath(this.parent);\n    } else {\n      this.parent.isDropEnd = !this.parent.isPasteError;\n    }\n  };\n\n  NavigationPane.prototype.onpasteInit = function () {\n    if (this.parent.activeModule === this.getModuleName()) {\n      this.updateItemData();\n    }\n\n    this.moveNames = []; // eslint-disable-next-line\n\n    var obj = this.parent.isDragDrop ? this.parent.dragData : this.parent.actionRecords;\n\n    for (var i = 0; i < obj.length; i++) {\n      if (getValue('isFile', obj[i]) === false) {\n        this.moveNames.push(getValue('_fm_id', obj[i]));\n      }\n    }\n  };\n\n  NavigationPane.prototype.oncutCopyInit = function () {\n    if (this.parent.activeModule === this.getModuleName()) {\n      this.parent.activeRecords = this.getTreeData(this.treeObj.selectedNodes[0]);\n      this.parent.activeElements = [this.activeNode];\n    }\n  };\n\n  NavigationPane.prototype.addEventListener = function () {\n    this.parent.on(events.modelChanged, this.onPropertyChanged, this);\n    this.parent.on(events.downloadInit, this.onDownLoadInit, this);\n    this.parent.on(events.initialEnd, this.onInitialEnd, this);\n    this.parent.on(events.finalizeEnd, this.onFinalizeEnd, this);\n    this.parent.on(events.pathChanged, this.onPathChanged, this);\n    this.parent.on(events.pasteEnd, this.onpasteEnd, this);\n    this.parent.on(events.cutEnd, this.onCutEnd, this);\n    this.parent.on(events.pasteInit, this.onpasteInit, this);\n    this.parent.on(events.nodeExpand, this.onNodeExpanded, this);\n    this.parent.on(events.createEnd, this.onCreateEnd, this);\n    this.parent.on(events.selectedData, this.onSelectedData, this);\n    this.parent.on(events.deleteInit, this.onDeleteInit, this);\n    this.parent.on(events.deleteEnd, this.onDeleteEnd, this);\n    this.parent.on(events.refreshEnd, this.onRefreshEnd, this);\n    this.parent.on(events.updateTreeSelection, this.onSelectionChanged, this);\n    this.parent.on(events.openInit, this.onOpenInit, this);\n    this.parent.on(events.openEnd, this.onOpenEnd, this);\n    this.parent.on(events.destroy, this.destroy, this);\n    this.parent.on(events.renameInit, this.onRenameInit, this);\n    this.parent.on(events.renameEnd, this.onRenameEnd, this);\n    this.parent.on(events.renameEndParent, this.onRenameEndParent, this);\n    this.parent.on(events.clearPathInit, this.onClearPathInit, this);\n    this.parent.on(events.cutCopyInit, this.oncutCopyInit, this);\n    this.parent.on(events.dropInit, this.onDropInit, this);\n    this.parent.on(events.menuItemData, this.onMenuItemData, this);\n    this.parent.on(events.dragEnd, this.onDragEnd, this);\n    this.parent.on(events.dragging, this.onDragging, this);\n    this.parent.on(events.dropPath, this.onDropPath, this);\n    this.parent.on(events.detailsInit, this.onDetailsInit, this);\n    this.parent.on(events.pathDrag, this.onPathDrag, this);\n  };\n\n  NavigationPane.prototype.removeEventListener = function () {\n    this.parent.off(events.initialEnd, this.onInitialEnd);\n    this.parent.off(events.downloadInit, this.onDownLoadInit);\n    this.parent.off(events.finalizeEnd, this.onFinalizeEnd);\n    this.parent.off(events.selectedData, this.onSelectedData);\n    this.parent.off(events.modelChanged, this.onPropertyChanged);\n    this.parent.off(events.pathChanged, this.onPathChanged);\n    this.parent.off(events.pasteEnd, this.onpasteEnd);\n    this.parent.off(events.cutEnd, this.onCutEnd);\n    this.parent.off(events.pasteInit, this.onpasteInit);\n    this.parent.off(events.updateTreeSelection, this.onSelectionChanged);\n    this.parent.off(events.nodeExpand, this.onNodeExpanded);\n    this.parent.off(events.createEnd, this.onCreateEnd);\n    this.parent.off(events.refreshEnd, this.onRefreshEnd);\n    this.parent.off(events.openInit, this.onOpenInit);\n    this.parent.off(events.openEnd, this.onOpenEnd);\n    this.parent.off(events.destroy, this.destroy);\n    this.parent.off(events.renameInit, this.onRenameInit);\n    this.parent.off(events.renameEnd, this.onRenameEnd);\n    this.parent.off(events.renameEndParent, this.onRenameEndParent);\n    this.parent.off(events.clearPathInit, this.onClearPathInit);\n    this.parent.off(events.deleteInit, this.onDeleteInit);\n    this.parent.off(events.deleteEnd, this.onDeleteEnd);\n    this.parent.off(events.cutCopyInit, this.oncutCopyInit);\n    this.parent.off(events.dropInit, this.onDropInit);\n    this.parent.off(events.dragEnd, this.onDragEnd);\n    this.parent.off(events.dragging, this.onDragging);\n    this.parent.off(events.dropPath, this.onDropPath);\n    this.parent.off(events.detailsInit, this.onDetailsInit);\n    this.parent.off(events.menuItemData, this.onMenuItemData);\n    this.parent.off(events.pathDrag, this.onPathDrag);\n  };\n  /* istanbul ignore next */\n\n\n  NavigationPane.prototype.onDetailsInit = function () {\n    if (this.parent.activeModule === this.getModuleName()) {\n      // eslint-disable-next-line\n      var dataobj = this.getTreeData(this.treeObj.selectedNodes[0]);\n      this.parent.itemData = dataobj;\n    }\n  }; // eslint-disable-next-line\n\n\n  NavigationPane.prototype.onMenuItemData = function (args) {\n    if (this.parent.activeModule === this.getModuleName()) {\n      var liEle = closest(args.target, 'li');\n      this.parent.itemData = this.getTreeData(liEle.getAttribute('data-uid'));\n    }\n  };\n  /* istanbul ignore next */\n\n\n  NavigationPane.prototype.onDragging = function (args) {\n    var ele = closest(args.target, 'li');\n\n    if (ele.classList.contains('e-node-collapsed')) {\n      this.isDrag = true;\n      var level = parseInt(ele.getAttribute('aria-level'), 10);\n      this.treeObj.expandAll([ele.getAttribute('data-uid')], level + 1);\n      this.isDrag = false;\n    }\n  };\n\n  NavigationPane.prototype.onDropInit = function (args) {\n    if (this.parent.targetModule === this.getModuleName()) {\n      var dropLi = closest(args.target, 'li');\n      this.parent.dropData = this.getTreeData(dropLi)[0];\n      this.parent.dropPath = this.getDropPath(dropLi, getValue('name', this.parent.dropData));\n    }\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} - returns the module name.\n   * @private\n   */\n\n\n  NavigationPane.prototype.getModuleName = function () {\n    return 'navigationpane';\n  };\n\n  NavigationPane.prototype.destroy = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.removeEventListener();\n\n    if (this.treeObj) {\n      this.unWireEvents();\n      this.treeObj.destroy();\n    }\n  };\n\n  NavigationPane.prototype.wireEvents = function () {\n    this.keyboardModule = new KeyboardEvents(this.treeObj.element, {\n      keyAction: this.keyDown.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n  };\n\n  NavigationPane.prototype.unWireEvents = function () {\n    this.keyboardModule.destroy();\n  };\n  /* istanbul ignore next */\n\n\n  NavigationPane.prototype.keyDown = function (e) {\n    var action = e.action;\n\n    switch (action) {\n      case 'altEnter':\n        this.parent.notify(events.detailsInit, {});\n        GetDetails(this.parent, [], this.parent.path, 'details');\n        break;\n\n      case 'esc':\n        removeActive(this.parent);\n        break;\n\n      case 'del':\n        this.updateItemData();\n\n        if (!hasEditAccess(this.parent.itemData[0])) {\n          createDeniedDialog(this.parent, this.parent.itemData[0], events.permissionEdit);\n        } else {\n          this.removeNodes = [];\n          createDialog(this.parent, 'Delete');\n        }\n\n        break;\n\n      case 'ctrlC':\n        copyFiles(this.parent);\n        break;\n\n      case 'ctrlV':\n        this.parent.folderPath = '';\n        pasteHandler(this.parent);\n        break;\n\n      case 'ctrlX':\n        cutFiles(this.parent);\n        break;\n\n      case 'shiftF10':\n        this.updateItemData();\n\n        if (!hasDownloadAccess(this.parent.itemData[0])) {\n          createDeniedDialog(this.parent, this.parent.itemData[0], events.permissionDownload);\n          return;\n        }\n\n        if (this.parent.selectedItems.length !== 0) {\n          this.doDownload();\n        }\n\n        break;\n\n      case 'f2':\n        if (this.parent.selectedItems.length === 0) {\n          // eslint-disable-next-line\n          var data = this.getTreeData(this.treeObj.selectedNodes[0])[0];\n\n          if (!hasEditAccess(data)) {\n            createDeniedDialog(this.parent, data, events.permissionEdit);\n          } else {\n            this.updateRenameData();\n            createDialog(this.parent, 'Rename');\n          }\n        }\n\n        break;\n    }\n  }; // eslint-disable-next-line\n\n\n  NavigationPane.prototype.getTreeData = function (args) {\n    // eslint-disable-next-line\n    var data = this.treeObj.getTreeData(args);\n\n    for (var i = 0; i < data.length; i++) {\n      if (isNOU(getValue('hasChild', data[i]))) {\n        setValue('hasChild', false, data[i]);\n      }\n    }\n\n    return data;\n  };\n\n  NavigationPane.prototype.updateRenameData = function () {\n    this.updateItemData();\n    this.parent.currentItemText = getValue('name', this.parent.itemData[0]);\n  };\n\n  NavigationPane.prototype.updateItemData = function () {\n    // eslint-disable-next-line\n    var data = this.getTreeData(this.treeObj.selectedNodes[0])[0];\n    this.parent.itemData = [data];\n    this.parent.isFile = false;\n  };\n\n  NavigationPane.prototype.updateActionData = function () {\n    this.updateItemData();\n    var newPath = getParentPath(this.parent.path);\n    this.parent.setProperties({\n      path: newPath\n    }, true);\n    this.parent.pathId.pop();\n    this.parent.pathNames.pop();\n  };\n  /* istanbul ignore next */\n\n\n  NavigationPane.prototype.doDownload = function () {\n    var newPath = getParentPath(this.parent.path);\n    var itemId = this.treeObj.selectedNodes[0];\n    var name = itemId === this.parent.pathId[0] ? '' : getValue('name', this.parent.itemData[0]);\n    Download(this.parent, newPath, [name]);\n  };\n\n  return NavigationPane;\n}();\n\nexport { NavigationPane };","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/@syncfusion/ej2-filemanager/src/file-manager/layout/navigation-pane.js"],"names":["TreeView","BaseTreeView","isNullOrUndefined","isNOU","select","setValue","getValue","Draggable","KeyboardEvents","closest","DataManager","Query","events","CLS","read","Download","GetDetails","Delete","createDialog","updatePath","getPath","getDirectories","createVirtualDragElement","dragStopHandler","dragStartHandler","draggingHandler","getDirectoryPath","getModule","copyFiles","cutFiles","removeActive","pasteHandler","getParentPath","readDropPath","hasEditAccess","createDeniedDialog","hasDownloadAccess","getAccessClass","NavigationPane","parent","removeNodes","moveNames","expandTree","isDrag","isPathDragged","isRenameParent","isRightClick","renameParent","addEventListener","keyConfigs","altEnter","esc","del","ctrlX","ctrlC","ctrlV","ctrlShiftN","shiftF10","f2","prototype","onInit","treeObj","rootData","pathId","feParent","attr","id","fields","dataSource","parentID","expanded","selected","text","hasChildren","iconCss","htmlAttributes","tooltip","enableHtmlSanitizer","nodeSelected","onNodeSelected","bind","nodeExpanding","onNodeExpand","nodeClicked","onNodeClicked","allowEditing","nodeEditing","onNodeEditing","drawNode","onDrowNode","enableRtl","dataBound","addDragDrop","isStringTemplate","appendTo","element","TREE_ID","wireEvents","_this","isMobile","allowDragAndDrop","dragObj","destroy","cursorAt","dragCursorPosition","dragTarget","FULLROW","distance","dragArea","drag","dragStart","args","dragStop","enableTailMode","enableAutoScroll","helper","dragHelper","sender","target","classList","contains","dragLi","dragPath","dragData","activeElements","dragNodes","getTreeData","getDragPath","name","push","virtualDragElement","path","getDropPath","node","getAttribute","newText","hasId","eventArgs","fileDetails","nodeData","module","trigger","addChild","files","prevent","directories","length","length_1","folders","_fm_icon","addNodes","breadcrumbbarModule","searchObj","value","isFiltered","searchedItems","isInteracted","activeNode","activeModule","cancel","selectedItems","itemData","expandNodeTarget","querySelector","ICONS","LIST_ITEM","pasteEnd","pathChanged","visitedItem","onPathDrag","selectResultNode","isId","expandedId","nodeExpand","onNodeExpanded","event","which","selectedNodes","setProperties","layout","view","notify","modelChanged","newProp","innerHtml","onPathChanged","isCut","currFiles","feFiles","sNode","ul","LIST_PARENT","updateTree","updateTreeNode","toExpand","expandedNodes","indexOf","removeChildNodes","childs","Array","slice","call","children","onOpenEnd","sleId","expandAll","onOpenInit","onInitialEnd","cwd","onFinalizeEnd","onCreateEnd","onSelectedData","updateItemData","onDeleteInit","updateActionData","name_1","onDeleteEnd","selectedNode","selcetedEle","selectedNodeEle","parentElement","dataBind","onRefreshEnd","onRenameInit","updateRenameData","onRenameEndParent","resultData","executeLocal","where","renamedId","nData","renameText","id_1","onRenameEnd","data","currentItemText","filterPath","renameEndParent","replace","onPropertyChanged","e","getModuleName","_i","_a","Object","keys","prop","finalizeEnd","onDownLoadInit","doDownload","onSelectionChanged","onClearPathInit","onDragEnd","isPasteError","isSearchDrag","getMoveNames","flag","i","isFile","name_2","previousName","index","lastIndexOf","substring","j","fPath","onCutEnd","isSearchCut","targetPath","resultObj","itemname","onDropPath","onpasteEnd","dropData","isDropEnd","isDragDrop","checkDropPath","dropPath","onpasteInit","obj","actionRecords","oncutCopyInit","activeRecords","on","downloadInit","initialEnd","cutEnd","pasteInit","createEnd","selectedData","deleteInit","deleteEnd","refreshEnd","updateTreeSelection","openInit","openEnd","renameInit","renameEnd","clearPathInit","cutCopyInit","dropInit","onDropInit","menuItemData","onMenuItemData","dragEnd","dragging","onDragging","detailsInit","onDetailsInit","pathDrag","removeEventListener","off","dataobj","liEle","ele","level","parseInt","targetModule","dropLi","isDestroyed","unWireEvents","keyboardModule","keyAction","keyDown","eventName","action","permissionEdit","folderPath","permissionDownload","newPath","pop","pathNames","itemId"],"mappings":"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","sourcesContent":["import { TreeView as BaseTreeView } from '@syncfusion/ej2-navigations';\nimport { isNullOrUndefined as isNOU, select, setValue, getValue, Draggable } from '@syncfusion/ej2-base';\nimport { KeyboardEvents, closest } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport * as CLS from '../base/classes';\nimport { read, Download, GetDetails, Delete } from '../common/operations';\nimport { createDialog } from '../pop-up/dialog';\nimport { updatePath, getPath, getDirectories } from '../common/utility';\nimport { createVirtualDragElement, dragStopHandler, dragStartHandler, draggingHandler, getDirectoryPath, getModule } from '../common/index';\nimport { copyFiles, cutFiles, removeActive, pasteHandler, getParentPath, readDropPath } from '../common/index';\nimport { hasEditAccess, createDeniedDialog, hasDownloadAccess, getAccessClass } from '../common/index';\n/**\n * NavigationPane module\n */\nvar NavigationPane = /** @class */ (function () {\n    /**\n     * Constructor for the TreeView module\n     *\n     * @param {IFileManager} parent - specifies the parent element.\n     * @hidden\n     */\n    function NavigationPane(parent) {\n        this.removeNodes = [];\n        this.moveNames = [];\n        this.expandTree = false;\n        this.isDrag = false;\n        this.isPathDragged = false;\n        this.isRenameParent = false;\n        this.isRightClick = false;\n        this.renameParent = null;\n        this.parent = parent;\n        this.addEventListener();\n        this.keyConfigs = {\n            altEnter: 'alt+enter',\n            esc: 'escape',\n            del: 'delete',\n            ctrlX: 'ctrl+x',\n            ctrlC: 'ctrl+c',\n            ctrlV: 'ctrl+v',\n            ctrlShiftN: 'ctrl+shift+n',\n            shiftF10: 'shift+F10',\n            f2: 'f2'\n        };\n    }\n    NavigationPane.prototype.onInit = function () {\n        if (!isNOU(this.treeObj)) {\n            return;\n        }\n        // eslint-disable-next-line\n        var rootData = getValue(this.parent.pathId[0], this.parent.feParent);\n        setValue('_fm_icon', 'e-fe-folder', rootData);\n        // eslint-disable-next-line\n        var attr = {};\n        var id = getValue('id', rootData);\n        if (!isNOU(id)) {\n            setValue('data-id', id, attr);\n        }\n        if (!hasEditAccess(rootData)) {\n            setValue('class', getAccessClass(rootData), attr);\n        }\n        if (!isNOU(attr)) {\n            setValue('_fm_htmlAttr', attr, rootData);\n        }\n        this.treeObj = new BaseTreeView({\n            fields: {\n                dataSource: [rootData], id: '_fm_id', parentID: '_fm_pId', expanded: '_fm_expanded', selected: '_fm_selected', text: 'name',\n                hasChildren: 'hasChild', iconCss: '_fm_icon', htmlAttributes: '_fm_htmlAttr', tooltip: 'name'\n            },\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            nodeSelected: this.onNodeSelected.bind(this),\n            nodeExpanding: this.onNodeExpand.bind(this),\n            nodeClicked: this.onNodeClicked.bind(this),\n            allowEditing: true,\n            nodeEditing: this.onNodeEditing.bind(this),\n            drawNode: this.onDrowNode.bind(this),\n            enableRtl: this.parent.enableRtl,\n            dataBound: this.addDragDrop.bind(this)\n        });\n        this.treeObj.isStringTemplate = true;\n        this.treeObj.appendTo('#' + this.parent.element.id + CLS.TREE_ID);\n        this.wireEvents();\n    };\n    NavigationPane.prototype.addDragDrop = function () {\n        var _this = this;\n        if (!this.parent.isMobile && this.treeObj) {\n            if (this.parent.allowDragAndDrop) {\n                if (this.dragObj) {\n                    this.dragObj.destroy();\n                }\n                this.dragObj = new Draggable(this.treeObj.element, {\n                    cursorAt: this.parent.dragCursorPosition,\n                    dragTarget: '.' + CLS.FULLROW,\n                    distance: 5,\n                    dragArea: this.parent.element,\n                    drag: draggingHandler.bind(this, this.parent),\n                    dragStart: function (args) {\n                        dragStartHandler(_this.parent, args, _this.dragObj);\n                    },\n                    dragStop: dragStopHandler.bind(this, this.parent),\n                    enableTailMode: true,\n                    enableAutoScroll: true,\n                    helper: this.dragHelper.bind(this)\n                });\n            }\n            else if (!this.parent.allowDragAndDrop && this.dragObj) {\n                this.dragObj.destroy();\n            }\n        }\n    };\n    NavigationPane.prototype.dragHelper = function (args) {\n        var dragTarget = args.sender.target;\n        if (!dragTarget.classList.contains(CLS.FULLROW)) {\n            return null;\n        }\n        var dragLi = closest(dragTarget, 'li');\n        this.parent.dragPath = '';\n        this.parent.dragData = [];\n        this.parent.activeElements = [];\n        this.parent.activeElements = [dragLi];\n        this.parent.dragNodes = [];\n        getModule(this.parent, dragLi);\n        // eslint-disable-next-line\n        this.parent.dragData = this.getTreeData(dragLi);\n        this.parent.dragPath = this.getDragPath(dragLi, this.parent.dragData[0].name);\n        this.parent.dragNodes.push(this.parent.dragData[0].name);\n        createVirtualDragElement(this.parent);\n        return this.parent.virtualDragElement;\n    };\n    NavigationPane.prototype.getDragPath = function (dragLi, text) {\n        var path = this.getDropPath(dragLi, text);\n        return getParentPath(path);\n    };\n    NavigationPane.prototype.getDropPath = function (node, text) {\n        var id = node.getAttribute('data-id');\n        var newText = this.parent.hasId ? id : text;\n        return getPath(node, newText, this.parent.hasId);\n    };\n    NavigationPane.prototype.onDrowNode = function (args) {\n        var eventArgs = {\n            element: args.node,\n            fileDetails: args.nodeData,\n            module: 'NavigationPane'\n        };\n        this.parent.trigger('fileLoad', eventArgs);\n    };\n    // eslint-disable-next-line\n    NavigationPane.prototype.addChild = function (files, target, prevent) {\n        // eslint-disable-next-line\n        var directories = getDirectories(files);\n        if (directories.length > 0) {\n            var length_1 = 0;\n            // eslint-disable-next-line\n            var folders = directories;\n            while (length_1 < directories.length) {\n                // eslint-disable-next-line\n                folders[length_1]._fm_icon = 'e-fe-folder';\n                // eslint-disable-next-line\n                var attr = {};\n                var id = getValue('id', folders[length_1]);\n                if (!isNOU(id)) {\n                    setValue('data-id', id, attr);\n                }\n                if (!hasEditAccess(folders[length_1])) {\n                    setValue('class', getAccessClass(folders[length_1]), attr);\n                }\n                if (!isNOU(attr)) {\n                    setValue('_fm_htmlAttr', attr, folders[length_1]);\n                }\n                length_1++;\n            }\n            // eslint-disable-next-line\n            this.treeObj.addNodes(directories, target, null, prevent);\n        }\n    };\n    NavigationPane.prototype.onNodeSelected = function (args) {\n        if (this.parent.breadcrumbbarModule && this.parent.breadcrumbbarModule.searchObj && !this.renameParent) {\n            this.parent.breadcrumbbarModule.searchObj.element.value = '';\n            this.parent.isFiltered = false;\n        }\n        this.parent.searchedItems = [];\n        if (!args.isInteracted && !this.isRightClick && !this.isPathDragged && !this.isRenameParent) {\n            return;\n        }\n        this.activeNode = args.node;\n        this.parent.activeModule = 'navigationpane';\n        // eslint-disable-next-line\n        var nodeData = this.getTreeData(getValue('id', args.nodeData));\n        if (!this.renameParent) {\n            var eventArgs = { cancel: false, fileDetails: nodeData[0], module: 'NavigationPane' };\n            delete eventArgs.cancel;\n            this.parent.trigger('fileOpen', eventArgs);\n        }\n        this.parent.selectedItems = [];\n        this.parent.itemData = nodeData;\n        updatePath(args.node, this.parent.itemData[0], this.parent);\n        this.expandNodeTarget = null;\n        if (args.node.querySelector('.' + CLS.ICONS) && args.node.querySelector('.' + CLS.LIST_ITEM) === null) {\n            this.expandNodeTarget = 'add';\n        }\n        read(this.parent, this.isPathDragged ? events.pasteEnd : events.pathChanged, this.parent.path);\n        this.parent.visitedItem = args.node;\n        this.isPathDragged = this.isRenameParent = this.isRightClick = false;\n    };\n    /* istanbul ignore next */\n    // eslint-disable-next-line\n    NavigationPane.prototype.onPathDrag = function (args) {\n        this.isPathDragged = true;\n        this.selectResultNode(args[0]);\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onNodeExpand = function (args) {\n        if (!args.isInteracted && !this.isDrag) {\n            return;\n        }\n        if (args.node.querySelector('.' + CLS.LIST_ITEM) === null) {\n            var text = getValue('text', args.nodeData);\n            var id = args.node.getAttribute('data-id');\n            var isId = isNOU(id) ? false : true;\n            var newText = isNOU(id) ? text : id;\n            var path = getPath(args.node, newText, isId);\n            this.expandNodeTarget = args.node.getAttribute('data-uid');\n            this.parent.expandedId = this.expandNodeTarget;\n            this.parent.itemData = this.getTreeData(getValue('id', args.nodeData));\n            read(this.parent, events.nodeExpand, path);\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onNodeExpanded = function (args) {\n        this.addChild(args.files, this.expandNodeTarget, false);\n        this.parent.expandedId = null;\n    };\n    NavigationPane.prototype.onNodeClicked = function (args) {\n        this.parent.activeModule = 'navigationpane';\n        this.activeNode = args.node;\n        if ((args.event.which === 3) && (args.node.getAttribute('data-uid') !== this.treeObj.selectedNodes[0])) {\n            this.isRightClick = true;\n            this.treeObj.selectedNodes = [args.node.getAttribute('data-uid')];\n        }\n        else if (args.node.getAttribute('data-uid') === this.treeObj.selectedNodes[0] && this.parent.selectedItems.length !== 0) {\n            this.parent.setProperties({ selectedItems: [] }, true);\n            var layout = (this.parent.view === 'LargeIcons') ? 'largeiconsview' : 'detailsview';\n            this.parent.notify(events.modelChanged, { module: layout, newProp: { selectedItems: [] } });\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onNodeEditing = function (args) {\n        if (!isNOU(args.innerHtml)) {\n            args.cancel = true;\n        }\n    };\n    NavigationPane.prototype.onPathChanged = function (args) {\n        this.parent.isCut = false;\n        // eslint-disable-next-line\n        var currFiles = getValue(this.parent.pathId[this.parent.pathId.length - 1], this.parent.feFiles);\n        if (this.expandNodeTarget === 'add') {\n            var sNode = select('[data-uid=\"' + this.treeObj.selectedNodes[0] + '\"]', this.treeObj.element);\n            var ul = select('.' + CLS.LIST_PARENT, sNode);\n            if (isNOU(ul)) {\n                this.addChild(args.files, this.treeObj.selectedNodes[0], !this.expandTree);\n            }\n            this.expandNodeTarget = '';\n        }\n        this.expandTree = false;\n        if (isNOU(currFiles)) {\n            setValue(this.parent.pathId[this.parent.pathId.length - 1], args.files, this.parent.feFiles);\n        }\n    };\n    NavigationPane.prototype.updateTree = function (args) {\n        if (this.treeObj) {\n            var id = this.treeObj.selectedNodes[0];\n            this.updateTreeNode(args, id);\n        }\n    };\n    NavigationPane.prototype.updateTreeNode = function (args, id) {\n        var toExpand = this.treeObj.expandedNodes.indexOf(id) === -1 ? false : true;\n        this.removeChildNodes(id);\n        this.addChild(args.files, id, !toExpand);\n    };\n    NavigationPane.prototype.removeChildNodes = function (id) {\n        var sNode = select('[data-uid=\"' + id + '\"]', this.treeObj.element);\n        var parent = select('.' + CLS.LIST_PARENT, sNode);\n        var childs = parent ? Array.prototype.slice.call(parent.children) : null;\n        if (childs) {\n            this.treeObj.removeNodes(childs);\n        }\n    };\n    NavigationPane.prototype.onOpenEnd = function (args) {\n        var sleId = this.parent.pathId[this.parent.pathId.length - 1];\n        this.treeObj.expandAll(this.treeObj.selectedNodes);\n        this.treeObj.selectedNodes = [sleId];\n        this.expandNodeTarget = 'add';\n        this.onPathChanged(args);\n    };\n    NavigationPane.prototype.onOpenInit = function (args) {\n        if (this.parent.activeModule === 'navigationpane') {\n            if (args.target.querySelector('.' + CLS.ICONS)) {\n                this.treeObj.expandAll(this.treeObj.selectedNodes);\n            }\n        }\n    };\n    NavigationPane.prototype.onInitialEnd = function (args) {\n        this.onInit();\n        this.addChild(args.files, getValue('_fm_id', args.cwd), false);\n    };\n    NavigationPane.prototype.onFinalizeEnd = function (args) {\n        this.onInit();\n        var id = getValue('_fm_id', args.cwd);\n        this.removeChildNodes(id);\n        this.addChild(args.files, id, false);\n        this.treeObj.selectedNodes = [this.parent.pathId[this.parent.pathId.length - 1]];\n    };\n    NavigationPane.prototype.onCreateEnd = function (args) {\n        this.updateTree(args);\n    };\n    NavigationPane.prototype.onSelectedData = function () {\n        if (this.parent.activeModule === 'navigationpane') {\n            this.updateItemData();\n        }\n    };\n    NavigationPane.prototype.onDeleteInit = function () {\n        if (this.parent.activeModule === 'navigationpane') {\n            this.updateActionData();\n            var name_1 = getValue('name', this.parent.itemData[0]);\n            Delete(this.parent, [name_1], this.parent.path, 'delete');\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onDeleteEnd = function (args) {\n        if (this.parent.activeModule === 'navigationpane') {\n            var selectedNode = this.treeObj.selectedNodes[0];\n            var selcetedEle = select('[data-uid=\"' + selectedNode + '\"]', this.treeObj.element);\n            var selectedNodeEle = closest(selcetedEle, '.' + CLS.LIST_PARENT).parentElement;\n            this.treeObj.selectedNodes = [selectedNodeEle.getAttribute('data-uid')];\n            this.treeObj.dataBind();\n        }\n        this.updateTree(args);\n    };\n    NavigationPane.prototype.onRefreshEnd = function (args) {\n        this.updateTree(args);\n    };\n    NavigationPane.prototype.onRenameInit = function () {\n        if (this.parent.activeModule === 'navigationpane') {\n            this.updateRenameData();\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onRenameEndParent = function (args) {\n        var id = this.renameParent ? this.renameParent : this.parent.pathId[this.parent.pathId.length - 1];\n        this.expandTree = this.treeObj.expandedNodes.indexOf(this.treeObj.selectedNodes[0]) !== -1;\n        this.updateTreeNode(args, id);\n        this.parent.expandedId = null;\n        if (this.renameParent) {\n            this.renameParent = null;\n        }\n        else {\n            // eslint-disable-next-line\n            var resultData = [];\n            if (this.parent.hasId) {\n                resultData = new DataManager(this.treeObj.getTreeData()).\n                    executeLocal(new Query().where('id', 'equal', this.parent.renamedId, false));\n            }\n            else {\n                // eslint-disable-next-line\n                var nData = new DataManager(this.treeObj.getTreeData()).\n                    executeLocal(new Query().where(this.treeObj.fields.text, 'equal', this.parent.renameText, false));\n                if (nData.length > 0) {\n                    resultData = new DataManager(nData).\n                        executeLocal(new Query().where('_fm_pId', 'equal', id, false));\n                }\n            }\n            if (resultData.length > 0) {\n                this.isRenameParent = true;\n                var id_1 = getValue(this.treeObj.fields.id, resultData[0]);\n                this.treeObj.selectedNodes = [id_1];\n                this.treeObj.dataBind();\n            }\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onRenameEnd = function (args) {\n        if (this.parent.breadcrumbbarModule.searchObj.element.value === '' && !this.parent.isFiltered) {\n            this.updateTree(args);\n        }\n        else {\n            // eslint-disable-next-line\n            var data = this.treeObj.getTreeData();\n            // eslint-disable-next-line\n            var resultData = [];\n            if (this.parent.hasId) {\n                resultData = new DataManager(data).\n                    executeLocal(new Query().where('id', 'equal', this.parent.renamedId, false));\n            }\n            else {\n                // eslint-disable-next-line\n                var nData = new DataManager(data).\n                    executeLocal(new Query().where(this.treeObj.fields.text, 'equal', this.parent.currentItemText, false));\n                if (nData.length > 0) {\n                    resultData = new DataManager(nData).\n                        executeLocal(new Query().where('filterPath', 'equal', this.parent.filterPath, false));\n                }\n            }\n            if (resultData.length > 0) {\n                this.renameParent = getValue(this.treeObj.fields.parentID, resultData[0]);\n                this.parent.expandedId = this.renameParent;\n                this.parent.itemData = this.getTreeData(this.renameParent);\n                read(this.parent, events.renameEndParent, this.parent.filterPath.replace(/\\\\/g, '/'));\n            }\n        }\n    };\n    NavigationPane.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName() && e.module !== 'common') {\n            /* istanbul ignore next */\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(e.newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'allowDragAndDrop':\n                    this.addDragDrop();\n                    break;\n                case 'navigationPaneSettings':\n                    read(this.parent, events.finalizeEnd, '/');\n                    break;\n            }\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onDownLoadInit = function () {\n        this.doDownload();\n    };\n    NavigationPane.prototype.onSelectionChanged = function (e) {\n        this.treeObj.selectedNodes = [e.selectedNode];\n    };\n    NavigationPane.prototype.onClearPathInit = function (e) {\n        this.removeChildNodes(e.selectedNode);\n    };\n    NavigationPane.prototype.onDragEnd = function (args) {\n        var moveNames = [];\n        if (this.parent.isPasteError || this.parent.isSearchDrag) {\n            moveNames = this.getMoveNames(args.files, this.parent.isSearchDrag, this.parent.dragPath);\n        }\n        else {\n            moveNames = this.moveNames;\n        }\n        this.treeObj.removeNodes(moveNames);\n    };\n    // eslint-disable-next-line\n    NavigationPane.prototype.getMoveNames = function (files, flag, path) {\n        var moveNames = [];\n        for (var i = 0; i < files.length; i++) {\n            if (!files[i].isFile) {\n                if (!this.parent.hasId) {\n                    var name_2 = (files[i].previousName);\n                    if (flag) {\n                        path = path + files[i].previousName;\n                        var index = path.lastIndexOf('/');\n                        name_2 = path.substring(index + 1);\n                        path = path.substring(0, index + 1);\n                    }\n                    // eslint-disable-next-line\n                    var resultData = new DataManager(this.treeObj.getTreeData()).\n                        executeLocal(new Query().where(this.treeObj.fields.text, 'equal', name_2, false));\n                    for (var j = 0; j < resultData.length; j++) {\n                        var fPath = getValue('filterPath', resultData[j]);\n                        fPath = fPath.replace(/\\\\/g, '/');\n                        if (fPath === path) {\n                            moveNames.push(getValue(this.treeObj.fields.id, resultData[j]));\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return moveNames;\n    };\n    NavigationPane.prototype.onCutEnd = function (args) {\n        var moveNames = [];\n        if (this.parent.isPasteError || this.parent.isSearchCut) {\n            this.moveNames = this.getMoveNames(args.files, this.parent.isSearchCut, this.parent.targetPath);\n        }\n        else {\n            moveNames = this.moveNames;\n        }\n        this.treeObj.removeNodes(moveNames);\n    };\n    /* istanbul ignore next */\n    // eslint-disable-next-line\n    NavigationPane.prototype.selectResultNode = function (resultObj) {\n        if (!this.parent.hasId) {\n            var path = getValue('filterPath', resultObj);\n            var itemname = getValue('name', resultObj);\n            // eslint-disable-next-line\n            var data = new DataManager(this.treeObj.getTreeData()).\n                executeLocal(new Query().where(this.treeObj.fields.text, 'equal', itemname, false));\n            if (data.length > 0) {\n                // eslint-disable-next-line\n                var resultData = new DataManager(data).\n                    executeLocal(new Query().where('filterPath', 'equal', path, false));\n                if (resultData.length > 0) {\n                    var id = getValue(this.treeObj.fields.id, resultData[0]);\n                    this.treeObj.selectedNodes = [id];\n                    this.treeObj.dataBind();\n                }\n            }\n        }\n        else {\n            this.treeObj.selectedNodes = [getValue('_fm_id', resultObj)];\n            this.treeObj.dataBind();\n        }\n    };\n    NavigationPane.prototype.onDropPath = function (args) {\n        this.onpasteEnd(args);\n        this.selectResultNode(this.parent.dropData);\n        this.parent.isDropEnd = !this.parent.isPasteError;\n    };\n    NavigationPane.prototype.onpasteEnd = function (args) {\n        // eslint-disable-next-line\n        var resultData = [];\n        if (this.parent.hasId) {\n            resultData = new DataManager(this.treeObj.getTreeData()).\n                executeLocal(new Query().where('id', 'equal', getValue('id', args.cwd), false));\n        }\n        else {\n            // eslint-disable-next-line\n            var nData = new DataManager(this.treeObj.getTreeData()).\n                executeLocal(new Query().where(this.treeObj.fields.text, 'equal', getValue('name', args.cwd), false));\n            if (nData.length > 0) {\n                resultData = new DataManager(nData).\n                    executeLocal(new Query().where('filterPath', 'equal', getValue('filterPath', args.cwd), false));\n            }\n        }\n        if (resultData.length > 0) {\n            var id = getValue(this.treeObj.fields.id, resultData[0]);\n            var toExpand = this.treeObj.expandedNodes.indexOf(id) === -1;\n            this.removeChildNodes(id);\n            this.addChild(args.files, id, toExpand);\n        }\n        this.parent.expandedId = null;\n        this.onPathChanged(args);\n        if (this.parent.isDragDrop) {\n            this.checkDropPath(args);\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.checkDropPath = function (args) {\n        if (this.parent.hasId) {\n            this.parent.isDropEnd = !this.parent.isPasteError;\n            readDropPath(this.parent);\n            return;\n        }\n        if ((this.parent.dropPath.indexOf(getDirectoryPath(this.parent, args)) === -1)) {\n            this.parent.isDropEnd = false;\n            readDropPath(this.parent);\n        }\n        else {\n            this.parent.isDropEnd = !this.parent.isPasteError;\n        }\n    };\n    NavigationPane.prototype.onpasteInit = function () {\n        if (this.parent.activeModule === this.getModuleName()) {\n            this.updateItemData();\n        }\n        this.moveNames = [];\n        // eslint-disable-next-line\n        var obj = this.parent.isDragDrop ? this.parent.dragData : this.parent.actionRecords;\n        for (var i = 0; i < obj.length; i++) {\n            if (getValue('isFile', obj[i]) === false) {\n                this.moveNames.push(getValue('_fm_id', obj[i]));\n            }\n        }\n    };\n    NavigationPane.prototype.oncutCopyInit = function () {\n        if (this.parent.activeModule === this.getModuleName()) {\n            this.parent.activeRecords = this.getTreeData(this.treeObj.selectedNodes[0]);\n            this.parent.activeElements = [this.activeNode];\n        }\n    };\n    NavigationPane.prototype.addEventListener = function () {\n        this.parent.on(events.modelChanged, this.onPropertyChanged, this);\n        this.parent.on(events.downloadInit, this.onDownLoadInit, this);\n        this.parent.on(events.initialEnd, this.onInitialEnd, this);\n        this.parent.on(events.finalizeEnd, this.onFinalizeEnd, this);\n        this.parent.on(events.pathChanged, this.onPathChanged, this);\n        this.parent.on(events.pasteEnd, this.onpasteEnd, this);\n        this.parent.on(events.cutEnd, this.onCutEnd, this);\n        this.parent.on(events.pasteInit, this.onpasteInit, this);\n        this.parent.on(events.nodeExpand, this.onNodeExpanded, this);\n        this.parent.on(events.createEnd, this.onCreateEnd, this);\n        this.parent.on(events.selectedData, this.onSelectedData, this);\n        this.parent.on(events.deleteInit, this.onDeleteInit, this);\n        this.parent.on(events.deleteEnd, this.onDeleteEnd, this);\n        this.parent.on(events.refreshEnd, this.onRefreshEnd, this);\n        this.parent.on(events.updateTreeSelection, this.onSelectionChanged, this);\n        this.parent.on(events.openInit, this.onOpenInit, this);\n        this.parent.on(events.openEnd, this.onOpenEnd, this);\n        this.parent.on(events.destroy, this.destroy, this);\n        this.parent.on(events.renameInit, this.onRenameInit, this);\n        this.parent.on(events.renameEnd, this.onRenameEnd, this);\n        this.parent.on(events.renameEndParent, this.onRenameEndParent, this);\n        this.parent.on(events.clearPathInit, this.onClearPathInit, this);\n        this.parent.on(events.cutCopyInit, this.oncutCopyInit, this);\n        this.parent.on(events.dropInit, this.onDropInit, this);\n        this.parent.on(events.menuItemData, this.onMenuItemData, this);\n        this.parent.on(events.dragEnd, this.onDragEnd, this);\n        this.parent.on(events.dragging, this.onDragging, this);\n        this.parent.on(events.dropPath, this.onDropPath, this);\n        this.parent.on(events.detailsInit, this.onDetailsInit, this);\n        this.parent.on(events.pathDrag, this.onPathDrag, this);\n    };\n    NavigationPane.prototype.removeEventListener = function () {\n        this.parent.off(events.initialEnd, this.onInitialEnd);\n        this.parent.off(events.downloadInit, this.onDownLoadInit);\n        this.parent.off(events.finalizeEnd, this.onFinalizeEnd);\n        this.parent.off(events.selectedData, this.onSelectedData);\n        this.parent.off(events.modelChanged, this.onPropertyChanged);\n        this.parent.off(events.pathChanged, this.onPathChanged);\n        this.parent.off(events.pasteEnd, this.onpasteEnd);\n        this.parent.off(events.cutEnd, this.onCutEnd);\n        this.parent.off(events.pasteInit, this.onpasteInit);\n        this.parent.off(events.updateTreeSelection, this.onSelectionChanged);\n        this.parent.off(events.nodeExpand, this.onNodeExpanded);\n        this.parent.off(events.createEnd, this.onCreateEnd);\n        this.parent.off(events.refreshEnd, this.onRefreshEnd);\n        this.parent.off(events.openInit, this.onOpenInit);\n        this.parent.off(events.openEnd, this.onOpenEnd);\n        this.parent.off(events.destroy, this.destroy);\n        this.parent.off(events.renameInit, this.onRenameInit);\n        this.parent.off(events.renameEnd, this.onRenameEnd);\n        this.parent.off(events.renameEndParent, this.onRenameEndParent);\n        this.parent.off(events.clearPathInit, this.onClearPathInit);\n        this.parent.off(events.deleteInit, this.onDeleteInit);\n        this.parent.off(events.deleteEnd, this.onDeleteEnd);\n        this.parent.off(events.cutCopyInit, this.oncutCopyInit);\n        this.parent.off(events.dropInit, this.onDropInit);\n        this.parent.off(events.dragEnd, this.onDragEnd);\n        this.parent.off(events.dragging, this.onDragging);\n        this.parent.off(events.dropPath, this.onDropPath);\n        this.parent.off(events.detailsInit, this.onDetailsInit);\n        this.parent.off(events.menuItemData, this.onMenuItemData);\n        this.parent.off(events.pathDrag, this.onPathDrag);\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onDetailsInit = function () {\n        if (this.parent.activeModule === this.getModuleName()) {\n            // eslint-disable-next-line\n            var dataobj = this.getTreeData(this.treeObj.selectedNodes[0]);\n            this.parent.itemData = dataobj;\n        }\n    };\n    // eslint-disable-next-line\n    NavigationPane.prototype.onMenuItemData = function (args) {\n        if (this.parent.activeModule === this.getModuleName()) {\n            var liEle = closest(args.target, 'li');\n            this.parent.itemData = this.getTreeData(liEle.getAttribute('data-uid'));\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onDragging = function (args) {\n        var ele = closest(args.target, 'li');\n        if (ele.classList.contains('e-node-collapsed')) {\n            this.isDrag = true;\n            var level = parseInt(ele.getAttribute('aria-level'), 10);\n            this.treeObj.expandAll([ele.getAttribute('data-uid')], level + 1);\n            this.isDrag = false;\n        }\n    };\n    NavigationPane.prototype.onDropInit = function (args) {\n        if (this.parent.targetModule === this.getModuleName()) {\n            var dropLi = closest(args.target, 'li');\n            this.parent.dropData = this.getTreeData(dropLi)[0];\n            this.parent.dropPath = this.getDropPath(dropLi, getValue('name', this.parent.dropData));\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} - returns the module name.\n     * @private\n     */\n    NavigationPane.prototype.getModuleName = function () {\n        return 'navigationpane';\n    };\n    NavigationPane.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeEventListener();\n        if (this.treeObj) {\n            this.unWireEvents();\n            this.treeObj.destroy();\n        }\n    };\n    NavigationPane.prototype.wireEvents = function () {\n        this.keyboardModule = new KeyboardEvents(this.treeObj.element, {\n            keyAction: this.keyDown.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    };\n    NavigationPane.prototype.unWireEvents = function () {\n        this.keyboardModule.destroy();\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.keyDown = function (e) {\n        var action = e.action;\n        switch (action) {\n            case 'altEnter':\n                this.parent.notify(events.detailsInit, {});\n                GetDetails(this.parent, [], this.parent.path, 'details');\n                break;\n            case 'esc':\n                removeActive(this.parent);\n                break;\n            case 'del':\n                this.updateItemData();\n                if (!hasEditAccess(this.parent.itemData[0])) {\n                    createDeniedDialog(this.parent, this.parent.itemData[0], events.permissionEdit);\n                }\n                else {\n                    this.removeNodes = [];\n                    createDialog(this.parent, 'Delete');\n                }\n                break;\n            case 'ctrlC':\n                copyFiles(this.parent);\n                break;\n            case 'ctrlV':\n                this.parent.folderPath = '';\n                pasteHandler(this.parent);\n                break;\n            case 'ctrlX':\n                cutFiles(this.parent);\n                break;\n            case 'shiftF10':\n                this.updateItemData();\n                if (!hasDownloadAccess(this.parent.itemData[0])) {\n                    createDeniedDialog(this.parent, this.parent.itemData[0], events.permissionDownload);\n                    return;\n                }\n                if (this.parent.selectedItems.length !== 0) {\n                    this.doDownload();\n                }\n                break;\n            case 'f2':\n                if (this.parent.selectedItems.length === 0) {\n                    // eslint-disable-next-line\n                    var data = this.getTreeData(this.treeObj.selectedNodes[0])[0];\n                    if (!hasEditAccess(data)) {\n                        createDeniedDialog(this.parent, data, events.permissionEdit);\n                    }\n                    else {\n                        this.updateRenameData();\n                        createDialog(this.parent, 'Rename');\n                    }\n                }\n                break;\n        }\n    };\n    // eslint-disable-next-line\n    NavigationPane.prototype.getTreeData = function (args) {\n        // eslint-disable-next-line\n        var data = this.treeObj.getTreeData(args);\n        for (var i = 0; i < data.length; i++) {\n            if (isNOU(getValue('hasChild', data[i]))) {\n                setValue('hasChild', false, data[i]);\n            }\n        }\n        return data;\n    };\n    NavigationPane.prototype.updateRenameData = function () {\n        this.updateItemData();\n        this.parent.currentItemText = getValue('name', this.parent.itemData[0]);\n    };\n    NavigationPane.prototype.updateItemData = function () {\n        // eslint-disable-next-line\n        var data = this.getTreeData(this.treeObj.selectedNodes[0])[0];\n        this.parent.itemData = [data];\n        this.parent.isFile = false;\n    };\n    NavigationPane.prototype.updateActionData = function () {\n        this.updateItemData();\n        var newPath = getParentPath(this.parent.path);\n        this.parent.setProperties({ path: newPath }, true);\n        this.parent.pathId.pop();\n        this.parent.pathNames.pop();\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.doDownload = function () {\n        var newPath = getParentPath(this.parent.path);\n        var itemId = this.treeObj.selectedNodes[0];\n        var name = (itemId === this.parent.pathId[0]) ? '' : getValue('name', this.parent.itemData[0]);\n        Download(this.parent, newPath, [name]);\n    };\n    return NavigationPane;\n}());\nexport { NavigationPane };\n"]},"metadata":{},"sourceType":"module"}