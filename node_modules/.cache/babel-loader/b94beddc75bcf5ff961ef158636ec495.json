{"ast":null,"code":"import * as CONSTANT from '../base/constant';\nimport { InsertHtml } from './inserthtml';\n/**\n * Insert a Text Node or Text\n *\n * @hidden\n\n */\n\nvar InsertTextExec =\n/** @class */\nfunction () {\n  /**\n   * Constructor for creating the InsertText plugin\n   *\n   * @param {EditorManager} parent - specifies the parent element\n   * @hidden\n    */\n  function InsertTextExec(parent) {\n    this.parent = parent;\n    this.addEventListener();\n  }\n\n  InsertTextExec.prototype.addEventListener = function () {\n    this.parent.observer.on(CONSTANT.INSERT_TEXT_TYPE, this.insertText, this);\n  };\n\n  InsertTextExec.prototype.insertText = function (e) {\n    var node = document.createTextNode(e.value);\n    InsertHtml.Insert(this.parent.currentDocument, node);\n\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n\n  return InsertTextExec;\n}();\n\nexport { InsertTextExec };","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/insert-text.js"],"names":["CONSTANT","InsertHtml","InsertTextExec","parent","addEventListener","prototype","observer","on","INSERT_TEXT_TYPE","insertText","e","node","document","createTextNode","value","Insert","currentDocument","callBack","requestType","subCommand","editorMode","event","range","nodeSelection","getRange","elements","getSelectedNodes"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,cAAc;AAAG;AAAe,YAAY;AAC5C;AACJ;AACA;AACA;AACA;AACA;AAEI,WAASA,cAAT,CAAwBC,MAAxB,EAAgC;AAC5B,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,gBAAL;AACH;;AACDF,EAAAA,cAAc,CAACG,SAAf,CAAyBD,gBAAzB,GAA4C,YAAY;AACpD,SAAKD,MAAL,CAAYG,QAAZ,CAAqBC,EAArB,CAAwBP,QAAQ,CAACQ,gBAAjC,EAAmD,KAAKC,UAAxD,EAAoE,IAApE;AACH,GAFD;;AAGAP,EAAAA,cAAc,CAACG,SAAf,CAAyBI,UAAzB,GAAsC,UAAUC,CAAV,EAAa;AAC/C,QAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,CAAC,CAACI,KAA1B,CAAX;AACAb,IAAAA,UAAU,CAACc,MAAX,CAAkB,KAAKZ,MAAL,CAAYa,eAA9B,EAA+CL,IAA/C;;AACA,QAAID,CAAC,CAACO,QAAN,EAAgB;AACZP,MAAAA,CAAC,CAACO,QAAF,CAAW;AACPC,QAAAA,WAAW,EAAER,CAAC,CAACS,UADR;AAEPC,QAAAA,UAAU,EAAE,MAFL;AAGPC,QAAAA,KAAK,EAAEX,CAAC,CAACW,KAHF;AAIPC,QAAAA,KAAK,EAAE,KAAKnB,MAAL,CAAYoB,aAAZ,CAA0BC,QAA1B,CAAmC,KAAKrB,MAAL,CAAYa,eAA/C,CAJA;AAKPS,QAAAA,QAAQ,EAAE,KAAKtB,MAAL,CAAYoB,aAAZ,CAA0BG,gBAA1B,CAA2C,KAAKvB,MAAL,CAAYa,eAAvD;AALH,OAAX;AAOH;AACJ,GAZD;;AAaA,SAAOd,cAAP;AACH,CA7BmC,EAApC;;AA8BA,SAASA,cAAT","sourcesContent":["import * as CONSTANT from '../base/constant';\nimport { InsertHtml } from './inserthtml';\n/**\n * Insert a Text Node or Text\n *\n * @hidden\n\n */\nvar InsertTextExec = /** @class */ (function () {\n    /**\n     * Constructor for creating the InsertText plugin\n     *\n     * @param {EditorManager} parent - specifies the parent element\n     * @hidden\n\n     */\n    function InsertTextExec(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    InsertTextExec.prototype.addEventListener = function () {\n        this.parent.observer.on(CONSTANT.INSERT_TEXT_TYPE, this.insertText, this);\n    };\n    InsertTextExec.prototype.insertText = function (e) {\n        var node = document.createTextNode(e.value);\n        InsertHtml.Insert(this.parent.currentDocument, node);\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    return InsertTextExec;\n}());\nexport { InsertTextExec };\n"]},"metadata":{},"sourceType":"module"}