{"ast":null,"code":"import _slicedToArray from\"/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{makeStyles}from'@material-ui/styles';import{Button}from'@material-ui/core';import{DataGrid,useGridSlotComponentProps}from'@material-ui/data-grid';import{Pagination}from'@material-ui/lab';import{useFetchApi}from\"../../../utils/hooks\";import{USERS_ORDERS}from'../../../utils/constants';import{timeToStr,UrlQuery}from'../../../utils/utils';import{useHistory,useParams}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=makeStyles({root:{// display: 'flex',\nmargin:'0 auto'}});function CustomPagination(){var _useGridSlotComponent=useGridSlotComponentProps(),state=_useGridSlotComponent.state,apiRef=_useGridSlotComponent.apiRef;var classes=useStyles();return/*#__PURE__*/_jsx(Pagination,{className:classes.root,shape:\"rounded\",color:\"primary\"// variant=\"contained\"\n,count:state.pagination.pageCount,page:state.pagination.page+1,onChange:function onChange(event,value){return apiRef.current.setPage(value-1);}});}function DepositDataGrid(props){var _data$items;var history=useHistory();var columns=[{field:'tracking_code',headerName:'شناسه',flex:1,type:'string',sortable:false,headerClassName:'grid-header',headerAlign:'center',align:'center',renderCell:function renderCell(params){var _params$row;return\"\".concat((_params$row=params.row)===null||_params$row===void 0?void 0:_params$row.tracking_code.slice(0,8));}},{field:'type',headerName:'سمت سفارش',flex:1,sortable:false,headerClassName:'grid-header',headerAlign:'center',align:'center',renderCell:function renderCell(params){var _params$row2;return/*#__PURE__*/_jsx(\"div\",{className:\"d-flex\",children:((_params$row2=params.row)===null||_params$row2===void 0?void 0:_params$row2.trade_type)===\"sell\"?/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"\\u0641\\u0631\\u0648\\u0634\"}):/*#__PURE__*/_jsx(\"span\",{className:\"text-success\",children:\"\\u062E\\u0631\\u06CC\\u062F\"})});}},{field:'trade_type',headerName:'نوع سفارش',flex:1,sortable:false,headerClassName:'grid-header',headerAlign:'center',align:'center',renderCell:function renderCell(params){var _params$row3;return/*#__PURE__*/_jsx(\"div\",{className:\"d-flex\",children:((_params$row3=params.row)===null||_params$row3===void 0?void 0:_params$row3.trade_type)===\"limit\"?\"محدود\":\"سریع\"});}},{field:'dest_wallet',headerName:'نوع ارز',flex:0.5,sortable:false,headerClassName:'grid-header',headerAlign:'center',align:'center'},{field:'unit_price',headerName:'قیمت سفارش',// description: 'This column has a value getter and is not sortable.',\nsortable:false,align:'center',flex:1,headerClassName:'grid-header',headerAlign:'center'},{field:'average_unit_price',headerName:' میانگین قیمت سفارش',sortable:false,align:'center',flex:1,headerClassName:'grid-header',headerAlign:'center'},{field:'quantity',headerName:'مقدار',// description: 'This column has a value getter and is not sortable.',\nsortable:false,align:'center',flex:0.5,headerClassName:'grid-header',headerAlign:'center'},{field:'total',headerName:'مبلغ کل',// description: 'This column has a value getter and is not sortable.',\nsortable:false,align:'center',flex:1,headerClassName:'grid-header',headerAlign:'center',renderCell:function renderCell(params){var _params$row4,_params$row5;return parseInt(params===null||params===void 0?void 0:(_params$row4=params.row)===null||_params$row4===void 0?void 0:_params$row4.unit_price)*parseInt(params===null||params===void 0?void 0:(_params$row5=params.row)===null||_params$row5===void 0?void 0:_params$row5.quantity);}},{field:'progress',headerName:'پرشده',// description: 'This column has a value getter and is not sortable.',\nsortable:false,align:'center',flex:0.5,headerClassName:'grid-header',headerAlign:'center'},{field:'created_at',headerName:'تاریخ',// description: 'This column has a value getter and is not sortable.',\nsortable:false,align:'center',flex:1,headerClassName:'grid-header',headerAlign:'center',valueFormatter:function valueFormatter(data){return timeToStr(data.value,\"HH:mm  -   jYYYY/jMM/jDD\");}},{field:'status',headerName:'وضعیت',// description: 'This column has a value getter and is not sortable.',\nsortable:false,align:'center',flex:1,headerClassName:'grid-header',headerAlign:'center',renderCell:function renderCell(params){var _params$row6,_params$row7;return/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-end w-100\",children:(params===null||params===void 0?void 0:(_params$row6=params.row)===null||_params$row6===void 0?void 0:_params$row6.status)===\"in_progress\"?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:function onClick(){},className:\"ms-2 border-danger text-danger\",children:\"\\u0644\\u063A\\u0648 \\u0633\\u0641\\u0627\\u0631\\u0634\"}):(params===null||params===void 0?void 0:(_params$row7=params.row)===null||_params$row7===void 0?void 0:_params$row7.status)===\"success\"?'':''});}}];var _React$useState=React.useState({order:\"-updated_at\",size:10,page:0}),_React$useState2=_slicedToArray(_React$useState,2),params=_React$useState2[0],setParams=_React$useState2[1];var _useFetchApi=useFetchApi(undefined,[]),_useFetchApi2=_slicedToArray(_useFetchApi,2),_useFetchApi2$=_useFetchApi2[0],data=_useFetchApi2$.data,isLoading=_useFetchApi2$.isLoading,hasError=_useFetchApi2$.hasError,doFetch=_useFetchApi2[1];var _useParams=useParams(),id=_useParams.id;React.useEffect(function(){if(id){// doFetch(\"GET\", UrlQuery(USERS_ORDERS, {...params, owner_id: id}) )\n}},[params]);return/*#__PURE__*/_jsx(\"div\",{className:\"d-flex px-3 mt-3\",children:/*#__PURE__*/_jsx(\"div\",{style:{flexGrow:1,width:\"100%\",height:\"100%\"},children:/*#__PURE__*/_jsx(DataGrid,{style:{border:0},autoHeight:true,classes:{root:\"grid-header-wrapper-alt\"},rows:(_data$items=data===null||data===void 0?void 0:data.items)!==null&&_data$items!==void 0?_data$items:[],loading:isLoading,columns:columns,getRowClassName:function getRowClassName(params){return'grid-content-alt';},headerHeight:50,rowHeight:52,hideFooterPagination:true,isRowSelectable:false,components:{Pagination:CustomPagination},pageSize:10,rowCount:data===null||data===void 0?void 0:data.total,paginationMode:\"server\"// onPageChange={ (param) => doFetch(\"GET\", UrlQuery(USERS_ORDERS, {...params, owner_id: id, page: param}) )}\n,disableSelectionOnClick:true,disableColumnMenu:true})})});}export default DepositDataGrid;","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/users/userDeposits/dataGrid.js"],"names":["React","makeStyles","Button","DataGrid","useGridSlotComponentProps","Pagination","useFetchApi","USERS_ORDERS","timeToStr","UrlQuery","useHistory","useParams","useStyles","root","margin","CustomPagination","state","apiRef","classes","pagination","pageCount","page","event","value","current","setPage","DepositDataGrid","props","history","columns","field","headerName","flex","type","sortable","headerClassName","headerAlign","align","renderCell","params","row","tracking_code","slice","trade_type","parseInt","unit_price","quantity","valueFormatter","data","status","useState","order","size","setParams","undefined","isLoading","hasError","doFetch","id","useEffect","flexGrow","width","height","border","items","total"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button} from '@material-ui/core';\nimport { DataGrid, useGridSlotComponentProps } from '@material-ui/data-grid';\nimport {Pagination} from '@material-ui/lab';\nimport {useFetchApi} from \"../../../utils/hooks\";\nimport { USERS_ORDERS } from '../../../utils/constants';\nimport { timeToStr, UrlQuery } from '../../../utils/utils';\nimport { useHistory, useParams } from 'react-router-dom';\n\n\nconst useStyles = makeStyles({\n  root: {\n    // display: 'flex',\n    margin: '0 auto',\n  },\n});\n\nfunction CustomPagination() {\n  const { state, apiRef } = useGridSlotComponentProps();\n  const classes = useStyles();\n\n  return (\n    <Pagination\n      className={classes.root}\n      shape=\"rounded\"\n      color=\"primary\"\n      // variant=\"contained\"\n      count={state.pagination.pageCount}\n      page={state.pagination.page + 1}\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    />\n  );\n}\n\nfunction DepositDataGrid(props) {\n\n  const history = useHistory()\n\n  const columns = [\n    {\n      field: 'tracking_code',\n      headerName: 'شناسه',\n      flex:1,\n      type: 'string',\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (params) => `${params.row?.tracking_code.slice(0, 8)}`\n    },\n    {\n      field: 'type',\n      headerName: 'سمت سفارش',\n      flex:1,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (params) => (\n        <div className=\"d-flex\">\n             {params.row?.trade_type === \"sell\" ? <span className=\"text-danger\">فروش</span> : <span className=\"text-success\">خرید</span>}\n        </div>\n      )\n    },\n    {\n      field: 'trade_type',\n      headerName: 'نوع سفارش',\n      flex:1,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n      renderCell: (params) => (\n        <div className=\"d-flex\">\n             {params.row?.trade_type === \"limit\" ? \"محدود\" : \"سریع\"}\n        </div>\n      )\n    },\n    {\n      field: 'dest_wallet',\n      headerName: 'نوع ارز',\n      flex: 0.5,\n      sortable: false,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      align: 'center',\n    },\n    {\n      field: 'unit_price',\n      headerName: 'قیمت سفارش',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n    },\n    {\n      field: 'average_unit_price',\n      headerName: ' میانگین قیمت سفارش',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n    },\n    {\n      field: 'quantity',\n      headerName: 'مقدار',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 0.5,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n    },\n    {\n      field: 'total',\n      headerName: 'مبلغ کل',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (params) => parseInt(params?.row?.unit_price) * parseInt(params?.row?.quantity)\n    },\n    {\n      field: 'progress',\n      headerName: 'پرشده',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 0.5,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n    },\n    {\n      field: 'created_at',\n      headerName: 'تاریخ',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      valueFormatter: data => timeToStr(data.value, \"HH:mm  -   jYYYY/jMM/jDD\")\n    },\n    {\n      field: 'status',\n      headerName: 'وضعیت',\n      // description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      align: 'center',\n      flex: 1,\n      headerClassName: 'grid-header',\n      headerAlign: 'center',\n      renderCell: (params) => <div className=\"d-flex justify-content-end w-100\">\n        {\n          params?.row?.status === \"in_progress\" ? (<Button variant=\"outlined\" onClick={ () => {}} className=\"ms-2 border-danger text-danger\">لغو سفارش</Button>)\n          : (\n            params?.row?.status === \"success\" ? '' : ''\n          )\n        }\n      </div>\n    }\n  ];\n\n  const [params, setParams] = React.useState({order: \"-updated_at\", size: 10, page: 0})\n  const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, [])\n\n    const { id } = useParams()\n\n    React.useEffect( () => {\n      if (id){\n        // doFetch(\"GET\", UrlQuery(USERS_ORDERS, {...params, owner_id: id}) )\n      }\n    }, [params])\n\n    return (\n        <div className=\"d-flex px-3 mt-3\">\n            <div style={{ flexGrow: 1, width: \"100%\", height: \"100%\"}}>\n            <DataGrid\n                style={{border: 0}}\n                autoHeight\n                classes={{\n                    root: \"grid-header-wrapper-alt\"\n                }}\n                rows={data?.items ?? []}\n                loading={isLoading}\n                columns={columns}\n                getRowClassName={\n                    params => 'grid-content-alt'\n                }\n                headerHeight={50}\n                rowHeight={52}\n                hideFooterPagination\n                isRowSelectable={false}\n                components={{\n                    Pagination: CustomPagination\n                }}\n                pageSize={10}\n                rowCount={data?.total}\n                paginationMode=\"server\"\n                // onPageChange={ (param) => doFetch(\"GET\", UrlQuery(USERS_ORDERS, {...params, owner_id: id, page: param}) )}\n                disableSelectionOnClick\n                disableColumnMenu\n            />\n            </div>\n        </div>\n    )\n}\n\nexport default DepositDataGrid\n"]},"metadata":{},"sourceType":"module"}