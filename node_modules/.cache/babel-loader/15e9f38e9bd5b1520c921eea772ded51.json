{"ast":null,"code":"import { isNullOrUndefined as isNOU, detach } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\n/**\n * `EnterKey` module is used to handle enter key press actions.\n */\n\nvar EnterKeyAction =\n/** @class */\nfunction () {\n  function EnterKeyAction(parent) {\n    this.parent = parent;\n    this.addEventListener();\n  }\n\n  EnterKeyAction.prototype.addEventListener = function () {\n    this.parent.on(events.enterHandler, this.enterHandler, this);\n    this.parent.on(events.destroy, this.destroy, this);\n  };\n\n  EnterKeyAction.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n\n  EnterKeyAction.prototype.removeEventListener = function () {\n    this.parent.off(events.enterHandler, this.enterHandler);\n    this.parent.off(events.destroy, this.destroy);\n  };\n\n  EnterKeyAction.prototype.getRangeNode = function () {\n    this.range = this.parent.getRange();\n    this.startNode = this.range.startContainer.nodeName === '#text' ? this.range.startContainer.parentElement : this.range.startContainer;\n    this.endNode = this.range.endContainer.nodeName === '#text' ? this.range.endContainer.parentElement : this.range.endContainer;\n  };\n\n  EnterKeyAction.prototype.enterHandler = function (e) {\n    var _this = this;\n\n    this.getRangeNode();\n\n    if (e.args.which === 13 && e.args.code === 'Enter') {\n      if (isNOU(this.startNode.closest('LI')) && isNOU(this.endNode.closest('LI')) && isNOU(this.startNode.closest('TABLE')) && isNOU(this.endNode.closest('TABLE')) && isNOU(this.startNode.closest('PRE')) && isNOU(this.endNode.closest('PRE'))) {\n        var shiftKey_1 = e.args.shiftKey;\n        var actionBeginArgs = {\n          cancel: false,\n          name: events.actionBegin,\n          requestType: shiftKey_1 ? 'ShiftEnterAction' : 'EnterAction',\n          originalEvent: e.args\n        };\n        this.parent.trigger(events.actionBegin, actionBeginArgs, function (actionBeginArgs) {\n          if (!actionBeginArgs.cancel) {\n            if (!(_this.range.startOffset === _this.range.endOffset && _this.range.startContainer === _this.range.endContainer)) {\n              _this.range.deleteContents();\n\n              if (_this.range.startContainer.nodeName === '#text' && _this.range.startContainer.textContent.length === 0 && _this.range.startContainer.parentElement !== _this.parent.inputElement) {\n                if (_this.parent.enterKey === 'BR') {\n                  _this.range.startContainer.parentElement.innerHTML = '&#8203;';\n                } else {\n                  _this.range.startContainer.parentElement.innerHTML = '<br>';\n                }\n              } else if (_this.range.startContainer === _this.parent.inputElement && _this.range.startContainer.innerHTML === '') {\n                _this.range.startContainer.innerHTML = '<br>';\n                var focusElem = _this.range.startContainer.childNodes[_this.range.startOffset];\n\n                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, 0);\n              } else if (_this.parent.inputElement === _this.range.startContainer) {\n                var focusElem = _this.range.startContainer.childNodes[_this.range.startOffset];\n\n                if (focusElem.nodeName === '#text' && focusElem.textContent.length === 0) {\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, focusElem.previousSibling.textContent.length);\n                } else {\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, focusElem.textContent.length >= 0 ? 0 : 1);\n\n                  if (focusElem.previousSibling.textContent.length === 0) {\n                    detach(focusElem.previousSibling);\n                  } else if (focusElem.textContent.length === 0) {\n                    var currentFocusElem = focusElem.previousSibling.lastChild;\n\n                    while (currentFocusElem.nodeName !== '#text') {\n                      currentFocusElem = currentFocusElem.lastChild;\n                    }\n\n                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), currentFocusElem, currentFocusElem.textContent.length);\n\n                    detach(focusElem);\n                  } else if (_this.parent.enterKey !== 'BR' && focusElem.previousSibling.textContent.length !== 0 && focusElem.textContent.length !== 0) {\n                    e.args.preventDefault();\n                    return;\n                  }\n                }\n\n                _this.getRangeNode();\n              }\n            }\n\n            if (_this.range.startContainer === _this.range.endContainer && _this.range.startOffset === _this.range.endOffset && _this.range.startContainer === _this.parent.inputElement) {\n              _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.range.startContainer.childNodes[_this.range.startOffset], 0);\n\n              _this.getRangeNode();\n            }\n\n            if (_this.parent.enterKey === 'P' && !shiftKey_1 || _this.parent.enterKey === 'DIV' && !shiftKey_1 || _this.parent.shiftEnterKey === 'P' && shiftKey_1 || _this.parent.shiftEnterKey === 'DIV' && shiftKey_1) {\n              var nearBlockNode = _this.parent.formatter.editorManager.domNode.blockParentNode(_this.startNode);\n\n              var isImageNode = false;\n\n              if (_this.range.startOffset === 0 && _this.range.endOffset === 0 && !(!isNOU(_this.range.startContainer.previousSibling) && (_this.range.startContainer.previousSibling.nodeName === 'IMG' || _this.range.startContainer.previousSibling.nodeName === 'BR'))) {\n                var isNearBlockLengthZero = void 0;\n                var newElem = void 0;\n\n                if (_this.range.startContainer.nodeName === 'IMG') {\n                  newElem = _this.createInsertElement(shiftKey_1);\n                  isImageNode = true;\n                  isNearBlockLengthZero = false;\n                } else {\n                  if (nearBlockNode.textContent.length !== 0) {\n                    newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, false).cloneNode(true);\n                    isNearBlockLengthZero = false;\n                  } else {\n                    newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, true).cloneNode(true);\n                    isNearBlockLengthZero = true;\n                  }\n                }\n\n                var insertElem = _this.createInsertElement(shiftKey_1);\n\n                while (newElem.firstChild) {\n                  insertElem.appendChild(newElem.firstChild);\n                }\n\n                nearBlockNode.parentElement.insertBefore(insertElem, nearBlockNode);\n\n                if (!isNearBlockLengthZero) {\n                  var currentFocusElem = insertElem;\n                  var finalFocusElem = void 0;\n\n                  while (!isNOU(currentFocusElem) && currentFocusElem.nodeName !== '#text') {\n                    finalFocusElem = currentFocusElem;\n                    currentFocusElem = currentFocusElem.lastChild;\n                  }\n\n                  finalFocusElem.innerHTML = '<br>';\n\n                  if (!isImageNode) {\n                    detach(nearBlockNode);\n                  }\n                }\n\n                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), insertElem.nextElementSibling, 0);\n              } else if (nearBlockNode.textContent.length === 0 && !(!isNOU(nearBlockNode.childNodes[0]) && nearBlockNode.childNodes[0].nodeName === 'IMG')) {\n                if (!isNOU(nearBlockNode.children[0]) && nearBlockNode.children[0].tagName !== 'BR') {\n                  var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, false).cloneNode(true);\n\n                  _this.parent.formatter.editorManager.domNode.insertAfter(newElem, nearBlockNode);\n\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), newElem, newElem.textContent.length >= 0 ? 0 : 1);\n                } else {\n                  var insertElem = _this.createInsertElement(shiftKey_1);\n\n                  insertElem.innerHTML = '<br>';\n\n                  _this.parent.formatter.editorManager.domNode.insertAfter(insertElem, nearBlockNode);\n\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), insertElem, 0);\n                }\n              } else {\n                var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, true);\n\n                if (!isNOU(newElem.childNodes[0]) && newElem.childNodes[0].nodeName === '#text' && newElem.childNodes[0].textContent.length === 0) {\n                  detach(newElem.childNodes[0]);\n                }\n\n                if (newElem.textContent.trim().length === 0) {\n                  var brElm = _this.parent.createElement('br');\n\n                  _this.startNode.appendChild(brElm);\n\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.startNode, 0);\n                }\n\n                if ((_this.parent.enterKey === 'P' || _this.parent.enterKey === 'DIV') && !shiftKey_1 || (_this.parent.shiftEnterKey === 'DIV' || _this.parent.shiftEnterKey === 'P') && shiftKey_1) {\n                  var insertElm = _this.createInsertElement(shiftKey_1);\n\n                  while (newElem.firstChild) {\n                    insertElm.appendChild(newElem.firstChild);\n                  }\n\n                  _this.parent.formatter.editorManager.domNode.insertAfter(insertElm, newElem);\n\n                  detach(newElem);\n\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode) ? insertElm : _this.startNode, 0);\n                }\n              }\n\n              e.args.preventDefault();\n            }\n\n            if (_this.parent.enterKey === 'BR' && !shiftKey_1 || _this.parent.shiftEnterKey === 'BR' && shiftKey_1) {\n              var currentParent = void 0;\n\n              if (!_this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode)) {\n                var currentNode = _this.startNode;\n                var previousNode = currentNode;\n\n                while (!_this.parent.formatter.editorManager.domNode.isBlockNode(currentNode)) {\n                  previousNode = currentNode;\n                  currentNode = currentNode.parentElement;\n                }\n\n                currentParent = currentNode === _this.parent.inputElement ? previousNode : currentNode;\n              } else {\n                currentParent = _this.startNode;\n              }\n\n              var isEmptyBrInserted = false;\n              var currentParentLastChild = currentParent.lastChild;\n\n              while (!isNOU(currentParentLastChild) && !(currentParentLastChild.nodeName === '#text')) {\n                currentParentLastChild = currentParentLastChild.lastChild;\n              }\n\n              var isLastNodeLength = _this.range.startContainer === currentParentLastChild ? _this.range.startContainer.textContent.length : currentParent.textContent.length;\n\n              if (currentParent !== _this.parent.inputElement && _this.parent.formatter.editorManager.domNode.isBlockNode(currentParent) && _this.range.startOffset === _this.range.endOffset && _this.range.startOffset === isLastNodeLength) {\n                var outerBRElem = _this.parent.createElement('br');\n\n                _this.parent.formatter.editorManager.domNode.insertAfter(outerBRElem, currentParent);\n\n                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), outerBRElem, 0);\n              } else if (!isNOU(currentParent) && currentParent !== _this.parent.inputElement && currentParent.nodeName !== 'BR') {\n                if (currentParent.textContent.trim().length === 0 || currentParent.textContent.trim().length === 1 && currentParent.textContent.charCodeAt(0) === 8203) {\n                  var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, currentParent, true).cloneNode(true);\n\n                  _this.parent.formatter.editorManager.domNode.insertAfter(newElem, currentParent);\n\n                  var outerBRElem = _this.parent.createElement('br');\n\n                  newElem.parentElement.insertBefore(outerBRElem, newElem);\n\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), newElem, 0);\n                } else {\n                  var newElem = void 0;\n\n                  var outerBRElem = _this.parent.createElement('br');\n\n                  if (_this.range.startOffset === 0 && _this.range.endOffset === 0 && !isNOU(currentParent.previousSibling) && currentParent.previousSibling.nodeName === 'BR') {\n                    newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, currentParent, false).cloneNode(true);\n\n                    _this.parent.formatter.editorManager.domNode.insertAfter(outerBRElem, currentParent);\n\n                    _this.insertFocusContent();\n\n                    var currentFocusElem = outerBRElem.nextSibling;\n\n                    while (!isNOU(currentFocusElem) && currentFocusElem.nodeName !== '#text') {\n                      currentFocusElem = currentFocusElem.lastChild;\n                    }\n\n                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), currentFocusElem, 0);\n\n                    isEmptyBrInserted = true;\n                  } else {\n                    _this.insertBRElement();\n                  }\n                }\n              } else {\n                _this.insertBRElement();\n              }\n\n              e.args.preventDefault();\n            }\n\n            _this.parent.trigger(events.actionComplete, {\n              requestType: shiftKey_1 ? 'ShiftEnterAction' : 'EnterAction',\n              args: e.args\n            });\n          }\n        });\n      }\n    }\n  };\n\n  EnterKeyAction.prototype.insertBRElement = function () {\n    var isEmptyBrInserted = false;\n    var brElm = this.parent.createElement('br');\n\n    if (this.startNode.nodeName === 'BR' && this.endNode.nodeName === 'BR' && this.range.startOffset === 0 && this.range.startOffset === this.range.endOffset) {\n      this.parent.formatter.editorManager.domNode.insertAfter(brElm, this.startNode);\n      isEmptyBrInserted = true;\n    } else {\n      if (this.startNode === this.parent.inputElement && !isNOU(this.range.startContainer.previousSibling) && this.range.startContainer.previousSibling.nodeName === 'BR' && this.range.startContainer.textContent.length === 0) {\n        isEmptyBrInserted = true;\n      }\n\n      this.range.insertNode(brElm);\n    }\n\n    if (isEmptyBrInserted || !isNOU(brElm.nextElementSibling) && brElm.nextElementSibling.tagName === 'BR' || !isNOU(brElm.nextSibling) && brElm.nextSibling.textContent.length > 0) {\n      this.parent.formatter.editorManager.nodeSelection.setCursorPoint(this.parent.contentModule.getDocument(), !isNOU(brElm.nextSibling) ? brElm.nextSibling : brElm, 0);\n      isEmptyBrInserted = false;\n    } else {\n      var brElm2 = this.parent.createElement('br');\n      this.range.insertNode(brElm2);\n      this.parent.formatter.editorManager.nodeSelection.setCursorPoint(this.parent.contentModule.getDocument(), brElm, 0);\n    }\n  };\n\n  EnterKeyAction.prototype.insertFocusContent = function () {\n    if (this.range.startContainer.textContent.length === 0) {\n      if (this.range.startContainer.nodeName === '#text') {\n        this.range.startContainer.parentElement.innerHTML = '&#8203;';\n      } else {\n        this.range.startContainer.innerHTML = '&#8203;';\n      }\n    }\n  };\n\n  EnterKeyAction.prototype.createInsertElement = function (shiftKey) {\n    var insertElem;\n\n    if (this.parent.enterKey === 'DIV' && !shiftKey || this.parent.shiftEnterKey === 'DIV' && shiftKey) {\n      insertElem = this.parent.createElement('div');\n    } else if (this.parent.enterKey === 'P' && !shiftKey || this.parent.shiftEnterKey === 'P' && shiftKey) {\n      insertElem = this.parent.createElement('p');\n    }\n\n    return insertElem;\n  };\n\n  return EnterKeyAction;\n}();\n\nexport { EnterKeyAction };","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/actions/enter-key.js"],"names":["isNullOrUndefined","isNOU","detach","events","EnterKeyAction","parent","addEventListener","prototype","on","enterHandler","destroy","removeEventListener","off","getRangeNode","range","getRange","startNode","startContainer","nodeName","parentElement","endNode","endContainer","e","_this","args","which","code","closest","shiftKey_1","shiftKey","actionBeginArgs","cancel","name","actionBegin","requestType","originalEvent","trigger","startOffset","endOffset","deleteContents","textContent","length","inputElement","enterKey","innerHTML","focusElem","childNodes","formatter","editorManager","nodeSelection","setCursorPoint","contentModule","getDocument","previousSibling","currentFocusElem","lastChild","preventDefault","shiftEnterKey","nearBlockNode","domNode","blockParentNode","isImageNode","isNearBlockLengthZero","newElem","createInsertElement","nodeCutter","SplitNode","cloneNode","insertElem","firstChild","appendChild","insertBefore","finalFocusElem","nextElementSibling","children","tagName","insertAfter","trim","brElm","createElement","insertElm","isBlockNode","currentParent","currentNode","previousNode","isEmptyBrInserted","currentParentLastChild","isLastNodeLength","outerBRElem","charCodeAt","insertFocusContent","nextSibling","insertBRElement","actionComplete","insertNode","brElm2"],"mappings":"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","sourcesContent":["import { isNullOrUndefined as isNOU, detach } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\n/**\n * `EnterKey` module is used to handle enter key press actions.\n */\nvar EnterKeyAction = /** @class */ (function () {\n    function EnterKeyAction(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    EnterKeyAction.prototype.addEventListener = function () {\n        this.parent.on(events.enterHandler, this.enterHandler, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    EnterKeyAction.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    EnterKeyAction.prototype.removeEventListener = function () {\n        this.parent.off(events.enterHandler, this.enterHandler);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    EnterKeyAction.prototype.getRangeNode = function () {\n        this.range = this.parent.getRange();\n        this.startNode = this.range.startContainer.nodeName === '#text' ? this.range.startContainer.parentElement :\n            this.range.startContainer;\n        this.endNode = this.range.endContainer.nodeName === '#text' ? this.range.endContainer.parentElement :\n            this.range.endContainer;\n    };\n    EnterKeyAction.prototype.enterHandler = function (e) {\n        var _this = this;\n        this.getRangeNode();\n        if (e.args.which === 13 && e.args.code === 'Enter') {\n            if (isNOU(this.startNode.closest('LI')) && isNOU(this.endNode.closest('LI')) && isNOU(this.startNode.closest('TABLE')) &&\n                isNOU(this.endNode.closest('TABLE')) && isNOU(this.startNode.closest('PRE')) && isNOU(this.endNode.closest('PRE'))) {\n                var shiftKey_1 = e.args.shiftKey;\n                var actionBeginArgs = {\n                    cancel: false,\n                    name: events.actionBegin,\n                    requestType: shiftKey_1 ? 'ShiftEnterAction' : 'EnterAction',\n                    originalEvent: e.args\n                };\n                this.parent.trigger(events.actionBegin, actionBeginArgs, function (actionBeginArgs) {\n                    if (!actionBeginArgs.cancel) {\n                        if (!(_this.range.startOffset === _this.range.endOffset && _this.range.startContainer === _this.range.endContainer)) {\n                            _this.range.deleteContents();\n                            if (_this.range.startContainer.nodeName === '#text' && _this.range.startContainer.textContent.length === 0 &&\n                                _this.range.startContainer.parentElement !== _this.parent.inputElement) {\n                                if (_this.parent.enterKey === 'BR') {\n                                    _this.range.startContainer.parentElement.innerHTML = '&#8203;';\n                                }\n                                else {\n                                    _this.range.startContainer.parentElement.innerHTML = '<br>';\n                                }\n                            }\n                            else if (_this.range.startContainer === _this.parent.inputElement && _this.range.startContainer.innerHTML === '') {\n                                _this.range.startContainer.innerHTML = '<br>';\n                                var focusElem = _this.range.startContainer.childNodes[_this.range.startOffset];\n                                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, 0);\n                            }\n                            else if (_this.parent.inputElement === _this.range.startContainer) {\n                                var focusElem = _this.range.startContainer.childNodes[_this.range.startOffset];\n                                if (focusElem.nodeName === '#text' && focusElem.textContent.length === 0) {\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, focusElem.previousSibling.textContent.length);\n                                }\n                                else {\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, focusElem.textContent.length >= 0 ? 0 : 1);\n                                    if (focusElem.previousSibling.textContent.length === 0) {\n                                        detach(focusElem.previousSibling);\n                                    }\n                                    else if (focusElem.textContent.length === 0) {\n                                        var currentFocusElem = focusElem.previousSibling.lastChild;\n                                        while (currentFocusElem.nodeName !== '#text') {\n                                            currentFocusElem = currentFocusElem.lastChild;\n                                        }\n                                        _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), currentFocusElem, currentFocusElem.textContent.length);\n                                        detach(focusElem);\n                                    }\n                                    else if (_this.parent.enterKey !== 'BR' &&\n                                        focusElem.previousSibling.textContent.length !== 0 && focusElem.textContent.length !== 0) {\n                                        e.args.preventDefault();\n                                        return;\n                                    }\n                                }\n                                _this.getRangeNode();\n                            }\n                        }\n                        if (_this.range.startContainer === _this.range.endContainer &&\n                            _this.range.startOffset === _this.range.endOffset && _this.range.startContainer === _this.parent.inputElement) {\n                            _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.range.startContainer.childNodes[_this.range.startOffset], 0);\n                            _this.getRangeNode();\n                        }\n                        if ((_this.parent.enterKey === 'P' && !shiftKey_1) || (_this.parent.enterKey === 'DIV' && !shiftKey_1) ||\n                            (_this.parent.shiftEnterKey === 'P' && shiftKey_1) ||\n                            (_this.parent.shiftEnterKey === 'DIV' && shiftKey_1)) {\n                            var nearBlockNode = _this.parent.formatter.editorManager.domNode.blockParentNode(_this.startNode);\n                            var isImageNode = false;\n                            if (_this.range.startOffset === 0 && _this.range.endOffset === 0 && !(!isNOU(_this.range.startContainer.previousSibling) &&\n                                (_this.range.startContainer.previousSibling.nodeName === 'IMG' || _this.range.startContainer.previousSibling.nodeName === 'BR'))) {\n                                var isNearBlockLengthZero = void 0;\n                                var newElem = void 0;\n                                if (_this.range.startContainer.nodeName === 'IMG') {\n                                    newElem = _this.createInsertElement(shiftKey_1);\n                                    isImageNode = true;\n                                    isNearBlockLengthZero = false;\n                                }\n                                else {\n                                    if (nearBlockNode.textContent.length !== 0) {\n                                        newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, false).cloneNode(true);\n                                        isNearBlockLengthZero = false;\n                                    }\n                                    else {\n                                        newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, true).cloneNode(true);\n                                        isNearBlockLengthZero = true;\n                                    }\n                                }\n                                var insertElem = _this.createInsertElement(shiftKey_1);\n                                while (newElem.firstChild) {\n                                    insertElem.appendChild(newElem.firstChild);\n                                }\n                                nearBlockNode.parentElement.insertBefore(insertElem, nearBlockNode);\n                                if (!isNearBlockLengthZero) {\n                                    var currentFocusElem = insertElem;\n                                    var finalFocusElem = void 0;\n                                    while (!isNOU(currentFocusElem) && currentFocusElem.nodeName !== '#text') {\n                                        finalFocusElem = currentFocusElem;\n                                        currentFocusElem = currentFocusElem.lastChild;\n                                    }\n                                    finalFocusElem.innerHTML = '<br>';\n                                    if (!isImageNode) {\n                                        detach(nearBlockNode);\n                                    }\n                                }\n                                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), insertElem.nextElementSibling, 0);\n                            }\n                            else if (nearBlockNode.textContent.length === 0 && !(!isNOU(nearBlockNode.childNodes[0]) && nearBlockNode.childNodes[0].nodeName === 'IMG')) {\n                                if (!isNOU(nearBlockNode.children[0]) && nearBlockNode.children[0].tagName !== 'BR') {\n                                    var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, false).cloneNode(true);\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(newElem, nearBlockNode);\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), newElem, newElem.textContent.length >= 0 ? 0 : 1);\n                                }\n                                else {\n                                    var insertElem = _this.createInsertElement(shiftKey_1);\n                                    insertElem.innerHTML = '<br>';\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(insertElem, nearBlockNode);\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), insertElem, 0);\n                                }\n                            }\n                            else {\n                                var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, true);\n                                if (!isNOU(newElem.childNodes[0]) && newElem.childNodes[0].nodeName === '#text' &&\n                                    newElem.childNodes[0].textContent.length === 0) {\n                                    detach(newElem.childNodes[0]);\n                                }\n                                if (newElem.textContent.trim().length === 0) {\n                                    var brElm = _this.parent.createElement('br');\n                                    _this.startNode.appendChild(brElm);\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.startNode, 0);\n                                }\n                                if (((_this.parent.enterKey === 'P' || _this.parent.enterKey === 'DIV') && !shiftKey_1) || ((_this.parent.shiftEnterKey === 'DIV' ||\n                                    _this.parent.shiftEnterKey === 'P') && shiftKey_1)) {\n                                    var insertElm = _this.createInsertElement(shiftKey_1);\n                                    while (newElem.firstChild) {\n                                        insertElm.appendChild(newElem.firstChild);\n                                    }\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(insertElm, newElem);\n                                    detach(newElem);\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode) ? insertElm : _this.startNode, 0);\n                                }\n                            }\n                            e.args.preventDefault();\n                        }\n                        if ((_this.parent.enterKey === 'BR' && !shiftKey_1) || (_this.parent.shiftEnterKey === 'BR' && shiftKey_1)) {\n                            var currentParent = void 0;\n                            if (!_this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode)) {\n                                var currentNode = _this.startNode;\n                                var previousNode = currentNode;\n                                while (!_this.parent.formatter.editorManager.domNode.isBlockNode(currentNode)) {\n                                    previousNode = currentNode;\n                                    currentNode = currentNode.parentElement;\n                                }\n                                currentParent = currentNode === _this.parent.inputElement ?\n                                    previousNode : currentNode;\n                            }\n                            else {\n                                currentParent = _this.startNode;\n                            }\n                            var isEmptyBrInserted = false;\n                            var currentParentLastChild = currentParent.lastChild;\n                            while (!isNOU(currentParentLastChild) && !(currentParentLastChild.nodeName === '#text')) {\n                                currentParentLastChild = currentParentLastChild.lastChild;\n                            }\n                            var isLastNodeLength = _this.range.startContainer === currentParentLastChild ?\n                                _this.range.startContainer.textContent.length : currentParent.textContent.length;\n                            if (currentParent !== _this.parent.inputElement &&\n                                _this.parent.formatter.editorManager.domNode.isBlockNode(currentParent) &&\n                                _this.range.startOffset === _this.range.endOffset &&\n                                _this.range.startOffset === isLastNodeLength) {\n                                var outerBRElem = _this.parent.createElement('br');\n                                _this.parent.formatter.editorManager.domNode.insertAfter(outerBRElem, currentParent);\n                                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), outerBRElem, 0);\n                            }\n                            else if (!isNOU(currentParent) && currentParent !== _this.parent.inputElement && currentParent.nodeName !== 'BR') {\n                                if (currentParent.textContent.trim().length === 0 || (currentParent.textContent.trim().length === 1 &&\n                                    currentParent.textContent.charCodeAt(0) === 8203)) {\n                                    var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, currentParent, true).cloneNode(true);\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(newElem, currentParent);\n                                    var outerBRElem = _this.parent.createElement('br');\n                                    newElem.parentElement.insertBefore(outerBRElem, newElem);\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), newElem, 0);\n                                }\n                                else {\n                                    var newElem = void 0;\n                                    var outerBRElem = _this.parent.createElement('br');\n                                    if (_this.range.startOffset === 0 && _this.range.endOffset === 0 &&\n                                        !isNOU(currentParent.previousSibling) && currentParent.previousSibling.nodeName === 'BR') {\n                                        newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, currentParent, false).cloneNode(true);\n                                        _this.parent.formatter.editorManager.domNode.insertAfter(outerBRElem, currentParent);\n                                        _this.insertFocusContent();\n                                        var currentFocusElem = outerBRElem.nextSibling;\n                                        while (!isNOU(currentFocusElem) && currentFocusElem.nodeName !== '#text') {\n                                            currentFocusElem = currentFocusElem.lastChild;\n                                        }\n                                        _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), currentFocusElem, 0);\n                                        isEmptyBrInserted = true;\n                                    }\n                                    else {\n                                        _this.insertBRElement();\n                                    }\n                                }\n                            }\n                            else {\n                                _this.insertBRElement();\n                            }\n                            e.args.preventDefault();\n                        }\n                        _this.parent.trigger(events.actionComplete, { requestType: shiftKey_1 ? 'ShiftEnterAction' : 'EnterAction', args: e.args });\n                    }\n                });\n            }\n        }\n    };\n    EnterKeyAction.prototype.insertBRElement = function () {\n        var isEmptyBrInserted = false;\n        var brElm = this.parent.createElement('br');\n        if (this.startNode.nodeName === 'BR' && this.endNode.nodeName === 'BR' && this.range.startOffset === 0 && this.range.startOffset === this.range.endOffset) {\n            this.parent.formatter.editorManager.domNode.insertAfter(brElm, this.startNode);\n            isEmptyBrInserted = true;\n        }\n        else {\n            if (this.startNode === this.parent.inputElement && !isNOU(this.range.startContainer.previousSibling) &&\n                this.range.startContainer.previousSibling.nodeName === 'BR' && this.range.startContainer.textContent.length === 0) {\n                isEmptyBrInserted = true;\n            }\n            this.range.insertNode(brElm);\n        }\n        if (isEmptyBrInserted || (!isNOU(brElm.nextElementSibling) && brElm.nextElementSibling.tagName === 'BR') || (!isNOU(brElm.nextSibling) && brElm.nextSibling.textContent.length > 0)) {\n            this.parent.formatter.editorManager.nodeSelection.setCursorPoint(this.parent.contentModule.getDocument(), !isNOU(brElm.nextSibling) ? brElm.nextSibling : brElm, 0);\n            isEmptyBrInserted = false;\n        }\n        else {\n            var brElm2 = this.parent.createElement('br');\n            this.range.insertNode(brElm2);\n            this.parent.formatter.editorManager.nodeSelection.setCursorPoint(this.parent.contentModule.getDocument(), brElm, 0);\n        }\n    };\n    EnterKeyAction.prototype.insertFocusContent = function () {\n        if (this.range.startContainer.textContent.length === 0) {\n            if (this.range.startContainer.nodeName === '#text') {\n                this.range.startContainer.parentElement.innerHTML = '&#8203;';\n            }\n            else {\n                this.range.startContainer.innerHTML = '&#8203;';\n            }\n        }\n    };\n    EnterKeyAction.prototype.createInsertElement = function (shiftKey) {\n        var insertElem;\n        if ((this.parent.enterKey === 'DIV' && !shiftKey) || (this.parent.shiftEnterKey === 'DIV' && shiftKey)) {\n            insertElem = this.parent.createElement('div');\n        }\n        else if ((this.parent.enterKey === 'P' && !shiftKey) || (this.parent.shiftEnterKey === 'P' && shiftKey)) {\n            insertElem = this.parent.createElement('p');\n        }\n        return insertElem;\n    };\n    return EnterKeyAction;\n}());\nexport { EnterKeyAction };\n"]},"metadata":{},"sourceType":"module"}