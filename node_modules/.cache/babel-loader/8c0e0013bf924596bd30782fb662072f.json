{"ast":null,"code":"var _jsxFileName = \"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/editor/index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { default as React, useEffect, useRef } from 'react';\nimport EditorJS from '@editorjs/editorjs';\nimport Header from '@editorjs/header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DEFAULT_INITIAL_DATA = props => {\n  return {\n    \"time\": new Date().getTime(),\n    \"blocks\": [{\n      \"type\": \"header\",\n      \"data\": {\n        \"text\": props,\n        \"level\": 1\n      }\n    }]\n  };\n};\n\n_c = DEFAULT_INITIAL_DATA;\nconst EDITTOR_HOLDER_ID = 'editorjs';\n\nconst Editor = props => {\n  _s();\n\n  const ejInstance = useRef();\n  const [editorData, setEditorData] = React.useState(DEFAULT_INITIAL_DATA(props.header_text)); // This will run only once\n\n  useEffect(() => {\n    if (!ejInstance.current) {\n      initEditor();\n    }\n\n    return () => {\n      ejInstance.current.destroy();\n      ejInstance.current = null;\n    };\n  }, []);\n  console.log(\"editor\", editorData);\n\n  const initEditor = () => {\n    const editor = new EditorJS({\n      holder: EDITTOR_HOLDER_ID,\n      logLevel: \"ERROR\",\n      data: editorData,\n      onReady: () => {\n        ejInstance.current = editor;\n      },\n      onChange: async () => {\n        let content = await this.editorjs.saver.save(); // Put your logic here to save this data to your DB\n\n        setEditorData(content);\n      },\n      autofocus: true,\n      tools: {\n        header: Header\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: EDITTOR_HOLDER_ID,\n      className: \"bg-body\",\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Editor, \"+ivsdKEB8wlNFnw+Q+D484+7Zsg=\");\n\n_c2 = Editor;\nexport default Editor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DEFAULT_INITIAL_DATA\");\n$RefreshReg$(_c2, \"Editor\");","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/editor/index.js"],"names":["default","React","useEffect","useRef","EditorJS","Header","DEFAULT_INITIAL_DATA","props","Date","getTime","EDITTOR_HOLDER_ID","Editor","ejInstance","editorData","setEditorData","useState","header_text","current","initEditor","destroy","console","log","editor","holder","logLevel","data","onReady","onChange","content","editorjs","saver","save","autofocus","tools","header"],"mappings":";;;AAAA;AACA,SAASA,OAAO,IAAIC,KAApB,EAA2BC,SAA3B,EAAsCC,MAAtC,QAAoD,OAApD;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACtC,SAAO;AACL,YAAQ,IAAIC,IAAJ,GAAWC,OAAX,EADH;AAEL,cAAU,CACR;AACE,cAAQ,QADV;AAEE,cAAQ;AACN,gBAAQF,KADF;AAEN,iBAAS;AAFH;AAFV,KADQ;AAFL,GAAP;AAYD,CAbD;;KAAMD,oB;AAeN,MAAMI,iBAAiB,GAAG,UAA1B;;AAEA,MAAMC,MAAM,GAAIJ,KAAD,IAAW;AAAA;;AACxB,QAAMK,UAAU,GAAGT,MAAM,EAAzB;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8Bb,KAAK,CAACc,QAAN,CAAeT,oBAAoB,CAACC,KAAK,CAACS,WAAP,CAAnC,CAApC,CAFwB,CAIxB;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,UAAU,CAACK,OAAhB,EAAyB;AACvBC,MAAAA,UAAU;AACX;;AACD,WAAO,MAAM;AACXN,MAAAA,UAAU,CAACK,OAAX,CAAmBE,OAAnB;AACAP,MAAAA,UAAU,CAACK,OAAX,GAAqB,IAArB;AACD,KAHD;AAID,GARQ,EAQN,EARM,CAAT;AASDG,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBR,UAArB;;AACC,QAAMK,UAAU,GAAG,MAAM;AACvB,UAAMI,MAAM,GAAG,IAAIlB,QAAJ,CAAa;AAC1BmB,MAAAA,MAAM,EAAEb,iBADkB;AAE1Bc,MAAAA,QAAQ,EAAE,OAFgB;AAG1BC,MAAAA,IAAI,EAAEZ,UAHoB;AAI1Ba,MAAAA,OAAO,EAAE,MAAM;AACbd,QAAAA,UAAU,CAACK,OAAX,GAAqBK,MAArB;AACD,OANyB;AAO1BK,MAAAA,QAAQ,EAAE,YAAY;AACpB,YAAIC,OAAO,GAAG,MAAM,KAAKC,QAAL,CAAcC,KAAd,CAAoBC,IAApB,EAApB,CADoB,CAEpB;;AACAjB,QAAAA,aAAa,CAACc,OAAD,CAAb;AACD,OAXyB;AAY1BI,MAAAA,SAAS,EAAE,IAZe;AAa1BC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE7B;AADH;AAbmB,KAAb,CAAf;AAiBD,GAlBD;;AAoBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,EAAE,EAAEK,iBAAT;AAA4B,MAAA,SAAS,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxCD;;GAAMC,M;;MAAAA,M;AA0CN,eAAeA,MAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { default as React, useEffect, useRef } from 'react';\nimport EditorJS from '@editorjs/editorjs';\nimport Header from '@editorjs/header'; \n \nconst DEFAULT_INITIAL_DATA = (props) => {\n  return {\n    \"time\": new Date().getTime(),\n    \"blocks\": [\n      {\n        \"type\": \"header\",\n        \"data\": {\n          \"text\": props,\n          \"level\": 1\n        }\n      },\n    ]\n  }\n}\n \nconst EDITTOR_HOLDER_ID = 'editorjs';\n \nconst Editor = (props) => {\n  const ejInstance = useRef();\n  const [editorData, setEditorData] = React.useState(DEFAULT_INITIAL_DATA(props.header_text));\n \n  // This will run only once\n  useEffect(() => {\n    if (!ejInstance.current) {\n      initEditor();\n    }\n    return () => {\n      ejInstance.current.destroy();\n      ejInstance.current = null;\n    }\n  }, []);\n console.log(\"editor\",editorData)\n  const initEditor = () => {\n    const editor = new EditorJS({\n      holder: EDITTOR_HOLDER_ID,\n      logLevel: \"ERROR\",\n      data: editorData,\n      onReady: () => {\n        ejInstance.current = editor;\n      },\n      onChange: async () => {\n        let content = await this.editorjs.saver.save();\n        // Put your logic here to save this data to your DB\n        setEditorData(content);\n      },\n      autofocus: true,\n      tools: { \n        header: Header, \n      }, \n    });\n  };\n \n  return (\n    <React.Fragment>\n      <div id={EDITTOR_HOLDER_ID} className=\"bg-body\"> </div>\n    </React.Fragment>\n  );\n}\n \nexport default Editor;"]},"metadata":{},"sourceType":"module"}