{"ast":null,"code":"var _jsxFileName = \"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/orderProgressDonutChart.js\";\n// import \"./styles.css\";\nimport React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Cell, Legend } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: \"Group A\",\n  value: 400\n}, {\n  name: \"Group B\",\n  value: 300\n}, {\n  name: \"Group C\",\n  value: 300\n}, {\n  name: \"Group D\",\n  value: 200\n}];\nconst COLORS = [\"#10D078\", \"#F83A3A\", \"#FFAA00\", \"#558EFA\"];\nconst RADIAN = Math.PI / 180;\n\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.7;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return /*#__PURE__*/_jsxDEV(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? \"start\" : \"end\",\n    dominantBaseline: \"central\",\n    children: `${(percent * 100).toFixed(0)}%`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\nexport default function OrderProgressDonutChart() {\n  return /*#__PURE__*/_jsxDEV(PieChart, {\n    width: 500,\n    height: 300,\n    children: [/*#__PURE__*/_jsxDEV(Legend, {\n      align: \"right\",\n      verticalAlign: \"middle\",\n      layout: \"vertical\",\n      height: 300,\n      margin: {\n        top: 40,\n        left: 0,\n        right: 0,\n        bottom: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: data,\n      cx: 134,\n      cy: 134,\n      labelLine: false,\n      label: renderCustomizedLabel,\n      outerRadius: 100,\n      innerRadius: 60,\n      fill: \"#8884d8\",\n      dataKey: \"value\",\n      children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n        fill: COLORS[index % COLORS.length]\n      }, `cell-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c = OrderProgressDonutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderProgressDonutChart\");","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/orderProgressDonutChart.js"],"names":["React","useCallback","useState","PieChart","Pie","Cell","Legend","data","name","value","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","OrderProgressDonutChart","top","left","right","bottom","map","entry","length"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,MAA9B,QAA4C,UAA5C;;AAEA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CADW,EAEX;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAFW,EAGX;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAHW,EAIX;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAJW,CAAb;AAOA,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAf;AAEA,MAAMC,MAAM,GAAGC,IAAI,CAACC,EAAL,GAAU,GAAzB;;AACA,MAAMC,qBAAqB,GAAG,CAAC;AAC7BC,EAAAA,EAD6B;AAE7BC,EAAAA,EAF6B;AAG7BC,EAAAA,QAH6B;AAI7BC,EAAAA,WAJ6B;AAK7BC,EAAAA,WAL6B;AAM7BC,EAAAA,OAN6B;AAO7BC,EAAAA;AAP6B,CAAD,KAQxB;AACJ,QAAMC,MAAM,GAAGJ,WAAW,GAAG,CAACC,WAAW,GAAGD,WAAf,IAA8B,GAA3D;AACA,QAAMK,CAAC,GAAGR,EAAE,GAAGO,MAAM,GAAGV,IAAI,CAACY,GAAL,CAAS,CAACP,QAAD,GAAYN,MAArB,CAAxB;AACA,QAAMc,CAAC,GAAGT,EAAE,GAAGM,MAAM,GAAGV,IAAI,CAACc,GAAL,CAAS,CAACT,QAAD,GAAYN,MAArB,CAAxB;AAEA,sBACE;AACE,IAAA,CAAC,EAAEY,CADL;AAEE,IAAA,CAAC,EAAEE,CAFL;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,UAAU,EAAEF,CAAC,GAAGR,EAAJ,GAAS,OAAT,GAAmB,KAJjC;AAKE,IAAA,gBAAgB,EAAC,SALnB;AAAA,cAOI,GAAE,CAACK,OAAO,GAAG,GAAX,EAAgBO,OAAhB,CAAwB,CAAxB,CAA2B;AAPjC;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAxBD;;AAyBA,eAAe,SAASC,uBAAT,GAAmC;AAChD,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE,GAAjB;AAAsB,IAAA,MAAM,EAAE,GAA9B;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,aAAa,EAAC,QAApC;AAA6C,MAAA,MAAM,EAAC,UAApD;AAA+D,MAAA,MAAM,EAAE,GAAvE;AAA4E,MAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAE,EAAN;AAAUC,QAAAA,IAAI,EAAE,CAAhB;AAAmBC,QAAAA,KAAK,EAAE,CAA1B;AAA6BC,QAAAA,MAAM,EAAE;AAArC;AAApF;AAAA;AAAA;AAAA;AAAA,YADA,eAEE,QAAC,GAAD;AACE,MAAA,IAAI,EAAEzB,IADR;AAEE,MAAA,EAAE,EAAE,GAFN;AAGE,MAAA,EAAE,EAAE,GAHN;AAIE,MAAA,SAAS,EAAE,KAJb;AAKE,MAAA,KAAK,EAAEO,qBALT;AAME,MAAA,WAAW,EAAE,GANf;AAOE,MAAA,WAAW,EAAE,EAPf;AAQE,MAAA,IAAI,EAAC,SARP;AASE,MAAA,OAAO,EAAC,OATV;AAAA,gBAWGP,IAAI,CAAC0B,GAAL,CAAS,CAACC,KAAD,EAAQb,KAAR,kBACR,QAAC,IAAD;AAA4B,QAAA,IAAI,EAAEX,MAAM,CAACW,KAAK,GAAGX,MAAM,CAACyB,MAAhB;AAAxC,SAAY,QAAOd,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA,cADD;AAXH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;KArBuBO,uB","sourcesContent":["// import \"./styles.css\";\nimport React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Cell, Legend } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 }\n];\n\nconst COLORS = [\"#10D078\", \"#F83A3A\", \"#FFAA00\", \"#558EFA\"];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.7;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\nexport default function OrderProgressDonutChart() {\n  return (\n    <PieChart width={500} height={300}>\n    <Legend align=\"right\" verticalAlign=\"middle\" layout=\"vertical\" height={300} margin={{top: 40, left: 0, right: 0, bottom: 0 }}/>\n      <Pie\n        data={data}\n        cx={134}\n        cy={134}\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={100}\n        innerRadius={60}\n        fill=\"#8884d8\"\n        dataKey=\"value\"\n      >\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}