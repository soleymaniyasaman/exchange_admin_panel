{"ast":null,"code":"var _jsxFileName = \"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/policies.js\";\n\nconst React = require('react');\n\nconst ReactDOM = require('react-dom');\n\nimport CKEditor from \"../src\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Policies extends React.Component {\n  constructor(props) {\n    super(props); //State initialization\n\n    this.state = {\n      content: \"Hello World\"\n    };\n    this.setContent = this.setContent.bind(this);\n  } //------ Test for race condition ------ //\n\n\n  setContent() {\n    console.log(\"Setting content\");\n    this.setState({\n      content: \"Hello World \" + Math.random()\n    });\n  }\n\n  onChange(evt) {\n    console.log(\"onChange fired with event info: \", evt, \"and data: \", evt.editor.getData());\n  }\n\n  onBlur(evt) {\n    console.log(\"onBlur fired with event info: \", evt);\n  }\n\n  afterPaste(evt) {\n    console.log(\"afterPaste fired with event info: \", evt);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.setContent(),\n        children: \"Set content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n        content: this.state.content,\n        events: {\n          blur: this.onBlur,\n          afterPaste: this.afterPaste,\n          change: this.onChange\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Policies, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 3\n}, this), document.getElementById('example'));","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/managemant/policies.js"],"names":["React","require","ReactDOM","CKEditor","Policies","Component","constructor","props","state","content","setContent","bind","console","log","setState","Math","random","onChange","evt","editor","getData","onBlur","afterPaste","render","blur","change","document","getElementById"],"mappings":";;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AACA,OAAOE,QAAP,MAAqB,QAArB;;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN,EADgB,CAGhB;;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD,GAToC,CAWrC;;;AACAD,EAAAA,UAAU,GAAE;AACVE,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,SAAKC,QAAL,CAAc;AACZL,MAAAA,OAAO,EAAE,iBAAiBM,IAAI,CAACC,MAAL;AADd,KAAd;AAGD;;AAEDC,EAAAA,QAAQ,CAACC,GAAD,EAAK;AACXN,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAA+CK,GAA/C,EAAoD,YAApD,EAAiEA,GAAG,CAACC,MAAJ,CAAWC,OAAX,EAAjE;AACD;;AAEDC,EAAAA,MAAM,CAACH,GAAD,EAAK;AACTN,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CK,GAA7C;AACD;;AAEDI,EAAAA,UAAU,CAACJ,GAAD,EAAK;AACbN,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAiDK,GAAjD;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKb,UAAL,EAAvB;AAA0C,QAAA,QAAQ,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AACE,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,OADtB;AAEE,QAAA,MAAM,EAAE;AACNe,UAAAA,IAAI,EAAE,KAAKH,MADL;AAENC,UAAAA,UAAU,EAAE,KAAKA,UAFX;AAGNG,UAAAA,MAAM,EAAE,KAAKR;AAHP;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA7CoC;;AAgDvCf,QAAQ,CAACqB,MAAT,eACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEG,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAFF","sourcesContent":["const React = require('react');\nconst ReactDOM = require('react-dom');\nimport CKEditor from \"../src\";\n\nclass Policies extends React.Component {\n  constructor(props){\n    super(props);\n\n    //State initialization\n    this.state = {\n      content: \"Hello World\"\n    };\n    this.setContent = this.setContent.bind(this)\n  }\n\n  //------ Test for race condition ------ //\n  setContent(){\n    console.log(\"Setting content\");\n    this.setState({\n      content: \"Hello World \" + Math.random()\n    })\n  }\n\n  onChange(evt){\n    console.log(\"onChange fired with event info: \",evt, \"and data: \",evt.editor.getData());\n  }\n\n  onBlur(evt){\n    console.log(\"onBlur fired with event info: \",evt);\n  }\n\n  afterPaste(evt){\n    console.log(\"afterPaste fired with event info: \",evt);\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={() => this.setContent()} children='Set content' />\n        <CKEditor\n          content={this.state.content}\n          events={{\n            blur: this.onBlur,\n            afterPaste: this.afterPaste,\n            change: this.onChange\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Policies />,\n  document.getElementById('example')\n);"]},"metadata":{},"sourceType":"module"}