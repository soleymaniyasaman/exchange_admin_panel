{"ast":null,"code":"import { getEditValue } from '../base/util';\n/**\n * Content module is used to render Rich Text Editor content\n *\n * @hidden\n\n */\n\nvar ContentRender =\n/** @class */\nfunction () {\n  /**\n   * Constructor for content renderer module\n   *\n   * @param {IRichTextEditor} parent - specifies the parent element.\n   * @param {ServiceLocator} serviceLocator - specifies the service.\n   * @returns {void}\n   */\n  function ContentRender(parent, serviceLocator) {\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n  }\n  /**\n   * The function is used to render Rich Text Editor content div\n   *\n   * @returns {void}\n   * @hidden\n    */\n\n\n  ContentRender.prototype.renderPanel = function () {\n    var rteObj = this.parent;\n    var div = this.parent.createElement('div', {\n      className: 'e-rte-content',\n      id: this.parent.getID() + 'rte-view'\n    });\n    var rteContent = getEditValue(rteObj.value, rteObj);\n    this.editableElement = this.parent.createElement('div', {\n      className: 'e-content',\n      id: this.parent.getID() + '_rte-edit-view',\n      attrs: {\n        'contenteditable': 'true'\n      },\n      innerHTML: rteContent\n    });\n    div.appendChild(this.editableElement);\n    this.setPanel(div);\n    rteObj.element.appendChild(div);\n  };\n  /**\n   * Get the content div element of RichTextEditor\n   *\n   * @returns {Element} - specifies the element.\n   * @hidden\n    */\n\n\n  ContentRender.prototype.getPanel = function () {\n    return this.contentPanel;\n  };\n  /**\n   * Get the editable element of RichTextEditor\n   *\n   * @returns {Element} - specifies the return element.\n   * @hidden\n    */\n\n\n  ContentRender.prototype.getEditPanel = function () {\n    return this.editableElement;\n  };\n  /**\n   * Returns the text content as string.\n   *\n   * @returns {string} - specifies the string element.\n   */\n\n\n  ContentRender.prototype.getText = function () {\n    return this.getEditPanel().innerText;\n  };\n  /**\n   * Set the content div element of RichTextEditor\n   *\n   * @param {Element} panel - specifies the panel element.\n   * @returns {void}\n   * @hidden\n    */\n\n\n  ContentRender.prototype.setPanel = function (panel) {\n    this.contentPanel = panel;\n  };\n  /**\n   * Get the document of RichTextEditor\n   *\n   * @returns {Document} - specifies the document.\n   * @hidden\n    */\n\n\n  ContentRender.prototype.getDocument = function () {\n    return this.getEditPanel().ownerDocument;\n  };\n\n  return ContentRender;\n}();\n\nexport { ContentRender };","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/renderer/content-renderer.js"],"names":["getEditValue","ContentRender","parent","serviceLocator","prototype","renderPanel","rteObj","div","createElement","className","id","getID","rteContent","value","editableElement","attrs","innerHTML","appendChild","setPanel","element","getPanel","contentPanel","getEditPanel","getText","innerText","panel","getDocument","ownerDocument"],"mappings":"AAAA,SAASA,YAAT,QAA6B,cAA7B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,aAAa;AAAG;AAAe,YAAY;AAC3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,WAASA,aAAT,CAAuBC,MAAvB,EAA+BC,cAA/B,EAA+C;AAC3C,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AAEIF,EAAAA,aAAa,CAACG,SAAd,CAAwBC,WAAxB,GAAsC,YAAY;AAC9C,QAAIC,MAAM,GAAG,KAAKJ,MAAlB;AACA,QAAIK,GAAG,GAAG,KAAKL,MAAL,CAAYM,aAAZ,CAA0B,KAA1B,EAAiC;AAAEC,MAAAA,SAAS,EAAE,eAAb;AAA8BC,MAAAA,EAAE,EAAE,KAAKR,MAAL,CAAYS,KAAZ,KAAsB;AAAxD,KAAjC,CAAV;AACA,QAAIC,UAAU,GAAGZ,YAAY,CAACM,MAAM,CAACO,KAAR,EAAeP,MAAf,CAA7B;AACA,SAAKQ,eAAL,GAAuB,KAAKZ,MAAL,CAAYM,aAAZ,CAA0B,KAA1B,EAAiC;AACpDC,MAAAA,SAAS,EAAE,WADyC;AAEpDC,MAAAA,EAAE,EAAE,KAAKR,MAAL,CAAYS,KAAZ,KAAsB,gBAF0B;AAGpDI,MAAAA,KAAK,EAAE;AACH,2BAAmB;AADhB,OAH6C;AAMpDC,MAAAA,SAAS,EAAEJ;AANyC,KAAjC,CAAvB;AAQAL,IAAAA,GAAG,CAACU,WAAJ,CAAgB,KAAKH,eAArB;AACA,SAAKI,QAAL,CAAcX,GAAd;AACAD,IAAAA,MAAM,CAACa,OAAP,CAAeF,WAAf,CAA2BV,GAA3B;AACH,GAfD;AAgBA;AACJ;AACA;AACA;AACA;AACA;;;AAEIN,EAAAA,aAAa,CAACG,SAAd,CAAwBgB,QAAxB,GAAmC,YAAY;AAC3C,WAAO,KAAKC,YAAZ;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;;;AAEIpB,EAAAA,aAAa,CAACG,SAAd,CAAwBkB,YAAxB,GAAuC,YAAY;AAC/C,WAAO,KAAKR,eAAZ;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIb,EAAAA,aAAa,CAACG,SAAd,CAAwBmB,OAAxB,GAAkC,YAAY;AAC1C,WAAO,KAAKD,YAAL,GAAoBE,SAA3B;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEIvB,EAAAA,aAAa,CAACG,SAAd,CAAwBc,QAAxB,GAAmC,UAAUO,KAAV,EAAiB;AAChD,SAAKJ,YAAL,GAAoBI,KAApB;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;;;AAEIxB,EAAAA,aAAa,CAACG,SAAd,CAAwBsB,WAAxB,GAAsC,YAAY;AAC9C,WAAO,KAAKJ,YAAL,GAAoBK,aAA3B;AACH,GAFD;;AAGA,SAAO1B,aAAP;AACH,CArFkC,EAAnC;;AAsFA,SAASA,aAAT","sourcesContent":["import { getEditValue } from '../base/util';\n/**\n * Content module is used to render Rich Text Editor content\n *\n * @hidden\n\n */\nvar ContentRender = /** @class */ (function () {\n    /**\n     * Constructor for content renderer module\n     *\n     * @param {IRichTextEditor} parent - specifies the parent element.\n     * @param {ServiceLocator} serviceLocator - specifies the service.\n     * @returns {void}\n     */\n    function ContentRender(parent, serviceLocator) {\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n    }\n    /**\n     * The function is used to render Rich Text Editor content div\n     *\n     * @returns {void}\n     * @hidden\n\n     */\n    ContentRender.prototype.renderPanel = function () {\n        var rteObj = this.parent;\n        var div = this.parent.createElement('div', { className: 'e-rte-content', id: this.parent.getID() + 'rte-view' });\n        var rteContent = getEditValue(rteObj.value, rteObj);\n        this.editableElement = this.parent.createElement('div', {\n            className: 'e-content',\n            id: this.parent.getID() + '_rte-edit-view',\n            attrs: {\n                'contenteditable': 'true'\n            },\n            innerHTML: rteContent\n        });\n        div.appendChild(this.editableElement);\n        this.setPanel(div);\n        rteObj.element.appendChild(div);\n    };\n    /**\n     * Get the content div element of RichTextEditor\n     *\n     * @returns {Element} - specifies the element.\n     * @hidden\n\n     */\n    ContentRender.prototype.getPanel = function () {\n        return this.contentPanel;\n    };\n    /**\n     * Get the editable element of RichTextEditor\n     *\n     * @returns {Element} - specifies the return element.\n     * @hidden\n\n     */\n    ContentRender.prototype.getEditPanel = function () {\n        return this.editableElement;\n    };\n    /**\n     * Returns the text content as string.\n     *\n     * @returns {string} - specifies the string element.\n     */\n    ContentRender.prototype.getText = function () {\n        return this.getEditPanel().innerText;\n    };\n    /**\n     * Set the content div element of RichTextEditor\n     *\n     * @param {Element} panel - specifies the panel element.\n     * @returns {void}\n     * @hidden\n\n     */\n    ContentRender.prototype.setPanel = function (panel) {\n        this.contentPanel = panel;\n    };\n    /**\n     * Get the document of RichTextEditor\n     *\n     * @returns {Document} - specifies the document.\n     * @hidden\n\n     */\n    ContentRender.prototype.getDocument = function () {\n        return this.getEditPanel().ownerDocument;\n    };\n    return ContentRender;\n}());\nexport { ContentRender };\n"]},"metadata":{},"sourceType":"module"}