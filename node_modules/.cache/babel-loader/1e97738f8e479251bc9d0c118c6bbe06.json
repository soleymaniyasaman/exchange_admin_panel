{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useEffect } from 'react';\nimport { UserContext } from '../context/provider'; // import { ORDER_CREATE, ORDER_DELETE, ORDER_UPDATE, PRICE_UPDATE, TRADE_CREATE } from '../pages/dashboard/exchange/constants';\n// import { ACCOUNTING_APP, BASE_URL, TRADING_APP } from '../utils/constants';\n// import service from './service';\n//wallet api call\n\nconst WalletApi = props => {\n  _s();\n\n  const contextData = useContext(UserContext);\n  let ws = null; // const walletData = () => {\n  //     const walletDataUrl = `${BASE_URL(ACCOUNTING_APP)}/wallet/`\n  //     service.get_api(walletDataUrl)\n  //         .then(resp => {\n  //             let data = resp.data.result\n  //             data?.map((item, index) => {\n  //                 if (item.c_type === \"irr\") {\n  //                     contextData.setWalletIrrCash(item.quantity);\n  //                 }\n  //             }\n  //             )\n  //             data?.forEach(v => { v.price = null; v.priceUsdtIrr = 0 });\n  //             contextData.setWallet(data);\n  //         })\n  // }\n  //add price to wallet\n\n  const walletUpdate = () => {\n    var _props$walletData;\n\n    (_props$walletData = props.walletData) === null || _props$walletData === void 0 ? void 0 : _props$walletData.map((item, index) => {\n      let price = null;\n      let irr;\n\n      if (contextData.priceUpdate) {\n        price = contextData.priceUpdate.filter(itm => itm.symbol === item.c_type);\n        irr = contextData.priceUpdate.filter(itm => itm.symbol === \"USDIRR\"); // contextData.setToggleWalletPrice(true)\n      }\n\n      return item.price = item.c_type === \"irr\" ? irr : price;\n    });\n  }; //add irr price to wallet\n\n\n  const walletUpdatePrice = () => {\n    var _props$walletData2;\n\n    (_props$walletData2 = props.walletData) === null || _props$walletData2 === void 0 ? void 0 : _props$walletData2.map((item, index) => {\n      let priceValues = null;\n\n      if (item.price && contextData.usdtIrr) {\n        priceValues = item.c_type === \"irr\" ? item.quantity : item.quantity * (item.price[0] ? item.price[0].current_price : 0) * contextData.usdtIrr.current_price; // contextData.setToggleWaletIrrValue(true)\n      } // console.log(\"pricevalue\",priceValue)\n\n\n      return item.priceUsdtIrr = priceValues;\n    });\n  }; //socket call\n\n\n  const runSocket = () => {\n    ws = new WebSocket(\"wss://websocket.mojex.devmoj.ir/api/v1/\");\n    ws.onopen = props.onopen;\n\n    ws.onmessage = message => {\n      let msgdata = JSON.parse(message.data);\n\n      switch (msgdata.type) {\n        case \"price_update\":\n          console.log(\"price update\", msgdata.data);\n          contextData.setPriceUpdate(msgdata.data);\n          let map = new Map();\n          let data = msgdata.data;\n          data.forEach(item => {\n            map.set(item.symbol, item);\n            let irr = map.get(\"USDIRR\");\n            return contextData.setUsdtIrr(irr);\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n  }; // useEffect(() => {\n  //     walletData();\n  // }, []);\n\n\n  useEffect(() => {\n    walletUpdate();\n  }, [props.walletData, contextData.priceUpdate, contextData.usdtIrr]);\n  useEffect(() => {\n    walletUpdatePrice(); // }, [contextData.wallet, contextData.toggleWalletPrice, contextData.usdtIrr]);\n  }, [props.walletData, contextData.usdtIrr]);\n  useEffect(() => {\n    runSocket();\n    return () => {\n      ws = null;\n    };\n  }, []);\n  console.log(\"dataaaaa\", props.walletData);\n  return null;\n};\n\n_s(WalletApi, \"Uy4IL/tg9j87ILvimDK1TWoXJQE=\");\n\n_c = WalletApi;\nexport default WalletApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletApi\");","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/wallet.js"],"names":["useContext","useEffect","UserContext","WalletApi","props","contextData","ws","walletUpdate","walletData","map","item","index","price","irr","priceUpdate","filter","itm","symbol","c_type","walletUpdatePrice","priceValues","usdtIrr","quantity","current_price","priceUsdtIrr","runSocket","WebSocket","onopen","onmessage","message","msgdata","JSON","parse","data","type","console","log","setPriceUpdate","Map","forEach","set","get","setUsdtIrr"],"mappings":"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","sourcesContent":["import { useContext, useEffect } from 'react';\n\nimport { UserContext } from '../context/provider';\n\n// import { ORDER_CREATE, ORDER_DELETE, ORDER_UPDATE, PRICE_UPDATE, TRADE_CREATE } from '../pages/dashboard/exchange/constants';\n\n// import { ACCOUNTING_APP, BASE_URL, TRADING_APP } from '../utils/constants';\n\n// import service from './service';\n\n\n\n//wallet api call\n\nconst WalletApi = (props) => {\n\n    const contextData = useContext(UserContext);\n\n\n    let ws = null;\n\n    // const walletData = () => {\n\n    //     const walletDataUrl = `${BASE_URL(ACCOUNTING_APP)}/wallet/`\n\n    //     service.get_api(walletDataUrl)\n\n    //         .then(resp => {\n\n    //             let data = resp.data.result\n\n    //             data?.map((item, index) => {\n\n    //                 if (item.c_type === \"irr\") {\n\n    //                     contextData.setWalletIrrCash(item.quantity);\n\n    //                 }\n\n    //             }\n\n    //             )\n\n    //             data?.forEach(v => { v.price = null; v.priceUsdtIrr = 0 });\n\n    //             contextData.setWallet(data);\n\n    //         })\n\n    // }\n\n    //add price to wallet\n\n    const walletUpdate = () => {\n\n        props.walletData?.map((item, index) => {\n\n            let price = null\n\n            let irr\n\n            if (contextData.priceUpdate) {\n                \n                price = contextData.priceUpdate.filter(itm => itm.symbol === item.c_type)\n                \n                irr = contextData.priceUpdate.filter(itm => itm.symbol === \"USDIRR\")\n                \n                // contextData.setToggleWalletPrice(true)\n                \n            }\n            return item.price = item.c_type === \"irr\" ? irr : price\n\n        })\n\n    }\n\n    //add irr price to wallet\n\n    const walletUpdatePrice = () => {\n\n        props.walletData?.map((item, index) => {\n\n            let priceValues = null\n\n            if (item.price && contextData.usdtIrr) {\n\n                priceValues = item.c_type === \"irr\" ? item.quantity : item.quantity * (item.price[0] ? item.price[0].current_price : 0) * contextData.usdtIrr.current_price\n\n                // contextData.setToggleWaletIrrValue(true)\n\n            }\n\n            // console.log(\"pricevalue\",priceValue)\n\n            return item.priceUsdtIrr = priceValues\n\n        })\n\n    }\n\n    //socket call\n\n    const runSocket = () => {\n\n        ws = new WebSocket(\"wss://websocket.mojex.devmoj.ir/api/v1/\");\n\n        ws.onopen = props.onopen;\n\n        ws.onmessage = (message) => {\n\n            let msgdata = JSON.parse(message.data);\n\n            switch (msgdata.type) {\n\n                case \"price_update\":\n                    console.log(\"price update\",msgdata.data)\n                    contextData.setPriceUpdate(msgdata.data);\n\n                    let map = new Map();\n\n                    let data = msgdata.data;\n\n                    data.forEach(item => {\n\n                        map.set(item.symbol, item)\n\n                        let irr = map.get(\"USDIRR\")\n\n                        return contextData.setUsdtIrr(irr)\n\n                    });\n\n                    break;\n\n                default:\n\n                    break;\n\n            }\n\n        };\n\n    }\n\n    // useEffect(() => {\n\n    //     walletData();\n\n\n\n    // }, []);\n\n    useEffect(() => {\n\n        walletUpdate()\n\n    }, [props.walletData, contextData.priceUpdate, contextData.usdtIrr]);\n\n\n\n    useEffect(() => {\n\n        walletUpdatePrice()\n\n    // }, [contextData.wallet, contextData.toggleWalletPrice, contextData.usdtIrr]);\n    }, [props.walletData, contextData.usdtIrr]);\n\n\n\n    useEffect(() => {\n\n        runSocket();\n\n        return () => {\n\n            ws = null;\n\n        };\n\n    }, []);\n    console.log(\"dataaaaa\",props.walletData)\n\n    return null;\n\n}\n\n\n\nexport default WalletApi;\n\n"]},"metadata":{},"sourceType":"module"}