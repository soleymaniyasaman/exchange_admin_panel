{"ast":null,"code":"var _jsxFileName = \"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/numOfOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { PureComponent, useState } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { useFetchApi } from '../../../utils/hooks';\nimport '../layout/style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'Page C',\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: 'Page D',\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'Page E',\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'Page F',\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\nconst label = [{\n  key: \"uv\",\n  color: \"#558EFA\",\n  stopColor: \"#558EFA\"\n}, {\n  key: \"pv\",\n  color: \"#FFAA004D\",\n  stopColor: \"#FFAA000D\"\n}, {\n  key: \"amt\",\n  color: \"#26A17B\",\n  stopColor: \"#FFFFFF\"\n}];\n\nconst NumOfOrders = () => {\n  _s();\n\n  const [barProps, setBarProps] = useState(label.reduce((a, {\n    key\n  }) => {\n    a[key] = false;\n    return a;\n  }, {\n    hover: null\n  }));\n  const [{\n    data,\n    isLoading,\n    hasError\n  }, doFetch] = useFetchApi(undefined, []); // const handleLegendMouseEnter = (e) => {\n  //     if (!barProps[e.dataKey]) {\n  //         setBarProps({ ...barProps, hover: e.dataKey });\n  //     }\n  // };\n  // const handleLegendMouseLeave = (e) => {\n  //     setBarProps({ ...barProps, hover: null });\n  // };\n\n  const selectBar = e => {\n    console.log(\"element\", e);\n    setBarProps({ ...barProps,\n      [e.dataKey]: !barProps[e.dataKey],\n      hover: null\n    });\n  };\n\n  const renderLegend = props => {\n    const {\n      payload\n    } = props; // console.log(\"payload\",payload)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex legendContainer\",\n      children: payload.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legendItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot mx-auto\",\n          style: {\n            backgroundColor: `${entry.color}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: entry.value\n        }, `item-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => selectBar(entry) // onMouseOver={() => handleLegendMouseEnter(entry)}\n          // onMouseOut={() => handleLegendMouseLeave(entry)}\n          ,\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  };\n\n  React.useEffect(() => {// doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_ORDERS, { ...params }))\n  }, [params]);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: 1030,\n    height: \"80%\",\n    children: /*#__PURE__*/_jsxDEV(AreaChart, {\n      height: 250,\n      data: data,\n      margin: {\n        top: 60,\n        right: 10,\n        left: 0,\n        bottom: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Legend, {\n        align: \"right\",\n        verticalAlign: \"top\",\n        height: 30,\n        iconType: \"circle\",\n        content: renderLegend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n        children: label.map((label, index) => /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n          id: label.key,\n          x1: \"0\",\n          y1: \"0\",\n          x2: \"0\",\n          y2: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"5%\",\n            stopColor: label.color,\n            stopOpacity: 0.8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"95%\",\n            stopColor: label.stopColor,\n            stopOpacity: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        orientation: \"left\",\n        mirror: false,\n        tickMargin: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"2 2\",\n        vertical: false,\n        horizontal: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), label.map((label, index) => /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: label.key,\n        hide: barProps[label.key] === true,\n        stroke: label.color,\n        fillOpacity: 1,\n        fill: `url(#${label.key})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NumOfOrders, \"DTBG2wtawiPYmAuFTJtP5P84g1Q=\", false, function () {\n  return [useFetchApi];\n});\n\n_c = NumOfOrders;\nexport default NumOfOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"NumOfOrders\");","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/reports/orders/numOfOrders.js"],"names":["React","PureComponent","useState","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","useFetchApi","data","name","uv","pv","amt","label","key","color","stopColor","NumOfOrders","barProps","setBarProps","reduce","a","hover","isLoading","hasError","doFetch","undefined","selectBar","e","console","log","dataKey","renderLegend","props","payload","map","entry","index","backgroundColor","value","useEffect","params","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { PureComponent, useState } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { useFetchApi } from '../../../utils/hooks';\nimport '../layout/style.scss'\n\nconst data = [\n    {\n        name: 'Page A',\n        uv: 4000,\n        pv: 2400,\n        amt: 2400,\n    },\n    {\n        name: 'Page B',\n        uv: 3000,\n        pv: 1398,\n        amt: 2210,\n    },\n    {\n        name: 'Page C',\n        uv: 2000,\n        pv: 9800,\n        amt: 2290,\n    },\n    {\n        name: 'Page D',\n        uv: 2780,\n        pv: 3908,\n        amt: 2000,\n    },\n    {\n        name: 'Page E',\n        uv: 1890,\n        pv: 4800,\n        amt: 2181,\n    },\n    {\n        name: 'Page F',\n        uv: 2390,\n        pv: 3800,\n        amt: 2500,\n    },\n    {\n        name: 'Page G',\n        uv: 3490,\n        pv: 4300,\n        amt: 2100,\n    },\n];\nconst label = [\n    { key: \"uv\", color: \"#558EFA\", stopColor: \"#558EFA\" },\n    { key: \"pv\", color: \"#FFAA004D\", stopColor: \"#FFAA000D\" },\n    { key: \"amt\", color: \"#26A17B\", stopColor: \"#FFFFFF\" }\n]\n\nconst NumOfOrders = () => {\n    const [barProps, setBarProps] = useState(\n        label.reduce(\n            (a, { key }) => {\n                a[key] = false;\n                return a;\n            },\n            { hover: null }\n        )\n    );\n    const [{ data, isLoading, hasError }, doFetch] = useFetchApi(undefined, []);\n\n    // const handleLegendMouseEnter = (e) => {\n    //     if (!barProps[e.dataKey]) {\n    //         setBarProps({ ...barProps, hover: e.dataKey });\n    //     }\n    // };\n\n    // const handleLegendMouseLeave = (e) => {\n    //     setBarProps({ ...barProps, hover: null });\n    // };\n\n    const selectBar = (e) => {\n        console.log(\"element\", e)\n        setBarProps({\n            ...barProps,\n            [e.dataKey]: !barProps[e.dataKey],\n            hover: null\n        });\n    };\n    const renderLegend = (props) => {\n        const { payload } = props;\n        // console.log(\"payload\",payload)\n\n        return (\n            <div className='d-flex legendContainer'>\n                {\n                    payload.map((entry, index) => (\n                        <div className='legendItem'>\n                            <div className='dot mx-auto' style={{ backgroundColor: `${entry.color}` }} ></div>\n                            <div key={`item-${index}`}>{entry.value}</div>\n                            <span\n                                onClick={() => selectBar(entry)}\n                            // onMouseOver={() => handleLegendMouseEnter(entry)}\n                            // onMouseOut={() => handleLegendMouseLeave(entry)}\n                            >x</span>\n                        </div>\n                    ))\n                }\n            </div>\n        );\n    }\n    React.useEffect(() => {\n        // doFetch(\"GET\", TRADING_APP, UrlQuery(USERS_ORDERS, { ...params }))\n    }, [params])\n    return (\n        <ResponsiveContainer width={1030} height=\"80%\">\n            <AreaChart height={250} data={data}\n                margin={{ top: 60, right: 10, left: 0, bottom: 0 }}>\n                <Legend align=\"right\" verticalAlign=\"top\" height={30} iconType=\"circle\" content={renderLegend} />\n                <defs>\n                    {label.map((label, index) => (\n                        <linearGradient id={label.key} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor={label.color} stopOpacity={0.8} />\n                            <stop offset=\"95%\" stopColor={label.stopColor} stopOpacity={0} />\n                        </linearGradient>\n                    ))}\n                </defs>\n                <XAxis dataKey=\"name\" />\n                <YAxis orientation=\"left\" mirror={false} tickMargin={30} />\n                <CartesianGrid strokeDasharray=\"2 2\" vertical={false} horizontal={true} />\n                <Tooltip />\n                {label.map((label, index) => (\n                    <Area type=\"monotone\" dataKey={label.key} hide={barProps[label.key] === true} stroke={label.color} fillOpacity={1} fill={`url(#${label.key})`} />\n                ))}\n            </AreaChart>\n        </ResponsiveContainer>\n    );\n\n}\n\nexport default NumOfOrders;"]},"metadata":{},"sourceType":"module"}