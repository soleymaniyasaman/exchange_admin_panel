{"ast":null,"code":"var _jsxFileName = \"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/context/provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport { RefreshToken } from '../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\nconst MyProvider = ({\n  children\n}) => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(Boolean(RefreshToken()));\n  const [tableData, setTableData] = useState([]);\n  const [brands, setBrands] = useState([]);\n  const [id, setId] = useState(\"Product\");\n  const [name, setName] = useState(\"productList\");\n  const [editData, setEditData] = useState(\"\");\n  const [selected, setSelected] = useState(\"userInfoForm\");\n  const [editClicked, setEditClicked] = useState(false);\n  const [addClicked, setAddClicked] = useState(false);\n  const [formRefValues, setFormRefValues] = useState();\n  const [toggle, setToggle] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [indexModal, setIndexModal] = useState();\n  const [itemModal, setItemModal] = useState();\n  const [imageData, setImageData] = useState([]);\n  const [gallery, setGallery] = useState([]);\n  const [video, setVideo] = useState([]);\n  const [imagePhone, setImagePhone] = useState([]);\n  const [source, setSource] = useState([]);\n  const [profileImage, setProfileImage] = useState([]);\n  const [isBlocking, setIsBlocking] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [contextRowIndex, setContextRowIndex] = useState();\n  const [cameraData, setCameraData] = useState([]);\n  const [boxData, setBoxData] = useState([]);\n  const [isTouched, setIsTouched] = useState(false);\n  const [depositFilter, setDepositFilter] = useState();\n  const [withdrawFilter, setWithdrawFilter] = useState();\n  const [configData, setConfigData] = useState();\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      isLoggedIn,\n      setIsLoggedIn,\n      isTouched,\n      setIsTouched,\n      boxData,\n      setBoxData,\n      tableData,\n      setTableData,\n      brands,\n      setBrands,\n      id,\n      setId,\n      name,\n      setName,\n      editData,\n      setEditData,\n      selected,\n      setSelected,\n      editClicked,\n      setEditClicked,\n      addClicked,\n      setAddClicked,\n      formRefValues,\n      setFormRefValues,\n      toggle,\n      setToggle,\n      imageData,\n      setImageData,\n      gallery,\n      setGallery,\n      video,\n      setVideo,\n      imagePhone,\n      setImagePhone,\n      showModal,\n      setShowModal,\n      showEditModal,\n      setShowEditModal,\n      source,\n      setSource,\n      profileImage,\n      setProfileImage,\n      indexModal,\n      setIndexModal,\n      itemModal,\n      setItemModal,\n      isBlocking,\n      setIsBlocking,\n      showAlert,\n      setShowAlert,\n      contextRowIndex,\n      setContextRowIndex,\n      cameraData,\n      setCameraData,\n      depositFilter,\n      setDepositFilter,\n      withdrawFilter,\n      setWithdrawFilter,\n      configData,\n      setConfigData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyProvider, \"DLzRzOdYSEg7WKjlcGRkPykprxw=\");\n\n_c = MyProvider;\nexport default MyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/context/provider.js"],"names":["React","createContext","useState","RefreshToken","UserContext","MyProvider","children","isLoggedIn","setIsLoggedIn","Boolean","tableData","setTableData","brands","setBrands","id","setId","name","setName","editData","setEditData","selected","setSelected","editClicked","setEditClicked","addClicked","setAddClicked","formRefValues","setFormRefValues","toggle","setToggle","showModal","setShowModal","showEditModal","setShowEditModal","indexModal","setIndexModal","itemModal","setItemModal","imageData","setImageData","gallery","setGallery","video","setVideo","imagePhone","setImagePhone","source","setSource","profileImage","setProfileImage","isBlocking","setIsBlocking","showAlert","setShowAlert","contextRowIndex","setContextRowIndex","cameraData","setCameraData","boxData","setBoxData","isTouched","setIsTouched","depositFilter","setDepositFilter","withdrawFilter","setWithdrawFilter","configData","setConfigData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,SAASC,YAAT,QAA6B,gBAA7B;;AAIA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;;AAEP,MAAMI,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAEjC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAACO,OAAO,CAACN,YAAY,EAAb,CAAR,CAA5C;AAEA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACY,EAAD,EAAKC,KAAL,IAAcb,QAAQ,CAAC,SAAD,CAA5B;AAEA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,aAAD,CAAhC;AAEA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,cAAD,CAAxC;AAEA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM,CAACwB,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,EAAlD;AAEA,QAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4B7B,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM,CAAC8B,aAAD,EAAgBC,gBAAhB,IAAoC/B,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAM,CAACgC,UAAD,EAAaC,aAAb,IAA8BjC,QAAQ,EAA5C;AAEA,QAAM,CAACkC,SAAD,EAAYC,YAAZ,IAA4BnC,QAAQ,EAA1C;AAEA,QAAM,CAACoC,SAAD,EAAYC,YAAZ,IAA4BrC,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACsC,OAAD,EAAUC,UAAV,IAAwBvC,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM,CAACwC,KAAD,EAAQC,QAAR,IAAoBzC,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAAC0C,UAAD,EAAaC,aAAb,IAA8B3C,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAAC4C,MAAD,EAASC,SAAT,IAAsB7C,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAAC8C,YAAD,EAAeC,eAAf,IAAkC/C,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACgD,UAAD,EAAaC,aAAb,IAA8BjD,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM,CAACkD,SAAD,EAAYC,YAAZ,IAA4BnD,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM,CAACoD,eAAD,EAAkBC,kBAAlB,IAAwCrD,QAAQ,EAAtD;AAEA,QAAM,CAACsD,UAAD,EAAaC,aAAb,IAA8BvD,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAACwD,OAAD,EAAUC,UAAV,IAAwBzD,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM,CAAC0D,SAAD,EAAYC,YAAZ,IAA4B3D,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM,CAAC4D,aAAD,EAAgBC,gBAAhB,IAAoC7D,QAAQ,EAAlD;AAEA,QAAM,CAAC8D,cAAD,EAAiBC,iBAAjB,IAAsC/D,QAAQ,EAApD;AAEA,QAAM,CAACgE,UAAD,EAAaC,aAAb,IAA8BjE,QAAQ,EAA5C;AAEA,sBAEI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEK,MAAAA,UAAF;AAAcC,MAAAA,aAAd;AAA6BoD,MAAAA,SAA7B;AAAwCC,MAAAA,YAAxC;AAAsDH,MAAAA,OAAtD;AAA+DC,MAAAA,UAA/D;AAA2EjD,MAAAA,SAA3E;AAAsFC,MAAAA,YAAtF;AAAoGC,MAAAA,MAApG;AAA4GC,MAAAA,SAA5G;AAAuHC,MAAAA,EAAvH;AAA2HC,MAAAA,KAA3H;AAAkIC,MAAAA,IAAlI;AAAwIC,MAAAA,OAAxI;AAAiJC,MAAAA,QAAjJ;AAA2JC,MAAAA,WAA3J;AAAwKC,MAAAA,QAAxK;AAAkLC,MAAAA,WAAlL;AAA+LC,MAAAA,WAA/L;AAA4MC,MAAAA,cAA5M;AAA4NC,MAAAA,UAA5N;AAAwOC,MAAAA,aAAxO;AAAuPC,MAAAA,aAAvP;AAAsQC,MAAAA,gBAAtQ;AAAwRC,MAAAA,MAAxR;AAAgSC,MAAAA,SAAhS;AAA2SS,MAAAA,SAA3S;AAAsTC,MAAAA,YAAtT;AAAoUC,MAAAA,OAApU;AAA6UC,MAAAA,UAA7U;AAAyVC,MAAAA,KAAzV;AAAgWC,MAAAA,QAAhW;AAA0WC,MAAAA,UAA1W;AAAsXC,MAAAA,aAAtX;AAAqYf,MAAAA,SAArY;AAAgZC,MAAAA,YAAhZ;AAA8ZC,MAAAA,aAA9Z;AAA6aC,MAAAA,gBAA7a;AAA+ba,MAAAA,MAA/b;AAAucC,MAAAA,SAAvc;AAAkdC,MAAAA,YAAld;AAAgeC,MAAAA,eAAhe;AAAiff,MAAAA,UAAjf;AAA6fC,MAAAA,aAA7f;AAA4gBC,MAAAA,SAA5gB;AAAuhBC,MAAAA,YAAvhB;AAAqiBa,MAAAA,UAAriB;AAAijBC,MAAAA,aAAjjB;AAAgkBC,MAAAA,SAAhkB;AAA2kBC,MAAAA,YAA3kB;AAAylBC,MAAAA,eAAzlB;AAA0mBC,MAAAA,kBAA1mB;AAA8nBC,MAAAA,UAA9nB;AAA0oBC,MAAAA,aAA1oB;AAAypBK,MAAAA,aAAzpB;AAAwqBC,MAAAA,gBAAxqB;AAA0rBC,MAAAA,cAA1rB;AAA0sBC,MAAAA,iBAA1sB;AAA6tBC,MAAAA,UAA7tB;AAAyuBC,MAAAA;AAAzuB,KAA7B;AAAA,cAEK7D;AAFL;AAAA;AAAA;AAAA;AAAA,UAFJ;AAUH,CAxED;;GAAMD,U;;KAAAA,U;AA4EN,eAAeA,UAAf","sourcesContent":["import React, { createContext, useState } from 'react';\n\nimport { RefreshToken } from '../utils/utils';\n\n\n\nexport const UserContext = createContext();\n\nconst MyProvider = ({ children }) => {\n\n    const [isLoggedIn, setIsLoggedIn] = useState(Boolean(RefreshToken()))\n\n    const [tableData, setTableData] = useState([]);\n\n    const [brands, setBrands] = useState([])\n\n    const [id, setId] = useState(\"Product\")\n\n    const [name, setName] = useState(\"productList\")\n\n    const [editData, setEditData] = useState(\"\")\n\n    const [selected, setSelected] = useState(\"userInfoForm\")\n\n    const [editClicked, setEditClicked] = useState(false)\n\n    const [addClicked, setAddClicked] = useState(false)\n\n    const [formRefValues, setFormRefValues] = useState()\n\n    const [toggle, setToggle] = useState(false)\n\n    const [showModal, setShowModal] = useState(false);\n\n    const [showEditModal, setShowEditModal] = useState(false);\n\n    const [indexModal, setIndexModal] = useState()\n\n    const [itemModal, setItemModal] = useState()\n\n    const [imageData, setImageData] = useState([])\n\n    const [gallery, setGallery] = useState([])\n\n    const [video, setVideo] = useState([])\n\n    const [imagePhone, setImagePhone] = useState([])\n\n    const [source, setSource] = useState([]);\n\n    const [profileImage, setProfileImage] = useState([])\n\n    const [isBlocking, setIsBlocking] = useState(false)\n\n    const [showAlert, setShowAlert] = useState(false)\n\n    const [contextRowIndex, setContextRowIndex] = useState()\n\n    const [cameraData, setCameraData] = useState([]);\n\n    const [boxData, setBoxData] = useState([])\n\n    const [isTouched, setIsTouched] = useState(false)\n\n    const [depositFilter, setDepositFilter] = useState();\n\n    const [withdrawFilter, setWithdrawFilter] = useState();\n\n    const [configData, setConfigData] = useState();\n\n    return (\n\n        <UserContext.Provider value={{ isLoggedIn, setIsLoggedIn, isTouched, setIsTouched, boxData, setBoxData, tableData, setTableData, brands, setBrands, id, setId, name, setName, editData, setEditData, selected, setSelected, editClicked, setEditClicked, addClicked, setAddClicked, formRefValues, setFormRefValues, toggle, setToggle, imageData, setImageData, gallery, setGallery, video, setVideo, imagePhone, setImagePhone, showModal, setShowModal, showEditModal, setShowEditModal, source, setSource, profileImage, setProfileImage, indexModal, setIndexModal, itemModal, setItemModal, isBlocking, setIsBlocking, showAlert, setShowAlert, contextRowIndex, setContextRowIndex, cameraData, setCameraData ,depositFilter, setDepositFilter ,withdrawFilter, setWithdrawFilter, configData, setConfigData}}>\n\n            {children}\n\n        </UserContext.Provider>\n\n    );\n\n}\n\n\n\nexport default MyProvider;\n\n"]},"metadata":{},"sourceType":"module"}