{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL, PREFIX } from \"./constants\";\nimport { getTokenObject } from \"./utils\";\nexport const api = axios.create({\n  // baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  if (!config.headers.Authorization) {\n    let token = getTokenObject();\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token.Authorization}`;\n    }\n  } // refreshToken()\n\n\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => {\n  if (response.status === 201) {\n    let responseMessage = response.data.message ? response.data.message : undefined;\n  }\n\n  return response;\n}, async function (error) {\n  // const originalRequest = error.config;\n  if (error.response.status === 401) {// window.location.href = `${PREFIX}/login`\n  }\n\n  return Promise.reject(error);\n});","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/api.js"],"names":["axios","BASE_URL","PREFIX","getTokenObject","api","create","headers","interceptors","request","use","config","Authorization","token","error","Promise","reject","response","status","responseMessage","data","message","undefined"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,MAAlB,QAAgC,aAAhC;AACA,SAAQC,cAAR,QAA6B,SAA7B;AAGA,OAAO,MAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC5B;AACAC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAFmB,CAAb,CAAZ;AAOPF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6BC,MAAM,IAAI;AACnC,MAAI,CAACA,MAAM,CAACJ,OAAP,CAAeK,aAApB,EAAmC;AAC/B,QAAIC,KAAK,GAAGT,cAAc,EAA1B;;AACA,QAAIS,KAAJ,EAAW;AACPF,MAAAA,MAAM,CAACJ,OAAP,CAAeK,aAAf,GAAgC,UAASC,KAAK,CAACD,aAAc,EAA7D;AACH;AACJ,GANkC,CAQnC;;;AAEA,SAAOD,MAAP;AACH,CAXD,EAWGG,KAAK,IAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAXZ;AAcAT,GAAG,CAACG,YAAJ,CAAiBS,QAAjB,CAA0BP,GAA1B,CAA+BO,QAAD,IAAc;AACxC,MAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA4B;AACxB,QAAIC,eAAe,GAAGF,QAAQ,CAACG,IAAT,CAAcC,OAAd,GAAwBJ,QAAQ,CAACG,IAAT,CAAcC,OAAtC,GAAgDC,SAAtE;AACH;;AACD,SAAOL,QAAP;AACH,CALD,EAKG,gBAAgBH,KAAhB,EAAuB;AACtB;AAEA,MAAIA,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAmC,CAC/B;AACH;;AACL,SAAOH,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACC,CAZD","sourcesContent":["import axios from 'axios';\nimport {BASE_URL, PREFIX } from \"./constants\";\nimport {getTokenObject} from \"./utils\";\n\n\nexport const api = axios.create({\n    // baseURL: BASE_URL,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n})\n\napi.interceptors.request.use(config => {\n    if (!config.headers.Authorization) {\n        let token = getTokenObject()\n        if (token) {\n            config.headers.Authorization = `Bearer ${token.Authorization}`;\n        }\n    }\n\n    // refreshToken()\n\n    return config;\n}, error => Promise.reject(error));\n\n\napi.interceptors.response.use((response) => {\n    if (response.status === 201){\n        let responseMessage = response.data.message ? response.data.message : undefined\n    }\n    return response\n}, async function (error) {\n    // const originalRequest = error.config;\n\n    if (error.response.status === 401) {\n        // window.location.href = `${PREFIX}/login`\n    }\nreturn Promise.reject(error);\n});\n"]},"metadata":{},"sourceType":"module"}