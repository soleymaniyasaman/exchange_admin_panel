{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\n\nvar PaneProperties =\n/** @class */\nfunction (_super) {\n  __extends(PaneProperties, _super);\n\n  function PaneProperties() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], PaneProperties.prototype, \"size\", void 0);\n\n  __decorate([Property(false)], PaneProperties.prototype, \"collapsible\", void 0);\n\n  __decorate([Property(false)], PaneProperties.prototype, \"collapsed\", void 0);\n\n  __decorate([Property(true)], PaneProperties.prototype, \"resizable\", void 0);\n\n  __decorate([Property(null)], PaneProperties.prototype, \"min\", void 0);\n\n  __decorate([Property(null)], PaneProperties.prototype, \"max\", void 0);\n\n  __decorate([Property()], PaneProperties.prototype, \"content\", void 0);\n\n  __decorate([Property('')], PaneProperties.prototype, \"cssClass\", void 0);\n\n  return PaneProperties;\n}(ChildProperty);\n\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\n\nvar Splitter =\n/** @class */\nfunction (_super) {\n  __extends(Splitter, _super);\n  /**\n   * Initializes a new instance of the Splitter class.\n   *\n   * @param options  - Specifies Splitter model properties as options.\n   * @param element  - Specifies the element that is rendered as an Splitter.\n   */\n\n\n  function Splitter(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.allPanes = [];\n    _this.paneOrder = [];\n    _this.separatorOrder = [];\n    _this.allBars = [];\n    _this.previousCoordinates = {};\n    _this.currentCoordinates = {};\n    _this.updatePrePaneInPercentage = false;\n    _this.updateNextPaneInPercentage = false;\n    _this.panesDimensions = [];\n    _this.border = 0;\n    _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n    _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n    _this.iconsDelay = 300;\n    _this.templateElement = [];\n    _this.collapseFlag = false;\n    _this.expandFlag = true;\n    return _this;\n  }\n  /**\n   * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n   *\n   * @param  {SplitterModel} newProp - specifies the new property\n   * @param  {SplitterModel} oldProp - specifies the old property\n   * @returns {void}\n   * @private\n   */\n\n\n  Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n    if (!this.element.classList.contains(ROOT)) {\n      return;\n    }\n\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'height':\n          this.setSplitterSize(this.element, newProp.height, 'height');\n          break;\n\n        case 'width':\n          this.setSplitterSize(this.element, newProp.width, 'width');\n          break;\n\n        case 'cssClass':\n          this.setCssClass(this.element, newProp.cssClass);\n          break;\n\n        case 'enabled':\n          this.isEnabled(this.enabled);\n          break;\n\n        case 'enableReversePanes':\n          this.setReversePane();\n          break;\n\n        case 'separatorSize':\n          this.setSeparatorSize(newProp.separatorSize);\n          break;\n\n        case 'orientation':\n          this.changeOrientation(newProp.orientation);\n          break;\n\n        case 'paneSettings':\n          {\n            if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n              var paneCounts = Object.keys(newProp.paneSettings);\n\n              for (var i = 0; i < paneCounts.length; i++) {\n                var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n\n                for (var j = 0; j < changedPropsCount; j++) {\n                  var property = Object.keys(newProp.paneSettings[index])[j];\n\n                  switch (property) {\n                    case 'content':\n                      {\n                        var newValue = Object(newProp.paneSettings[index])[property];\n\n                        if (!isNullOrUndefined(newValue)) {\n                          this.allPanes[index].innerHTML = '';\n                          this.setTemplate(newValue, this.allPanes[index]);\n                        }\n\n                        break;\n                      }\n\n                    case 'resizable':\n                      {\n                        var newVal = Object(newProp.paneSettings[index])[property];\n                        this.resizableModel(index, newVal);\n                        break;\n                      }\n\n                    case 'collapsible':\n                      this.collapsibleModelUpdate(index);\n                      break;\n\n                    case 'collapsed':\n                      // eslint-disable-next-line\n                      newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                      break;\n\n                    case 'cssClass':\n                      this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                      break;\n\n                    case 'size':\n                      {\n                        var newValSize = Object(newProp.paneSettings[index])[property];\n\n                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                          this.updatePaneSize(newValSize, index);\n                        }\n\n                        break;\n                      }\n                  }\n                }\n              }\n            } else {\n              this.destroyPaneSettings();\n              this.allBars = [];\n              this.allPanes = [];\n              this.createSplitPane(this.element);\n              this.addSeparator(this.element);\n              this.getPanesDimensions();\n              this.setRTL(this.enableRtl);\n              this.isCollapsed();\n            }\n\n            break;\n          }\n\n        case 'enableRtl':\n          this.setRTL(newProp.enableRtl);\n          break;\n      }\n    }\n  };\n\n  Splitter.prototype.updatePaneSize = function (newValSize, index) {\n    this.allPanes[index].style.flexBasis = newValSize;\n    var flexPaneIndexes = [];\n    var staticPaneWidth;\n    var flexCount = 0;\n\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n        flexPaneIndexes[flexCount] = i;\n        flexCount++;\n      } else if (this.paneSettings[i].size) {\n        staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n      }\n    }\n\n    staticPaneWidth = this.orientation === 'Horizontal' ? this.allBars[0].offsetWidth * this.allBars.length + staticPaneWidth : this.allBars[0].offsetHeight * this.allBars.length + staticPaneWidth;\n    var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight) - staticPaneWidth - this.border * 2;\n    var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n\n    for (var j = 0; j < flexPaneIndexes.length; j++) {\n      this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n    }\n\n    this.allPanes[index].classList.add(STATIC_PANE);\n  };\n\n  Splitter.prototype.preRender = function () {\n    this.onReportWindowSize = this.reportWindowSize.bind(this);\n    this.onMouseMoveHandler = this.onMouseMove.bind(this);\n    this.onMouseUpHandler = this.onMouseUp.bind(this);\n    this.onTouchMoveHandler = this.onMouseMove.bind(this);\n    this.onTouchEndHandler = this.onMouseUp.bind(this);\n    this.wrapper = this.element.cloneNode(true);\n    this.wrapperParent = this.element.parentElement;\n    removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n    var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n    addClass([this.element], orientation);\n    var name = Browser.info.name;\n    var css = name === 'msie' ? 'e-ie' : '';\n    this.setCssClass(this.element, css);\n\n    if (Browser.isDevice) {\n      addClass([this.element], SPLIT_TOUCH);\n    }\n  };\n\n  Splitter.prototype.getPersistData = function () {\n    return this.addOnPersist(['paneSettings']);\n  };\n  /**\n   * Returns the current module name.\n   *\n   * @returns {string} - returns the string value\n   * @private\n   */\n\n\n  Splitter.prototype.getModuleName = function () {\n    return 'splitter';\n  };\n  /**\n   * To Initialize the control rendering\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Splitter.prototype.render = function () {\n    this.checkDataAttributes();\n    this.setCssClass(this.element, this.cssClass);\n    this.isEnabled(this.enabled);\n    this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n    this.createSplitPane(this.element);\n    this.addSeparator(this.element);\n    this.getPanesDimensions();\n    this.setPaneSettings();\n    this.setRTL(this.enableRtl);\n\n    if (this.enableReversePanes) {\n      this.setReversePane();\n    }\n\n    this.collapseFlag = true;\n    this.isCollapsed();\n    this.collapseFlag = false;\n    EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    this.renderComplete();\n    this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n    EventHandler.add(this.element, 'keydown', this.onMove, this);\n  };\n\n  Splitter.prototype.onDocumentClick = function (e) {\n    if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n      this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n      this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n    }\n  };\n\n  Splitter.prototype.checkPaneSize = function (e) {\n    var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n    var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n    var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n\n    if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n      var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n      var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n      this.totalPercent = previousFlexBasis + nextFlexBasis;\n      this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n\n      if (e.type === 'keydown' && !isNullOrUndefined(e.keyCode)) {\n        if ((e.keyCode === 39 || e.keyCode === 40) && nextPaneSize > 0 && this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < this.convertPercentageToPixel(nextFlexBasis - 1 + '%')) {\n          this.previousPane.style.flexBasis = previousFlexBasis + 1 + '%';\n          this.nextPane.style.flexBasis = nextFlexBasis - 1 + '%';\n        } else if ((e.keyCode === 37 || e.keyCode === 38) && prePaneSize > 0 && this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < this.convertPercentageToPixel(previousFlexBasis - 1 + '%')) {\n          this.previousPane.style.flexBasis = previousFlexBasis - 1 + '%';\n          this.nextPane.style.flexBasis = nextFlexBasis + 1 + '%';\n        }\n      }\n    } else {\n      this.totalWidth = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth + this.nextPane.offsetWidth : this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n\n      if (e.type === 'keydown' && !isNullOrUndefined(e.keyCode)) {\n        if ((e.keyCode === 39 || e.keyCode === 40) && nextPaneSize > 0 && this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < nextPaneSize + splitBarSize) {\n          this.addStaticPaneClass();\n          this.previousPane.style.flexBasis = prePaneSize + splitBarSize + 'px';\n          this.nextPane.style.flexBasis = nextPaneSize < splitBarSize ? '0px' : nextPaneSize - splitBarSize + 'px';\n        } else if ((e.keyCode === 37 || e.keyCode === 38) && prePaneSize > 0 && this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < prePaneSize - splitBarSize) {\n          this.addStaticPaneClass();\n          this.previousPane.style.flexBasis = prePaneSize < splitBarSize ? '0px' : prePaneSize - splitBarSize + 'px';\n          this.nextPane.style.flexBasis = nextPaneSize + splitBarSize + 'px';\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.onMove = function (event) {\n    if (this.allPanes.length > 1) {\n      var index = this.getSeparatorIndex(this.currentSeparator);\n      var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n      var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n      var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n\n      if ((this.orientation !== 'Horizontal' && event.keyCode === 38 || this.orientation === 'Horizontal' && event.keyCode === 39 || this.orientation === 'Horizontal' && event.keyCode === 37 || this.orientation !== 'Horizontal' && event.keyCode === 40) && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || isPrevpaneExpanded && !isNextpaneCollapsed) && document.activeElement.classList.contains(SPLIT_BAR) && this.paneSettings[index].resizable && this.paneSettings[index + 1].resizable) {\n        event.preventDefault();\n        this.checkPaneSize(event);\n        this.triggerResizing(event);\n      } else if (event.keyCode === 13 && this.paneSettings[index].collapsible && document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n          this.collapse(index);\n          addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        } else {\n          this.expand(index);\n          addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.getMinInPixel = function (minValue) {\n    var min;\n\n    if (isNullOrUndefined(minValue)) {\n      return 0;\n    }\n\n    var paneMinRange = this.convertPixelToNumber(minValue.toString());\n\n    if (minValue.indexOf('%') > 0) {\n      paneMinRange = this.convertPercentageToPixel(minValue);\n    }\n\n    min = this.convertPixelToNumber(paneMinRange.toString());\n    return min;\n  };\n  /**\n   * @param {string} value - specifies the string value\n   * @returns {string} returns the string\n   * @hidden\n   */\n\n\n  Splitter.prototype.sanitizeHelper = function (value) {\n    if (this.enableHtmlSanitizer) {\n      var item = SanitizeHtmlHelper.beforeSanitize();\n      var beforeEvent = {\n        cancel: false,\n        helper: null\n      };\n      extend(item, item, beforeEvent);\n      this.trigger('beforeSanitizeHtml', item);\n\n      if (item.cancel && !isNullOrUndefined(item.helper)) {\n        value = item.helper(value);\n      } else if (!item.cancel) {\n        value = SanitizeHtmlHelper.serializeValue(item, value);\n      }\n    }\n\n    return value;\n  };\n\n  Splitter.prototype.checkDataAttributes = function () {\n    var api;\n    var value; // Element values\n\n    for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n      value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n\n      if (!isNullOrUndefined(value)) {\n        api = this.removeDataPrefix(this.validElementAttributes[dataIndex]); // eslint-disable-next-line\n\n        this[api] = value;\n      }\n    } // Pane values\n\n\n    for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n      for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n        value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n\n        if (!isNullOrUndefined(value)) {\n          api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n          value = api === 'collapsible' || api === 'resizable' ? value === 'true' : value;\n\n          if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n            this.paneSettings[paneIndex] = {\n              size: '',\n              min: null,\n              max: null,\n              content: '',\n              resizable: true,\n              collapsible: false,\n              collapsed: false\n            };\n          } // eslint-disable-next-line\n\n\n          var paneAPI = this.paneSettings[paneIndex][api];\n\n          if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n            // eslint-disable-next-line\n            this.paneSettings[paneIndex][api] = value;\n          }\n\n          if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n            // eslint-disable-next-line\n            this.paneSettings[paneIndex][api] = value;\n          }\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.destroyPaneSettings = function () {\n    [].slice.call(this.element.children).forEach(function (el) {\n      detach(el);\n    });\n    this.restoreElem();\n  };\n\n  Splitter.prototype.setPaneSettings = function () {\n    var childCount = this.allPanes.length;\n    var paneCollection = [];\n    var paneValue = {\n      size: '',\n      min: null,\n      max: null,\n      content: '',\n      resizable: true,\n      collapsed: false,\n      collapsible: false,\n      cssClass: ''\n    };\n\n    for (var i = 0; i < childCount; i++) {\n      if (isNullOrUndefined(this.paneSettings[i])) {\n        paneCollection[i] = paneValue;\n      } else {\n        paneCollection[i] = this.paneSettings[i];\n      }\n    }\n\n    this.setProperties({\n      'paneSettings': paneCollection\n    }, true);\n  };\n\n  Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n    return this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow);\n  };\n\n  Splitter.prototype.removeDataPrefix = function (attribute) {\n    return attribute.slice(attribute.lastIndexOf('-') + 1);\n  };\n\n  Splitter.prototype.setRTL = function (rtl) {\n    // eslint-disable-next-line\n    rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n  };\n\n  Splitter.prototype.setReversePane = function () {\n    this.allPanes = this.allPanes.reverse();\n    this.allBars = this.allBars.reverse();\n    addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n    removeClass([this.allBars[0]], LAST_BAR);\n    this.setProperties({\n      'paneSettings': this.paneSettings.reverse()\n    }, true);\n\n    if (this.enableReversePanes) {\n      this.element.setAttribute('dir', 'rtl');\n    } else {\n      this.element.removeAttribute('dir');\n    }\n  };\n\n  Splitter.prototype.setSplitterSize = function (element, size, property) {\n    var style = property === 'width' ? {\n      'width': formatUnit(size)\n    } : {\n      'height': formatUnit(size)\n    };\n    setStyleAttribute(element, style);\n  };\n\n  Splitter.prototype.getPanesDimensions = function () {\n    for (var index = 0; index < this.allPanes.length; index++) {\n      // eslint-disable-next-line\n      this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) : this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n    }\n  };\n\n  Splitter.prototype.setCssClass = function (element, className) {\n    if (className) {\n      addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n    }\n  };\n\n  Splitter.prototype.hideResizer = function (target) {\n    addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n  };\n\n  Splitter.prototype.showResizer = function (target) {\n    if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) && !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n      removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    }\n  };\n\n  Splitter.prototype.resizableModel = function (index, newVal) {\n    var paneIndex = index === this.allBars.length ? index - 1 : index;\n    var i = index;\n    EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n\n    if (newVal) {\n      EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n\n      if (this.isResizable()) {\n        this.showResizer(this.allBars[paneIndex]);\n        removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n        this.allBars[paneIndex].classList.add(RESIZABLE_BAR); // eslint-disable-next-line\n\n        index === this.allBars.length ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n        this.updateResizablePanes(i);\n      }\n    } else {\n      this.updateResizablePanes(i);\n      this.hideResizer(this.allBars[paneIndex]);\n      this.allBars[paneIndex].classList.remove(RESIZABLE_BAR); // eslint-disable-next-line\n\n      index === this.allBars.length ? this.allPanes[index].classList.remove(RESIZABLE_PANE) : this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n    }\n  };\n\n  Splitter.prototype.collapsibleModelUpdate = function (index) {\n    var paneIndex = index === this.allBars.length ? index - 1 : index;\n    var arrow2 = this.orientation === 'Horizontal' ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n    var arrow1 = this.orientation === 'Horizontal' ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n    this.paneCollapsible(this.allPanes[index], index);\n    this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n  };\n\n  Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n    return selectAll('.' + arrow, this.allBars[barIndex])[0];\n  };\n\n  Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n    if (!isNullOrUndefined(index)) {\n      var targetEle = void 0;\n      var lastBarIndex = index === this.allBars.length;\n      var barIndex = lastBarIndex ? index - 1 : index;\n\n      if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n        targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n      } else {\n        targetEle = lastBarIndex ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n      }\n\n      targetEle.click();\n    }\n  };\n\n  Splitter.prototype.isCollapsed = function (index) {\n    var _this = this;\n\n    if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n      return;\n    }\n\n    this.expandFlag = false;\n\n    if (!isNullOrUndefined(index)) {\n      this.collapseFlag = true;\n      var targetEle = void 0;\n      var lastBarIndex = index === this.allBars.length;\n      var barIndex = lastBarIndex ? index - 1 : index;\n\n      if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n        targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n      } else {\n        targetEle = lastBarIndex ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) : this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n      }\n\n      var event_1 = {\n        target: targetEle\n      };\n      var eventArgs = this.beforeAction(event_1);\n      this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n        if (!beforeCollapseArgs.cancel) {\n          var collapsedindex = [];\n          collapsedindex[0] = index;\n          var j = 1;\n\n          for (var i = 0; i < _this.allPanes.length; i++) {\n            if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n              collapsedindex[j] = i;\n              j++;\n            }\n          }\n\n          collapsedindex = collapsedindex.sort();\n\n          _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n\n          for (var i = 0; i < collapsedindex.length; i++) {\n            if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n              _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n            }\n          }\n\n          for (var i = collapsedindex.length; i > 0; i--) {\n            if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n              var targetArrow = _this.targetArrows();\n\n              _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n            }\n          }\n\n          var collapseEventArgs = _this.afterAction(event_1);\n\n          _this.trigger('collapsed', collapseEventArgs);\n\n          _this.collapseFlag = false;\n        }\n      });\n    } else {\n      for (var m = 0; m < this.allPanes.length; m++) {\n        if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n          this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n      }\n\n      for (var m = this.allPanes.length - 1; m >= 0; m--) {\n        if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed && !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n          var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n\n          if (m !== 0) {\n            var targetEle = this.collapseArrow(m - 1, collapseArrow);\n            targetEle.click();\n          }\n\n          if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            var targetEle = this.collapseArrow(m - 1, collapseArrow);\n            targetEle.click();\n          }\n        }\n      }\n    }\n\n    this.expandFlag = true;\n  };\n\n  Splitter.prototype.targetArrows = function () {\n    this.splitterProperty();\n    return {\n      collapseArrow: this.orientation === 'Horizontal' ? ARROW_LEFT : ARROW_UP,\n      lastBarArrow: this.orientation === 'Vertical' ? ARROW_DOWN : ARROW_RIGHT\n    };\n  };\n\n  Splitter.prototype.collapsedOnchange = function (index) {\n    if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed) && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n      this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n    }\n  };\n\n  Splitter.prototype.isEnabled = function (enabled) {\n    // eslint-disable-next-line\n    enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n  };\n\n  Splitter.prototype.setSeparatorSize = function (size) {\n    var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n    var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n\n    for (var index = 0; index < this.allBars.length; index++) {\n      var splitBar = selectAll('.' + separator, this.element)[index];\n      var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n\n      if (this.orientation === 'Horizontal') {\n        splitBar.style.width = sizeValue;\n\n        if (!isNullOrUndefined(resizeBar)) {\n          resizeBar.style.width = sizeValue;\n        }\n      } else {\n        splitBar.style.height = sizeValue;\n\n        if (!isNullOrUndefined(resizeBar)) {\n          resizeBar.style.height = sizeValue;\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.changeOrientation = function (orientation) {\n    var isVertical = orientation === 'Vertical';\n    this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n    this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n\n    for (var index = 0; index < this.allPanes.length; index++) {\n      this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n      this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n    }\n\n    for (var index = 0; index < this.allBars.length; index++) {\n      detach(this.allBars[index]);\n    }\n\n    this.allBars = [];\n    this.addSeparator(this.element);\n  };\n\n  Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n    var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n    return paneEle;\n  };\n\n  Splitter.prototype.collectPanes = function (childNodes) {\n    var elements = [];\n\n    for (var i = 0; i < childNodes.length; i++) {\n      if (childNodes[i].classList.contains(PANE)) {\n        elements.push(childNodes[i]);\n      }\n    }\n\n    return elements;\n  };\n\n  Splitter.prototype.getPrevPane = function (order) {\n    return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n  };\n\n  Splitter.prototype.getNextPane = function (order) {\n    return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n  };\n\n  Splitter.prototype.getOrderPane = function (order) {\n    var pane;\n\n    for (var i = 0; i < this.element.children.length; i++) {\n      if (parseInt(this.element.children[i].style.order, 10) === order) {\n        pane = this.element.children[i];\n      }\n    }\n\n    return pane;\n  };\n\n  Splitter.prototype.getOrderIndex = function (order, type) {\n    var index;\n    var panes;\n\n    if (type === 'pane') {\n      panes = this.allPanes;\n    } else {\n      panes = this.allBars;\n    }\n\n    for (var i = 0; i < panes.length; i++) {\n      if (parseInt(panes[i].style.order, 10) === order) {\n        index = i;\n      }\n    }\n\n    return index;\n  };\n\n  Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n    var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px'; // eslint-disable-next-line\n\n    this.orientation === 'Horizontal' ? resizeHanlder.style.width = sizeValue : resizeHanlder.style.height = sizeValue;\n  };\n\n  Splitter.prototype.addResizeHandler = function (currentBar) {\n    var resizeHanlder = this.createElement('div');\n    addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n    this.updateSeparatorSize(resizeHanlder);\n    currentBar.appendChild(resizeHanlder);\n  };\n\n  Splitter.prototype.getHeight = function (target) {\n    var height = this.height;\n    height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n    return height;\n  };\n\n  Splitter.prototype.getWidth = function (target) {\n    var width = this.width;\n    width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n    return width;\n  };\n\n  Splitter.prototype.setDimension = function (height, width) {\n    setStyleAttribute(this.element, {\n      'height': height,\n      'width': width\n    });\n  };\n\n  Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n    if (!isNullOrUndefined(this.paneSettings[index])) {\n      if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n        // eslint-disable-next-line\n        this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n\n        if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n          // eslint-disable-next-line\n          this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n        }\n\n        if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n          if (this.paneSettings[index + 1].collapsible) {\n            // eslint-disable-next-line\n            this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n          }\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.updateIconClass = function () {\n    if (this.orientation === 'Horizontal') {\n      this.leftArrow = ARROW_LEFT;\n      this.rightArrow = ARROW_RIGHT;\n    } else {\n      this.leftArrow = ARROW_UP;\n      this.rightArrow = ARROW_DOWN;\n    }\n  };\n\n  Splitter.prototype.createSeparator = function (i) {\n    var separator = this.createElement('div');\n    this.allBars.push(separator);\n    var arrow1 = this.createElement('button');\n    var arrow2 = this.createElement('button');\n    arrow1.setAttribute('tabindex', '-1');\n    arrow2.setAttribute('tabindex', '-1');\n    arrow1.setAttribute('aria-label', 'Toggle navigation');\n    arrow2.setAttribute('aria-label', 'Toggle navigation');\n    arrow1.setAttribute('type', 'button');\n    arrow2.setAttribute('type', 'button');\n    var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px'; // eslint-disable-next-line\n\n    var proxy = this;\n\n    if (this.orientation === 'Horizontal') {\n      this.updateIconClass();\n      addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n      addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n      addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n      separator.style.width = size;\n    } else {\n      addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n      addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n      addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n      this.updateIconClass();\n      separator.style.height = size;\n    }\n\n    this.addMouseActions(separator);\n    separator.appendChild(arrow2);\n    this.addResizeHandler(separator);\n    separator.appendChild(arrow1);\n    this.updateCollapseIcons(i, arrow1, arrow2);\n    separator.setAttribute('tabindex', '0');\n\n    if (this.enableReversePanes) {\n      separator.setAttribute('dir', 'ltr');\n    } else {\n      separator.removeAttribute('dir');\n    }\n\n    separator.addEventListener('focus', function () {\n      separator.classList.add(SPLIT_BAR_ACTIVE);\n      proxy.currentSeparator = separator;\n      proxy.getPaneDetails();\n    });\n    separator.addEventListener('blur', function () {\n      separator.classList.remove(SPLIT_BAR_ACTIVE);\n    });\n    return separator;\n  };\n\n  Splitter.prototype.updateResizablePanes = function (index) {\n    this.getPaneDetails(); // eslint-disable-next-line\n\n    this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n  };\n\n  Splitter.prototype.addSeparator = function (target) {\n    var childCount = this.allPanes.length;\n    var clonedEle = target.children;\n    var separator;\n    var proxy;\n\n    for (var i = 0; i < childCount; i++) {\n      if (i < childCount - 1) {\n        separator = this.createSeparator(i);\n        setStyleAttribute(separator, {\n          'order': i * 2 + 1\n        });\n        this.separatorOrder.push(i * 2 + 1);\n        clonedEle[i].parentNode.appendChild(separator);\n        this.currentSeparator = separator;\n        separator.setAttribute('role', 'separator');\n        separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n        this.wireClickEvents();\n\n        if (!isNullOrUndefined(separator)) {\n          if (this.isResizable()) {\n            EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n            var eventName = Browser.info.name === 'msie' ? 'pointerdown' : 'touchstart';\n            EventHandler.add(separator, eventName, this.onMouseDown, this);\n            separator.classList.add(RESIZABLE_BAR);\n            this.updateResizablePanes(i);\n          } else {\n            addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n          }\n        }\n      } else {\n        if (separator) {\n          addClass([separator], LAST_BAR);\n        }\n\n        if (childCount > 1) {\n          this.updateResizablePanes(i);\n        }\n      }\n    }\n\n    if (Browser.info.name === 'msie') {\n      var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n\n      for (var i = 0; i < allBar.length; i++) {\n        var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n        allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n        allBar[i].style.paddingRight = sepSize / 2 + 'px';\n      }\n    }\n  };\n\n  Splitter.prototype.isResizable = function () {\n    var resizable = false;\n\n    if (!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) && this.paneSettings[this.getPreviousPaneIndex()].resizable && !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) && this.paneSettings[this.getNextPaneIndex()].resizable || isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n      resizable = true;\n    }\n\n    return resizable;\n  };\n\n  Splitter.prototype.addMouseActions = function (separator) {\n    var _this = this;\n\n    var sTout;\n    var hoverTimeOut;\n    separator.addEventListener('mouseenter', function () {\n      /* istanbul ignore next */\n      sTout = setTimeout(function () {\n        addClass([separator], [SPLIT_BAR_HOVER]);\n      }, _this.iconsDelay);\n    });\n    separator.addEventListener('mouseleave', function () {\n      clearTimeout(sTout);\n      removeClass([separator], [SPLIT_BAR_HOVER]);\n    });\n    separator.addEventListener('mouseout', function () {\n      clearTimeout(hoverTimeOut);\n    });\n    separator.addEventListener('mouseover', function () {\n      /* istanbul ignore next */\n      hoverTimeOut = setTimeout(function () {\n        addClass([separator], [SPLIT_BAR_HOVER]);\n      }, _this.iconsDelay);\n    });\n  };\n\n  Splitter.prototype.getEventType = function (e) {\n    return e.indexOf('mouse') > -1 ? 'mouse' : 'touch';\n  };\n\n  Splitter.prototype.updateCurrentSeparator = function (target) {\n    this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n  };\n\n  Splitter.prototype.isSeparator = function (target) {\n    return target.classList.contains(SPLIT_BAR) ? false : true;\n  };\n\n  Splitter.prototype.isMouseEvent = function (e) {\n    var isMouse = false;\n\n    if (this.getEventType(e.type) === 'mouse' || !isNullOrUndefined(e.pointerType) && this.getEventType(e.pointerType) === 'mouse') {\n      isMouse = true;\n    }\n\n    return isMouse;\n  };\n\n  Splitter.prototype.updateCursorPosition = function (e, type) {\n    if (this.isMouseEvent(e)) {\n      this.changeCoordinates({\n        x: e.pageX,\n        y: e.pageY\n      }, type);\n    } else {\n      var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n      this.changeCoordinates({\n        x: eventType.pageX,\n        y: eventType.pageY\n      }, type);\n    }\n  };\n\n  Splitter.prototype.changeCoordinates = function (coordinates, type) {\n    if (type === 'previous') {\n      this.previousCoordinates = coordinates;\n    } else {\n      this.currentCoordinates = coordinates;\n    }\n  };\n\n  Splitter.prototype.reportWindowSize = function () {\n    var _this = this;\n\n    var paneCount = this.allPanes.length;\n\n    if (!document.body.contains(this.element)) {\n      document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n      return;\n    }\n\n    for (var i = 0; i < paneCount; i++) {\n      if (isNullOrUndefined(this.paneSettings[i].size)) {\n        this.allPanes[i].classList.remove(STATIC_PANE);\n      }\n\n      if (paneCount - 1 === i) {\n        var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n\n        if (staticPaneCount === paneCount) {\n          removeClass([this.allPanes[i]], STATIC_PANE);\n        }\n      }\n    }\n\n    if (paneCount > 0) {\n      setTimeout(function () {\n        _this.updateSplitterSize(true);\n      }, 200);\n    }\n  };\n\n  Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n    var totalWidth = 0;\n    var flexPaneIndexes = [];\n    var flexCount = 0;\n    var children = this.element.children;\n\n    for (var i = 0; i < children.length; i++) {\n      totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth : children[i].offsetHeight;\n    }\n\n    for (var j = 0; j < this.allBars.length; j++) {\n      totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) + parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) + parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n    }\n\n    var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth - (this.border * 2 + totalWidth) : this.element.offsetHeight - (this.border * 2 + totalWidth);\n\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n        flexPaneIndexes[flexCount] = i;\n        flexCount++;\n      }\n    }\n\n    var avgDiffWidth = diff / flexPaneIndexes.length;\n\n    for (var j = 0; j < flexPaneIndexes.length; j++) {\n      this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ? this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth + 'px' : this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth + 'px';\n    }\n\n    if (this.allPanes.length === 2 && iswindowResize) {\n      var paneCount = this.allPanes.length;\n      var minValue = void 0;\n      var paneMinRange = void 0;\n      var paneIndex = 0;\n      var updatePane = void 0;\n      var flexPane = void 0;\n\n      for (var i = 0; i < paneCount; i++) {\n        if (!isNullOrUndefined(this.paneSettings[i].min)) {\n          paneMinRange = this.convertPixelToNumber(this.paneSettings[i].min.toString());\n\n          if (this.paneSettings[i].min.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n          }\n\n          minValue = this.convertPixelToNumber(paneMinRange.toString());\n\n          if (this.allPanes[i].offsetWidth < minValue) {\n            if (i === paneIndex) {\n              updatePane = this.allPanes[i];\n              flexPane = this.allPanes[i + 1];\n            } else {\n              updatePane = this.allPanes[i];\n              flexPane = this.allPanes[i - 1];\n            }\n\n            var sizeDiff = minValue - this.allPanes[i].offsetWidth;\n            var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n            updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePane.offsetWidth + sizeDiff) + '%' : updatePane.offsetWidth + sizeDiff + 'px';\n            flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ? this.convertPixelToPercentage(flexPane.offsetWidth - sizeDiff) + '%' : flexPane.offsetWidth - sizeDiff + 'px';\n          }\n        }\n      }\n    }\n  };\n\n  Splitter.prototype.wireResizeEvents = function () {\n    document.addEventListener('mousemove', this.onMouseMoveHandler, true);\n    document.addEventListener('mouseup', this.onMouseUpHandler, true);\n    var touchMoveEvent = Browser.info.name === 'msie' ? 'pointermove' : 'touchmove';\n    var touchEndEvent = Browser.info.name === 'msie' ? 'pointerup' : 'touchend';\n    document.addEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n    document.addEventListener(touchEndEvent, this.onTouchEndHandler, true);\n  };\n\n  Splitter.prototype.unwireResizeEvents = function () {\n    this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n    var touchMoveEvent = Browser.info.name === 'msie' ? 'pointermove' : 'touchmove';\n    var touchEndEvent = Browser.info.name === 'msie' ? 'pointerup' : 'touchend';\n    document.removeEventListener('mousemove', this.onMouseMoveHandler, true);\n    document.removeEventListener('mouseup', this.onMouseUpHandler, true);\n    document.removeEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n    document.removeEventListener(touchEndEvent, this.onTouchEndHandler, true);\n  };\n\n  Splitter.prototype.wireClickEvents = function () {\n    EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n  };\n\n  Splitter.prototype.clickHandler = function (e) {\n    if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n      var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n\n      if (hoverBars.length > 0) {\n        removeClass(hoverBars, SPLIT_BAR_HOVER);\n      }\n\n      e.target.classList.add(SPLIT_BAR_HOVER);\n    }\n\n    var icon = e.target;\n\n    if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n      this.collapseAction(e);\n    }\n\n    if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n      this.expandAction(e);\n    }\n\n    var totalWidth = 0;\n    var children = this.element.children;\n\n    for (var i = 0; i < children.length; i++) {\n      totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth : children[i].offsetHeight;\n    }\n\n    if (totalWidth > this.element.offsetWidth) {\n      this.updateSplitterSize();\n    }\n  };\n\n  Splitter.prototype.expandAction = function (e) {\n    var _this = this;\n\n    this.splitterDetails(e);\n    var eventArgs = this.beforeAction(e);\n\n    if (this.expandFlag) {\n      this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n        if (!beforeExpandArgs.cancel) {\n          _this.expandPane(e);\n        }\n\n        var expandEventArgs = _this.afterAction(e);\n\n        _this.trigger('expanded', expandEventArgs);\n      });\n    } else {\n      this.expandPane(e);\n    }\n  };\n\n  Splitter.prototype.expandPane = function (e) {\n    this.removeStaticPanes();\n    var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n    var flexStatus = !this.previousPane.classList.contains(COLLAPSE_PANE) && this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) && !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2);\n    var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n\n    if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n      removeClass([this.nextPane], EXPAND_PANE);\n      removeClass([this.previousPane], collapseClass);\n      addClass([this.previousPane], EXPAND_PANE);\n      addClass([this.nextPane], collapseClass);\n\n      if (this.expandFlag) {\n        this.updatePaneSettings(this.nextPaneIndex, true);\n      }\n    } else {\n      removeClass([this.previousPane], collapseClass);\n      removeClass([this.nextPane], EXPAND_PANE);\n\n      if (this.expandFlag) {\n        this.updatePaneSettings(this.prevPaneIndex, false);\n      }\n    }\n\n    this.updateIconsOnExpand(e);\n    this.previousPane.setAttribute('aria-expanded', 'true');\n    this.nextPane.setAttribute('aria-expanded', 'false');\n    this.updateFlexGrow(this.checkStaticPanes());\n\n    if (flexStatus) {\n      this.previousPane.classList.remove(EXPAND_PANE);\n      this.previousPane.style.flexGrow = '';\n    }\n  };\n\n  Splitter.prototype.checkStaticPanes = function () {\n    var staticPane = true;\n\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n        if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n          staticPane = true;\n        } else {\n          staticPane = false;\n        }\n      }\n    }\n\n    return staticPane;\n  };\n\n  Splitter.prototype.updateFlexGrow = function (status) {\n    var collapseCount = 0;\n\n    for (var j = 0; j < this.element.children.length; j++) {\n      if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n        collapseCount = collapseCount + 1;\n      }\n    }\n\n    var visiblePane = collapseCount === this.allPanes.length - 2;\n    var panes = this.allPanes;\n\n    for (var i = 0; i < panes.length; i++) {\n      if (panes[i].classList.contains(EXPAND_PANE)) {\n        panes[i].style.flexGrow = '1';\n      } else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n        panes[i].style.flexGrow = '0';\n      } else {\n        panes[i].style.flexGrow = '';\n      }\n\n      if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n        this.nextPane.style.flexGrow = '1';\n      }\n\n      if (visiblePane && !this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size && i !== this.allPanes.length - 1) {\n        panes[i].style.flexGrow = '';\n      }\n    }\n  };\n\n  Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n    addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n  };\n\n  Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n    removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n  };\n\n  Splitter.prototype.updateIconsOnCollapse = function (e) {\n    this.splitterProperty();\n\n    if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n      addClass([e.target], HIDE_ICON);\n\n      if (this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.showCurrentBarIcon();\n      }\n\n      this.resizableModel(this.currentBarIndex, false);\n\n      if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n      }\n\n      if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n          this.showTargetBarIcon(this.prevBar, this.leftArrow);\n        } else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n          this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n        }\n      }\n\n      if (!isNullOrUndefined(this.prevBar)) {\n        this.resizableModel(this.currentBarIndex - 1, false);\n        this.hideTargetBarIcon(this.prevBar, this.arrow);\n      }\n\n      if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n      }\n    } else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n      if (this.paneSettings[this.currentBarIndex].resizable) {\n        this.resizableModel(this.currentBarIndex, true);\n      }\n\n      if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.currentBarIndex + 1].resizable) {\n        this.resizableModel(this.currentBarIndex + 1, true);\n      }\n\n      if (!this.paneSettings[this.currentBarIndex].collapsible) {\n        addClass([e.target], HIDE_ICON);\n      }\n\n      if (this.previousPane && this.prevPaneIndex === 0 && this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n      }\n\n      if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n      }\n\n      if (!this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n      }\n\n      if (!isNullOrUndefined(this.nextBar)) {\n        if (this.nextPane.nextElementSibling && this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex + 1].collapsible || !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex].collapsible) {\n          this.showTargetBarIcon(this.nextBar, this.leftArrow);\n        } else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible && this.paneSettings[this.currentBarIndex]) {\n          this.hideTargetBarIcon(this.nextBar, this.arrow);\n        }\n      }\n\n      if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n        this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n      }\n    }\n  };\n\n  Splitter.prototype.collapseAction = function (e) {\n    var _this = this;\n\n    this.splitterDetails(e);\n    var eventArgs = this.beforeAction(e);\n\n    if (this.collapseFlag) {\n      this.collapsePane(e);\n    } else {\n      this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n        if (!beforeCollapseArgs.cancel) {\n          _this.collapsePane(e);\n\n          var collapseEventArgs = _this.afterAction(e);\n\n          _this.trigger('collapsed', collapseEventArgs);\n        }\n      });\n    }\n  };\n\n  Splitter.prototype.collapsePane = function (e) {\n    this.removeStaticPanes();\n    var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n    var flexStatus = this.previousPane.classList.contains(STATIC_PANE) && !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) && !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && !(collapseCount === this.allPanes.length - 2) || this.nextPane.classList.contains(COLLAPSE_PANE) && !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE);\n    var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n\n    if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n      removeClass([this.previousPane], EXPAND_PANE);\n      removeClass([this.nextPane], collapseClass);\n\n      if (!this.collapseFlag) {\n        this.updatePaneSettings(this.nextPaneIndex, false);\n      }\n    } else {\n      removeClass([this.previousPane], EXPAND_PANE);\n      removeClass([this.nextPane], collapseClass);\n      addClass([this.nextPane], EXPAND_PANE);\n      addClass([this.previousPane], collapseClass);\n\n      if (!this.collapseFlag) {\n        this.updatePaneSettings(this.prevPaneIndex, true);\n      }\n    }\n\n    this.updateIconsOnCollapse(e);\n    this.previousPane.setAttribute('aria-expanded', 'false');\n    this.nextPane.setAttribute('aria-expanded', 'true');\n    this.updateFlexGrow(this.checkStaticPanes());\n\n    if (flexStatus) {\n      this.nextPane.classList.remove(EXPAND_PANE);\n      this.nextPane.style.flexGrow = '';\n    }\n  };\n\n  Splitter.prototype.removeStaticPanes = function () {\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (isNullOrUndefined(this.paneSettings[i].size)) {\n        this.allPanes[i].classList.remove(STATIC_PANE);\n      }\n    }\n  };\n\n  Splitter.prototype.beforeAction = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator,\n      cancel: false\n    };\n    return eventArgs;\n  };\n\n  Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n    var paneValues = this.paneSettings;\n    paneValues[index].collapsed = collapsed;\n    this.setProperties({\n      'paneSettings': paneValues\n    }, true);\n  };\n\n  Splitter.prototype.splitterProperty = function () {\n    this.splitInstance = {\n      currentBarIndex: this.currentBarIndex,\n      nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n      prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n      prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n      nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n      nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n      prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n      nextPaneIndex: this.getNextPaneIndex(),\n      prevPaneIndex: this.getPreviousPaneIndex(),\n      nextPaneNextEle: this.nextPane.nextElementSibling,\n      prevPanePreEle: this.previousPane.previousElementSibling\n    };\n  };\n\n  Splitter.prototype.showCurrentBarIcon = function () {\n    removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n  };\n\n  Splitter.prototype.updateIconsOnExpand = function (e) {\n    this.splitterProperty();\n    addClass([e.target], HIDE_ICON);\n\n    if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n      if (this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.showCurrentBarIcon();\n      }\n\n      if (this.paneSettings[this.nextPaneIndex].collapsible) {\n        removeClass([e.target], HIDE_ICON);\n      }\n\n      if (this.paneSettings[this.currentBarIndex].resizable) {\n        this.resizableModel(this.currentBarIndex, true);\n      }\n\n      if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n        if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n          this.resizableModel(this.currentBarIndex - 1, true);\n        }\n\n        if (this.paneSettings[this.prevPaneIndex].collapsible) {\n          this.showTargetBarIcon(this.prevBar, this.rightArrow);\n        }\n\n        if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n          this.hideTargetBarIcon(this.prevBar, this.arrow);\n\n          if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n            this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n          }\n        } else if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n          this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n        }\n      } else {\n        if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible && this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex - 1].collapsible) {\n          this.showTargetBarIcon(this.prevBar, this.rightArrow);\n        }\n\n        if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n          this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n        }\n      }\n    } else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n      this.resizableModel(this.currentBarIndex, false);\n      this.resizableModel(this.currentBarIndex + 1, false);\n\n      if (this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showCurrentBarIcon();\n      }\n\n      if (!isNullOrUndefined(this.nextBar)) {\n        this.hideTargetBarIcon(this.nextBar, this.arrow);\n      }\n\n      if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && !this.paneSettings[this.nextPaneIndex].collapsible && this.splitInstance.nextPaneCollapsed) {\n        this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n      }\n\n      if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling && this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.nextBar, this.rightArrow);\n      }\n    }\n  };\n\n  Splitter.prototype.afterAction = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator\n    };\n    return eventArgs;\n  };\n\n  Splitter.prototype.currentIndex = function (e) {\n    this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n  };\n\n  Splitter.prototype.getSeparatorIndex = function (target) {\n    var array = [].slice.call(this.allBars);\n    array = this.enableReversePanes ? array.reverse() : array;\n    return array.indexOf(target);\n  };\n\n  Splitter.prototype.getPrevBar = function (currentBar) {\n    var prevbar = this.allBars[currentBar - 1];\n    return prevbar;\n  };\n\n  Splitter.prototype.getNextBar = function (currentBar) {\n    var prevbar = this.allBars[currentBar + 1];\n    return prevbar;\n  };\n\n  Splitter.prototype.updateBars = function (index) {\n    this.prevBar = this.getPrevBar(index);\n    this.nextBar = this.getNextBar(index);\n  };\n\n  Splitter.prototype.splitterDetails = function (e) {\n    if (this.orientation === 'Horizontal') {\n      this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n    } else {\n      this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n    }\n\n    this.updateCurrentSeparator(e.target);\n    this.currentIndex(e);\n    this.updateBars(this.currentBarIndex);\n    this.getPaneDetails();\n  };\n\n  Splitter.prototype.triggerResizing = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n      separator: this.currentSeparator\n    };\n    this.trigger('resizing', eventArgs);\n  };\n\n  Splitter.prototype.onMouseDown = function (e) {\n    var _this = this;\n\n    e.preventDefault();\n    var target = e.target;\n\n    if (target.classList.contains(NAVIGATE_ARROW)) {\n      return;\n    }\n\n    this.updateCurrentSeparator(target);\n    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n    this.updateCursorPosition(e, 'previous');\n    this.getPaneDetails();\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n      separator: this.currentSeparator,\n      cancel: false\n    };\n\n    for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n      this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n    }\n\n    this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n      if (!resizeStartArgs.cancel) {\n        _this.wireResizeEvents();\n\n        _this.checkPaneSize(e);\n      }\n    });\n  };\n\n  Splitter.prototype.updatePaneFlexBasis = function (pane) {\n    var previous;\n\n    if (pane.style.flexBasis.indexOf('%') > 0) {\n      previous = this.removePercentageUnit(pane.style.flexBasis);\n    } else {\n      if (pane.style.flexBasis !== '') {\n        previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n      } else {\n        var offset = this.orientation === 'Horizontal' ? pane.offsetWidth : pane.offsetHeight;\n        previous = this.convertPixelToPercentage(offset);\n      }\n    }\n\n    return previous;\n  };\n\n  Splitter.prototype.removePercentageUnit = function (value) {\n    return parseFloat(value.slice(0, value.indexOf('%')));\n  };\n\n  Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n    var percentage = value.toString();\n    var convertedValue;\n\n    if (percentage.indexOf('%') > -1) {\n      convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n      var offsetValue = void 0;\n\n      if (!isNullOrUndefined(targetElement)) {\n        offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n      } else {\n        offsetValue = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n      }\n\n      convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n    } else {\n      convertedValue = parseInt(percentage, 10);\n    }\n\n    return convertedValue;\n  };\n\n  Splitter.prototype.convertPixelToPercentage = function (value) {\n    var offsetValue = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n    return value / offsetValue * 100;\n  };\n\n  Splitter.prototype.convertPixelToNumber = function (value) {\n    if (value.indexOf('p') > -1) {\n      return parseFloat(value.slice(0, value.indexOf('p')));\n    } else {\n      return parseFloat(value);\n    }\n  };\n\n  Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n    var separatorPosition = this.orientation === 'Horizontal' ? this.currentCoordinates.x - rectValue : this.currentCoordinates.y - rectValue;\n    var separator;\n    separator = separatorPosition / offsetValue;\n    separator = separator > 1 ? 1 : separator < 0 ? 0 : separator;\n    return separator * offsetValue;\n  };\n\n  Splitter.prototype.getSeparatorPosition = function (e) {\n    this.updateCursorPosition(e, 'current');\n    var rectBound = this.orientation === 'Horizontal' ? this.element.getBoundingClientRect().left : this.element.getBoundingClientRect().top + window.scrollY;\n    var offSet = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n    return this.calcDragPosition(rectBound, offSet);\n  };\n\n  Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n    var defaultVal = selection === 'min' ? 0 : null; // eslint-disable-next-line\n\n    var paneValue = null;\n\n    if (selection === 'min') {\n      if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n        paneValue = this.paneSettings[paneIndex].min;\n      }\n    } else {\n      if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n        paneValue = this.paneSettings[paneIndex].max;\n      }\n    }\n\n    if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(paneValue)) {\n      if (paneValue.indexOf('%') > 0) {\n        paneValue = this.convertPercentageToPixel(paneValue).toString();\n      }\n\n      return this.convertPixelToNumber(paneValue);\n    } else {\n      return defaultVal;\n    }\n  };\n\n  Splitter.prototype.getPreviousPaneIndex = function () {\n    var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 : parseInt(this.currentSeparator.style.order, 10) - 1;\n    return this.getOrderIndex(separatorIndex, 'pane');\n  };\n\n  Splitter.prototype.getNextPaneIndex = function () {\n    var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 : parseInt(this.currentSeparator.style.order, 10) + 1;\n    return this.getOrderIndex(separatorIndex, 'pane');\n  };\n\n  Splitter.prototype.getPaneDetails = function () {\n    var prevPane = null;\n    var nextPane = null;\n    this.order = parseInt(this.currentSeparator.style.order, 10);\n\n    if (this.allPanes.length > 1) {\n      prevPane = this.getPrevPane(this.order);\n      nextPane = this.getNextPane(this.order);\n    }\n\n    if (prevPane && nextPane) {\n      this.previousPane = prevPane;\n      this.nextPane = nextPane;\n      this.prevPaneIndex = this.getPreviousPaneIndex();\n      this.nextPaneIndex = this.getNextPaneIndex();\n    } else {\n      return;\n    }\n  };\n\n  Splitter.prototype.getPaneHeight = function (pane) {\n    return this.orientation === 'Horizontal' ? pane.offsetWidth.toString() : pane.offsetHeight.toString();\n  };\n\n  Splitter.prototype.isValidSize = function (paneIndex) {\n    var isValid = false;\n\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].size) && this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n      isValid = true;\n    }\n\n    return isValid;\n  };\n\n  Splitter.prototype.getPaneDimensions = function () {\n    this.previousPaneHeightWidth = this.previousPane.style.flexBasis === '' ? this.getPaneHeight(this.previousPane) : this.previousPane.style.flexBasis;\n    this.nextPaneHeightWidth = this.nextPane.style.flexBasis === '' ? this.getPaneHeight(this.nextPane) : this.nextPane.style.flexBasis;\n\n    if (this.isValidSize(this.prevPaneIndex)) {\n      this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n      this.updatePrePaneInPercentage = true;\n    }\n\n    if (this.isValidSize(this.nextPaneIndex)) {\n      this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n      this.updateNextPaneInPercentage = true;\n    }\n\n    this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n    this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n  };\n\n  Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n    var coordinatesChanged = true;\n\n    if (pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y) {\n      coordinatesChanged = false;\n    }\n\n    return coordinatesChanged;\n  };\n\n  Splitter.prototype.isCursorMoved = function (e) {\n    var cursorMoved = true;\n\n    if (this.getEventType(e.type) === 'mouse' || !isNullOrUndefined(e.pointerType) && this.getEventType(e.pointerType) === 'mouse') {\n      cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n    } else {\n      cursorMoved = Browser.info.name !== 'msie' ? this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) : this.checkCoordinates(e.pageX, e.pageY);\n    }\n\n    return cursorMoved;\n  };\n\n  Splitter.prototype.getBorder = function () {\n    this.border = 0;\n    var border = this.orientation === 'Horizontal' ? (this.element.offsetWidth - this.element.clientWidth) / 2 : (this.element.offsetHeight - this.element.clientHeight) / 2;\n    this.border = Browser.info.name !== 'chrome' ? this.border : border;\n  };\n\n  Splitter.prototype.onMouseMove = function (e) {\n    if (!this.isCursorMoved(e)) {\n      return;\n    }\n\n    this.getPaneDetails();\n    this.getPaneDimensions();\n    this.triggerResizing(e);\n    var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n    var separatorNewPosition;\n    this.getBorder();\n\n    if (this.orientation === 'Horizontal') {\n      separatorNewPosition = this.element.getBoundingClientRect().left + left - this.currentSeparator.getBoundingClientRect().left + this.border;\n    } else {\n      separatorNewPosition = this.element.getBoundingClientRect().top + left - this.currentSeparator.getBoundingClientRect().top + this.border;\n    }\n\n    this.nextPaneHeightWidth = typeof this.nextPaneHeightWidth === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1 ? this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n    this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n    this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n    this.validateMinMaxValues();\n\n    if (this.nextPaneCurrentWidth < 0) {\n      this.nextPaneCurrentWidth = 0;\n    }\n    /* istanbul ignore next */\n\n\n    if (this.prevPaneCurrentWidth < 0) {\n      this.prevPaneCurrentWidth = 0;\n    }\n\n    if (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth > this.totalWidth) {\n      if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n        this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth - this.totalWidth);\n      } else {\n        this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth - this.totalWidth);\n      }\n    }\n    /* istanbul ignore next */\n\n\n    if (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth < this.totalWidth) {\n      var difference = this.totalWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth);\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n    }\n\n    this.calculateCurrentDimensions();\n    this.addStaticPaneClass();\n    this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n    this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n\n    if (!(this.allPanes.length > 2)) {\n      this.updateSplitterSize();\n    }\n  }; // eslint-disable-next-line\n\n\n  Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n    var paneMinRange = null;\n    var paneMinDimensions;\n    var difference = 0;\n    var validatedVal;\n\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n      paneMinRange = this.paneSettings[paneIndex].min.toString();\n    }\n\n    if (!isNullOrUndefined(paneMinRange)) {\n      if (paneMinRange.indexOf('%') > 0) {\n        paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n      }\n\n      paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n\n      if (paneCurrentWidth < paneMinDimensions) {\n        difference = paneCurrentWidth - paneMinDimensions <= 0 ? 0 : paneCurrentWidth - paneMinDimensions;\n        this.totalWidth = this.totalWidth - difference;\n        this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n        validatedVal = paneMinDimensions;\n      }\n    }\n\n    return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n  }; // eslint-disable-next-line\n\n\n  Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n    var paneMaxRange = null;\n    var paneMaxDimensions;\n    var validatedVal;\n\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n      paneMaxRange = this.paneSettings[paneIndex].max.toString();\n    }\n\n    if (!isNullOrUndefined(paneMaxRange)) {\n      if (paneMaxRange.indexOf('%') > 0) {\n        paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n      }\n\n      paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n\n      if (paneCurrentWidth > paneMaxDimensions) {\n        this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n        this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n        validatedVal = paneMaxDimensions;\n      }\n    }\n\n    return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n  };\n\n  Splitter.prototype.validateMinMaxValues = function () {\n    //validate previous pane minimum range\n    this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane); // Validate next pane minimum range\n\n    this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane); // validate previous pane maximum range\n\n    this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane); // validate next pane maximum range\n\n    this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n  };\n\n  Splitter.prototype.equatePaneWidths = function () {\n    var difference;\n\n    if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth > this.totalPercent) {\n      difference = this.prevPaneCurrentWidth + this.nextPaneCurrentWidth - this.totalPercent;\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - difference / 2 + '%';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - difference / 2 + '%';\n    }\n\n    if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth < this.totalPercent) {\n      difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + difference / 2 + '%';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference / 2 + '%';\n    }\n  };\n\n  Splitter.prototype.calculateCurrentDimensions = function () {\n    if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n      this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth) * 10) / 10));\n      this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth) * 10) / 10));\n\n      if (this.prevPaneCurrentWidth === 0) {\n        this.nextPaneCurrentWidth = this.totalPercent;\n      }\n\n      if (this.nextPaneCurrentWidth === 0) {\n        this.prevPaneCurrentWidth = this.totalPercent;\n      }\n\n      if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n        this.equatePaneWidths();\n      } else {\n        this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n        this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n      }\n\n      this.prevPaneCurrentWidth = this.updatePrePaneInPercentage ? this.prevPaneCurrentWidth : this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n      this.nextPaneCurrentWidth = this.updateNextPaneInPercentage ? this.nextPaneCurrentWidth : this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n      this.updatePrePaneInPercentage = false;\n      this.updateNextPaneInPercentage = false;\n    } else {\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n    }\n  };\n\n  Splitter.prototype.addStaticPaneClass = function () {\n    if (!this.previousPane.classList.contains(STATIC_PANE)) {\n      this.previousPane.classList.add(STATIC_PANE);\n    }\n\n    if (!this.nextPane.classList.contains(STATIC_PANE)) {\n      this.nextPane.classList.add(STATIC_PANE);\n    }\n  };\n\n  Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n    var separatorTopLeft = this.orientation === 'Horizontal' ? this.currentSeparator.offsetLeft : this.currentSeparator.offsetTop;\n    var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n    var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n    var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n    var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n    var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n    var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n    var validatedSize = draggedPos;\n\n    if (draggedPos > nextPaneRange - pane2MinSize) {\n      validatedSize = nextPaneRange - pane2MinSize;\n    } else if (draggedPos < prePaneRange + pane1MinSize) {\n      validatedSize = prePaneRange + pane1MinSize;\n    }\n\n    if (!isNullOrUndefined(pane1MaxSize)) {\n      if (draggedPos > prePaneRange + pane1MaxSize) {\n        validatedSize = prePaneRange + pane1MaxSize;\n      }\n    } else if (!isNullOrUndefined(pane2MaxSize)) {\n      if (draggedPos < nextPaneRange - pane2MaxSize) {\n        validatedSize = nextPaneRange - pane2MaxSize;\n      }\n    }\n\n    return validatedSize;\n  };\n\n  Splitter.prototype.onMouseUp = function (e) {\n    removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n    this.unwireResizeEvents();\n    var eventArgs = {\n      event: e,\n      element: this.element,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator,\n      paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n    };\n\n    for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n      this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n    }\n\n    this.trigger('resizeStop', eventArgs);\n\n    if (this.enablePersistence) {\n      var paneValues = this.paneSettings;\n      paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n      paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n      this.setProperties({\n        'paneSettings': paneValues\n      }, true);\n    }\n  };\n\n  Splitter.prototype.panesDimension = function (index, child) {\n    var childCount = child.length;\n    var size;\n    parseInt(this.getHeight(this.element), 10);\n\n    if (!isNullOrUndefined(this.paneSettings[index])) {\n      if (!isNullOrUndefined(this.paneSettings[index].size)) {\n        size = this.paneSettings[index].size;\n\n        if (index < childCount) {\n          setStyleAttribute(child[index], {\n            'flex-basis': size,\n            'order': index * 2\n          });\n\n          if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n            addClass([child[index]], STATIC_PANE);\n          } else if (!this.sizeFlag) {\n            child[index].style.flexBasis = null;\n          }\n\n          if (index === childCount - 1 && this.sizeFlag && this.paneSettings[index].size !== '') {\n            addClass([child[index]], STATIC_PANE);\n          }\n        }\n      } else {\n        this.sizeFlag = true;\n        setStyleAttribute(child[index], {\n          'order': index * 2\n        });\n      }\n    } else {\n      setStyleAttribute(child[index], {\n        'order': index * 2\n      });\n    }\n\n    this.paneOrder.push(index * 2);\n  };\n\n  Splitter.prototype.setTemplate = function (template, toElement) {\n    toElement.innerHTML = '';\n    template = typeof template === 'string' ? this.sanitizeHelper(template) : template;\n    this.templateCompile(toElement, template); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    if (this.isReact) {\n      this.renderReactTemplates();\n    }\n  }; // eslint-disable-next-line\n\n\n  Splitter.prototype.templateCompile = function (ele, cnt) {\n    // eslint-disable-next-line\n    var blazorContain = Object.keys(window);\n    var tempEle = this.createElement('div');\n    this.compileElement(tempEle, cnt, 'content');\n\n    if (tempEle.childNodes.length !== 0) {\n      [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n        ele.appendChild(childEle);\n      });\n    }\n  };\n\n  Splitter.prototype.compileElement = function (ele, val, prop) {\n    // eslint-disable-next-line\n    var blazorContain = Object.keys(window);\n\n    if (typeof val === 'string') {\n      if (val[0] === '.' || val[0] === '#') {\n        var eleVal = document.querySelector(val);\n\n        if (!isNullOrUndefined(eleVal)) {\n          this.templateElement.push(eleVal);\n\n          if (eleVal.style.display === 'none') {\n            eleVal.style.removeProperty('display');\n          }\n\n          if (eleVal.getAttribute('style') === '') {\n            eleVal.removeAttribute('style');\n          }\n\n          ele.appendChild(eleVal);\n          return;\n        } else {\n          val = val.trim();\n        }\n      } else {\n        val = val.trim();\n      }\n    }\n\n    var templateFn;\n\n    if (!isNullOrUndefined(val.outerHTML)) {\n      templateFn = compile(val.outerHTML);\n    } else {\n      templateFn = compile(val);\n    }\n\n    var templateFUN;\n\n    if (!isNullOrUndefined(templateFn)) {\n      templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n    }\n\n    if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n      [].slice.call(templateFUN).forEach(function (el) {\n        ele.appendChild(el);\n      });\n    }\n  };\n\n  Splitter.prototype.paneCollapsible = function (pane, index) {\n    // eslint-disable-next-line\n    this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n  };\n\n  Splitter.prototype.createSplitPane = function (target) {\n    var childCount = target.children.length;\n\n    for (var i = 0; i < this.paneSettings.length; i++) {\n      if (childCount < this.paneSettings.length) {\n        var childElement = this.createElement('div');\n        this.element.appendChild(childElement);\n        childCount = childCount + 1;\n      }\n    }\n\n    childCount = target.children.length;\n    var child = [].slice.call(target.children);\n    this.sizeFlag = false;\n\n    if (childCount > 0) {\n      for (var i = 0; i < childCount; i++) {\n        // To accept only div and span element as pane\n        if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n          this.allPanes.push(child[i]);\n\n          if (this.orientation === 'Horizontal') {\n            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n            this.panesDimension(i, child);\n          } else {\n            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n            this.panesDimension(i, child);\n          }\n\n          if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n            this.setTemplate(this.paneSettings[i].content, child[i]);\n          }\n\n          if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n          }\n\n          if (!isNullOrUndefined(this.paneSettings[i])) {\n            this.paneCollapsible(child[i], i);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * expands corresponding pane based on the index is passed.\n   *\n   * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.expand = function (index) {\n    this.collapsedOnchange(index);\n    this.updatePaneSettings(index, false);\n  };\n  /**\n   * collapses corresponding pane based on the index is passed.\n   *\n   * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.collapse = function (index) {\n    this.isCollapsed(index);\n    this.updatePaneSettings(index, true);\n  };\n  /**\n   * Removes the control from the DOM and also removes all its related events.\n   *\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.destroy = function () {\n    if (!this.isDestroyed) {\n      _super.prototype.destroy.call(this);\n\n      EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n      this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n\n      while (this.element.attributes.length > 0) {\n        this.element.removeAttribute(this.element.attributes[0].name);\n      }\n\n      this.element.innerHTML = this.wrapper.innerHTML;\n\n      for (var i = 0; i < this.wrapper.attributes.length; i++) {\n        this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n      }\n\n      if (this.refreshing) {\n        addClass([this.element], ['e-control', 'e-lib', ROOT]);\n        this.allBars = [];\n        this.allPanes = [];\n      }\n\n      this.restoreElem(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      if (this.isReact) {\n        this.clearTemplate();\n      }\n    }\n  };\n\n  Splitter.prototype.restoreElem = function () {\n    if (this.templateElement.length > 0) {\n      for (var i = 0; i < this.templateElement.length; i++) {\n        this.templateElement[i].style.display = 'none';\n        document.body.appendChild(this.templateElement[i]);\n      }\n    }\n  };\n\n  Splitter.prototype.addPaneClass = function (pane) {\n    // eslint-disable-next-line\n    this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) : addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n    return pane;\n  };\n\n  Splitter.prototype.removePaneOrders = function (paneClass) {\n    var childNodes = this.element.childNodes;\n    var panes = [];\n\n    for (var i = 0; childNodes.length < 0; i++) {\n      if (childNodes[i].classList.contains(paneClass)) {\n        panes.push(childNodes[i]);\n      }\n    }\n\n    for (var i = 0; i < panes.length; i++) {\n      panes[i].style.removeProperty('order');\n    }\n  };\n\n  Splitter.prototype.setPaneOrder = function () {\n    for (var i = 0; i < this.allPanes.length; i++) {\n      this.panesDimension(i, this.allPanes);\n    }\n  };\n\n  Splitter.prototype.removeSeparator = function () {\n    for (var i = 0; i < this.allBars.length; i++) {\n      detach(this.allBars[i]);\n    }\n\n    this.allBars = [];\n  };\n\n  Splitter.prototype.updatePanes = function () {\n    this.setPaneOrder();\n    this.removeSeparator();\n    this.addSeparator(this.element);\n  };\n  /**\n   * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n   *\n   * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n   * @param { number } index - Specifies the index where the pane will be inserted.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.addPane = function (paneProperties, index) {\n    var newPane = this.createElement('div');\n    newPane = this.addPaneClass(newPane);\n    index = index > this.allPanes.length + 1 ? this.allPanes.length : index;\n    var paneDetails = {\n      size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n      min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n      max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n      content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n      resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n      collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n      collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n      cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n    };\n    this.paneSettings.splice(index, 0, paneDetails);\n    this.setProperties({\n      'paneSettings': this.paneSettings\n    }, true);\n\n    if (this.orientation === 'Horizontal') {\n      this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n      this.removePaneOrders(SPLIT_H_PANE);\n    } else {\n      this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n      this.removePaneOrders(SPLIT_V_PANE);\n    }\n\n    this.allPanes.splice(index, 0, newPane);\n    this.updatePanes();\n    this.setTemplate(this.paneSettings[index].content, newPane);\n    this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n    this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n  };\n  /**\n   * Allows you to remove the specified pane dynamically by passing its index value.\n   *\n   * @param { number } index - Specifies the index value to remove the corresponding pane.\n   * @returns {void}\n   */\n\n\n  Splitter.prototype.removePane = function (index) {\n    index = index > this.allPanes.length + 1 ? this.allPanes.length : index;\n    var elementClass = this.orientation === 'Horizontal' ? SPLIT_H_PANE : SPLIT_V_PANE;\n\n    if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n      return;\n    }\n\n    detach(this.element.querySelectorAll('.' + elementClass)[index]);\n    this.allPanes.splice(index, 1);\n    this.removePaneOrders(elementClass);\n    this.updatePanes();\n    this.paneSettings.splice(index, 1);\n    this.setProperties({\n      'paneSettings': this.paneSettings\n    }, true);\n\n    if (this.allPanes.length > 0) {\n      this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    }\n  };\n\n  __decorate([Property('100%')], Splitter.prototype, \"height\", void 0);\n\n  __decorate([Property(false)], Splitter.prototype, \"enableReversePanes\", void 0);\n\n  __decorate([Property('100%')], Splitter.prototype, \"width\", void 0);\n\n  __decorate([Property(false)], Splitter.prototype, \"enablePersistence\", void 0);\n\n  __decorate([Collection([], PaneProperties)], Splitter.prototype, \"paneSettings\", void 0);\n\n  __decorate([Property('Horizontal')], Splitter.prototype, \"orientation\", void 0);\n\n  __decorate([Property('')], Splitter.prototype, \"cssClass\", void 0);\n\n  __decorate([Property(true)], Splitter.prototype, \"enabled\", void 0);\n\n  __decorate([Property(true)], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n\n  __decorate([Property(null)], Splitter.prototype, \"separatorSize\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"created\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"resizeStart\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"resizing\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"resizeStop\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"beforeCollapse\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"beforeExpand\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"collapsed\", void 0);\n\n  __decorate([Event()], Splitter.prototype, \"expanded\", void 0);\n\n  Splitter = __decorate([NotifyPropertyChanges], Splitter);\n  return Splitter;\n}(Component);\n\nexport { Splitter };","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/node_modules/@syncfusion/ej2-layouts/src/splitter/splitter.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","setStyleAttribute","ChildProperty","compile","NotifyPropertyChanges","addClass","Collection","isNullOrUndefined","Event","EventHandler","selectAll","removeClass","select","Browser","detach","formatUnit","SanitizeHtmlHelper","extend","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","SPLIT_TOUCH","DISABLED","RTL","E_ICONS","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","LAST_BAR","BAR_SIZE_DEFAULT","PaneProperties","_super","apply","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","prop","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setReversePane","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","isCollapsed","collapsedOnchange","newValSize","updatePaneSize","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","style","flexBasis","flexPaneIndexes","staticPaneWidth","flexCount","size","innerText","offsetWidth","offsetHeight","flexPaneWidth","avgDiffWidth","add","preRender","onReportWindowSize","reportWindowSize","bind","onMouseMoveHandler","onMouseMove","onMouseUpHandler","onMouseUp","onTouchMoveHandler","onTouchEndHandler","wrapper","cloneNode","wrapperParent","parentElement","name","info","css","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","enableReversePanes","document","onDocumentClick","renderComplete","ownerDocument","defaultView","addEventListener","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","previousPane","nextPaneSize","nextPane","splitBarSize","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","getMinInPixel","nextPaneIndex","min","prevPaneIndex","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","preventDefault","triggerResizing","collapsible","collapse","expand","minValue","paneMinRange","convertPixelToNumber","toString","sanitizeHelper","value","enableHtmlSanitizer","item","beforeSanitize","beforeEvent","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","max","content","paneAPI","slice","forEach","el","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","reverse","setAttribute","removeAttribute","push","getBoundingClientRect","className","split","hideResizer","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","updateIsCollapsed","lastBarArrow","targetEle","lastBarIndex","click","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","m","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","paneEle","collectPanes","childNodes","elements","getPrevPane","order","getOrderPane","getNextPane","pane","getOrderIndex","panes","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","body","removeEventListener","staticPaneCount","updateSplitterSize","iswindowResize","getComputedStyle","marginLeft","marginTop","marginBottom","diff","updatePane","flexPane","sizeDiff","isPercent","convertPixelToPercentage","wireResizeEvents","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","removeStaticPanes","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","visiblePane","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","paneValues","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","array","prevbar","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","pointerEvents","resizeStartArgs","previous","removePercentageUnit","offset","parseFloat","targetElement","percentage","convertedValue","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","window","scrollY","offSet","getMinMax","selection","defaultVal","separatorIndex","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","cursorMoved","getBorder","clientWidth","clientHeight","validateDraggedPosition","separatorNewPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","validateMaxRange","paneMaxRange","paneMaxDimensions","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","enablePersistence","panesDimension","child","sizeFlag","template","toElement","templateCompile","isReact","renderReactTemplates","ele","cnt","blazorContain","tempEle","compileElement","childEle","val","eleVal","display","removeProperty","trim","templateFn","outerHTML","templateFUN","id","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","clearTemplate","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     *\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible',\n            'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     *\n     * @param  {SplitterModel} newProp - specifies the new property\n     * @param  {SplitterModel} oldProp - specifies the old property\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'enableReversePanes':\n                    this.setReversePane();\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings': {\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content': {\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    }\n                                    case 'resizable': {\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    }\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        // eslint-disable-next-line\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size': {\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                }\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.onReportWindowSize = this.reportWindowSize.bind(this);\n        this.onMouseMoveHandler = this.onMouseMove.bind(this);\n        this.onMouseUpHandler = this.onMouseUp.bind(this);\n        this.onTouchMoveHandler = this.onMouseMove.bind(this);\n        this.onTouchEndHandler = this.onMouseUp.bind(this);\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist(['paneSettings']);\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns {string} - returns the string value\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        if (this.enableReversePanes) {\n            this.setReversePane();\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) <\n                        this.convertPercentageToPixel((nextFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) <\n                        this.convertPercentageToPixel((previousFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < (nextPaneSize + splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < (prePaneSize - splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                event.preventDefault();\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.getMinInPixel = function (minValue) {\n        var min;\n        if (isNullOrUndefined(minValue)) {\n            return 0;\n        }\n        var paneMinRange = this.convertPixelToNumber(minValue.toString());\n        if (minValue.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(minValue);\n        }\n        min = this.convertPixelToNumber((paneMinRange).toString());\n        return min;\n    };\n    /**\n     * @param {string} value - specifies the string value\n     * @returns {string} returns the string\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // eslint-disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // eslint-disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) {\n            detach(el);\n        });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        // eslint-disable-next-line\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setReversePane = function () {\n        this.allPanes = this.allPanes.reverse();\n        this.allBars = this.allBars.reverse();\n        addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n        removeClass([this.allBars[0]], LAST_BAR);\n        this.setProperties({ 'paneSettings': this.paneSettings.reverse() }, true);\n        if (this.enableReversePanes) {\n            this.element.setAttribute('dir', 'rtl');\n        }\n        else {\n            this.element.removeAttribute('dir');\n        }\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            // eslint-disable-next-line\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        var i = index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                // eslint-disable-next-line\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            // eslint-disable-next-line\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        var arrow2 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        var arrow1 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return {\n            collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        // eslint-disable-next-line\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n    };\n    Splitter.prototype.getNextPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n    };\n    Splitter.prototype.getOrderPane = function (order) {\n        var pane;\n        for (var i = 0; i < this.element.children.length; i++) {\n            if (parseInt(this.element.children[i].style.order, 10) === order) {\n                pane = this.element.children[i];\n            }\n        }\n        return pane;\n    };\n    Splitter.prototype.getOrderIndex = function (order, type) {\n        var index;\n        var panes;\n        if (type === 'pane') {\n            panes = this.allPanes;\n        }\n        else {\n            panes = this.allBars;\n        }\n        for (var i = 0; i < panes.length; i++) {\n            if (parseInt(panes[i].style.order, 10) === order) {\n                index = i;\n            }\n        }\n        return index;\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                // eslint-disable-next-line\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    // eslint-disable-next-line\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        // eslint-disable-next-line\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        var proxy = this;\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        if (this.enableReversePanes) {\n            separator.setAttribute('dir', 'ltr');\n        }\n        else {\n            separator.removeAttribute('dir');\n        }\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        // eslint-disable-next-line\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        if (!document.body.contains(this.element)) {\n            document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n            return;\n        }\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        if (paneCount > 0) {\n            setTimeout(function () {\n                _this.updateSplitterSize(true);\n            }, 200);\n        }\n    };\n    Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0; j < this.allBars.length; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n        if (this.allPanes.length === 2 && iswindowResize) {\n            var paneCount = this.allPanes.length;\n            var minValue = void 0;\n            var paneMinRange = void 0;\n            var paneIndex = 0;\n            var updatePane = void 0;\n            var flexPane = void 0;\n            for (var i = 0; i < paneCount; i++) {\n                if (!isNullOrUndefined(this.paneSettings[i].min)) {\n                    paneMinRange = this.convertPixelToNumber((this.paneSettings[i].min).toString());\n                    if (this.paneSettings[i].min.indexOf('%') > 0) {\n                        paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n                    }\n                    minValue = this.convertPixelToNumber((paneMinRange).toString());\n                    if (this.allPanes[i].offsetWidth < minValue) {\n                        if (i === paneIndex) {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i + 1];\n                        }\n                        else {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i - 1];\n                        }\n                        var sizeDiff = minValue - this.allPanes[i].offsetWidth;\n                        var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n                        updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePane.offsetWidth + sizeDiff) + '%'\n                            : (updatePane.offsetWidth + sizeDiff) + 'px';\n                        flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ?\n                            this.convertPixelToPercentage(flexPane.offsetWidth - sizeDiff) + '%' : (flexPane.offsetWidth - sizeDiff) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        document.addEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.addEventListener('mouseup', this.onMouseUpHandler, true);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.addEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.addEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.removeEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.removeEventListener('mouseup', this.onMouseUpHandler, true);\n        document.removeEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.removeEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        var totalWidth = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        if (totalWidth > this.element.offsetWidth) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var collapseCount = 0;\n        for (var j = 0; j < this.element.children.length; j++) {\n            if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n                collapseCount = collapseCount + 1;\n            }\n        }\n        var visiblePane = collapseCount === this.allPanes.length - 2;\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n            if (visiblePane && !this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size &&\n                i !== this.allPanes.length - 1) {\n                panes[i].style.flexGrow = '';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.removeStaticPanes = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        var paneValues = this.paneSettings;\n        paneValues[index].collapsed = collapsed;\n        this.setProperties({ 'paneSettings': paneValues }, true);\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        array = this.enableReversePanes ? array.reverse() : array;\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        var separator;\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // eslint-disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 :\n            parseInt(this.currentSeparator.style.order, 10) - 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 :\n            parseInt(this.currentSeparator.style.order, 10) + 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.order);\n            nextPane = this.getNextPane(this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n        if (this.enablePersistence) {\n            var paneValues = this.paneSettings;\n            paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n            paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n            this.setProperties({ 'paneSettings': paneValues }, true);\n        }\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        // eslint-disable-next-line\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * expands corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     *\n     * @returns {void}\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.isReact) {\n                this.clearTemplate();\n            }\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var childNodes = this.element.childNodes;\n        var panes = [];\n        for (var i = 0; childNodes.length < 0; i++) {\n            if (childNodes[i].classList.contains(paneClass)) {\n                panes.push(childNodes[i]);\n            }\n        }\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     *\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns {void}\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     *\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns {void}\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableReversePanes\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n"]},"metadata":{},"sourceType":"module"}