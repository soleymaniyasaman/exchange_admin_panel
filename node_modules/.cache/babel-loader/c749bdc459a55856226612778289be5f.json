{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useContext, useEffect } from 'react';\nimport { data } from '../context/provider';\nimport { BASE_CONFIG_URL, EXCHANGE_CONFIG, CONFIG_COINS } from './constants';\nimport service from './service'; //config api call\n\nconst ConfigApi = props => {\n  _s();\n\n  const data = useContext(UserContext);\n\n  const configData = () => {\n    const configUrl = `${BASE_CONFIG_URL}${EXCHANGE_CONFIG}${CONFIG_COINS}`;\n    console.log(\"config url \", configUrl);\n    axios.get(configUrl).then(resp => {\n      resp.data.map(item => {\n        let values = '';\n\n        if (item.Value) {\n          const encodedRequestBody = String(item.Value);\n          const decodedRequestBodyString = Buffer.from(encodedRequestBody, \"base64\");\n          values = JSON.parse(decodedRequestBodyString);\n        }\n\n        item.Value = values;\n        return item;\n      });\n      authContext.setConfigData(resp.data);\n    });\n  };\n\n  useEffect(() => {\n    configData();\n  }, []);\n  return null;\n};\n\n_s(ConfigApi, \"4qafdET7aWTy+RkI99bTRl1mGRs=\");\n\n_c = ConfigApi;\nexport default ConfigApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigApi\");","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/utils/config-api.js"],"names":["axios","useContext","useEffect","data","BASE_CONFIG_URL","EXCHANGE_CONFIG","CONFIG_COINS","service","ConfigApi","props","UserContext","configData","configUrl","console","log","get","then","resp","map","item","values","Value","encodedRequestBody","String","decodedRequestBodyString","Buffer","from","JSON","parse","authContext","setConfigData"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AAEA,SAASC,IAAT,QAAqB,qBAArB;AAEA,SAASC,eAAT,EAA2BC,eAA3B,EAA6CC,YAA7C,QAAgE,aAAhE;AAEA,OAAOC,OAAP,MAAoB,WAApB,C,CAIA;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAMN,IAAI,GAAGF,UAAU,CAACS,WAAD,CAAvB;;AAEA,QAAMC,UAAU,GAAG,MAAM;AAErB,UAAMC,SAAS,GAAI,GAAER,eAAgB,GAAEC,eAAgB,GAAEC,YAAa,EAAtE;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BF,SAA1B;AAEAZ,IAAAA,KAAK,CAACe,GAAN,CAAUH,SAAV,EAEKI,IAFL,CAEUC,IAAI,IAAI;AAEVA,MAAAA,IAAI,CAACd,IAAL,CAAUe,GAAV,CAAcC,IAAI,IAAI;AAClB,YAAIC,MAAM,GAAG,EAAb;;AAEA,YAAID,IAAI,CAACE,KAAT,EAAgB;AAEZ,gBAAMC,kBAAkB,GAAGC,MAAM,CAACJ,IAAI,CAACE,KAAN,CAAjC;AAEA,gBAAMG,wBAAwB,GAAGC,MAAM,CAACC,IAAP,CAAYJ,kBAAZ,EAAgC,QAAhC,CAAjC;AAEAF,UAAAA,MAAM,GAAGO,IAAI,CAACC,KAAL,CAAWJ,wBAAX,CAAT;AAEH;;AAEDL,QAAAA,IAAI,CAACE,KAAL,GAAaD,MAAb;AAEA,eAAOD,IAAP;AAEH,OAjBD;AAmBAU,MAAAA,WAAW,CAACC,aAAZ,CAA0Bb,IAAI,CAACd,IAA/B;AAEH,KAzBL;AA2BH,GAjCD;;AAsCAD,EAAAA,SAAS,CAAC,MAAM;AAEZS,IAAAA,UAAU;AAEb,GAJQ,EAIN,EAJM,CAAT;AAOA,SAAO,IAAP;AAEH,CAnDD;;GAAMH,S;;KAAAA,S;AAuDN,eAAeA,SAAf","sourcesContent":["import axios from 'axios';\n\nimport { useContext, useEffect } from 'react';\n\nimport { data } from '../context/provider';\n\nimport { BASE_CONFIG_URL , EXCHANGE_CONFIG , CONFIG_COINS} from './constants';\n\nimport service from './service';\n\n\n\n//config api call\n\nconst ConfigApi = (props) => {\n\n    const data = useContext(UserContext);\n\n    const configData = () => {\n\n        const configUrl = `${BASE_CONFIG_URL}${EXCHANGE_CONFIG}${CONFIG_COINS}`\n\n        console.log(\"config url \",configUrl)\n\n        axios.get(configUrl)\n\n            .then(resp => {\n\n                resp.data.map(item => {\n                    let values = ''\n\n                    if (item.Value) {\n        \n                        const encodedRequestBody = String(item.Value);\n        \n                        const decodedRequestBodyString = Buffer.from(encodedRequestBody, \"base64\");\n        \n                        values = JSON.parse(decodedRequestBodyString);\n        \n                    }\n        \n                    item.Value = values\n\n                    return item\n        \n                })\n\n                authContext.setConfigData(resp.data);\n\n            })\n\n    }\n\n\n\n\n    useEffect(() => {\n\n        configData();\n\n    }, []);\n\n\n    return null;\n\n}\n\n\n\nexport default ConfigApi;\n\n"]},"metadata":{},"sourceType":"module"}