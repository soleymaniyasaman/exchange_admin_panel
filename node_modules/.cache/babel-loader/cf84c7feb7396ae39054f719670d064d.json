{"ast":null,"code":"var _jsxFileName = \"/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/popUp/index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport Modal from \"react-bootstrap/Modal\";\nimport { UserContext } from '../../context/provider';\nimport './alert.scss'; // import'../layout/styles.scss'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopUp = props => {\n  _s();\n\n  const contextData = useContext(UserContext); // useEffect(() => {\n  //   window.addEventListener('beforeunload', alertUser)\n  // //   window.addEventListener('unload', handleEndConcert)\n  //   return () => {\n  //     window.removeEventListener('beforeunload', alertUser)\n  //     // window.removeEventListener('unload', handleEndConcert)\n  //     // handleEndConcert()\n  //   }\n  // }, [])\n  // const alertUser = e => {\n  //   e.preventDefault()\n  //   e.returnValue = ''\n  // }\n  // const handleEndConcert = async () => {\n  //   await fetch({\n  //     url: endConcert(concert.id),\n  //     method: 'PUT'\n  //   })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: contextData.showAlert,\n    onHide: () => contextData.setShowAlert(false),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      className: \"popUpHeader\",\n      closeButton: true,\n      closeLabel: \"\",\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        className: \"small\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" d-flex align-items-center w-auto mx-auto flex-row-reverse\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/assests/drawer/Polygon.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"me-1 m-0 text-white\",\n            children: [\" \", props.popUpHead, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"popUpBody\",\n      children: props.popUpBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      className: \"popUpFooter\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: props.onCancel,\n        className: \"popUpBody popUpButton\",\n        children: props.onCancelText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: props.onAccept,\n        className: \"popUpBody popUpButton\",\n        children: props.onAcceptText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n};\n\n_s(PopUp, \"I5MrpC2Uz/0aJ08OhAJq00IYFY4=\");\n\n_c = PopUp;\nexport default PopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopUp\");","map":{"version":3,"sources":["/Users/yasaman/Documents/moj_adminpanel/adminpanel/src/components/popUp/index.js"],"names":["React","useContext","useEffect","Button","Modal","UserContext","PopUp","props","contextData","showAlert","setShowAlert","popUpHead","popUpBody","onCancel","onCancelText","onAccept","onAcceptText"],"mappings":";;;AAAA,SAAQA,KAAR,EAAgBC,UAAhB,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAO,cAAP,C,CACA;;;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,WAAW,GAAGP,UAAU,CAACI,WAAD,CAA9B,CADuB,CAGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEG,WAAW,CAACC,SAAzB;AAAoC,IAAA,MAAM,EAAE,MAAMD,WAAW,CAACE,YAAZ,CAAyB,KAAzB,CAAlD;AAAA,4BACE,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,SAAS,EAAC,aAAxB;AAAsC,MAAA,WAAW,MAAjD;AAAkD,MAAA,UAAU,EAAC,EAA7D;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAa,QAAA,SAAS,EAAC,OAAvB;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,4DAAf;AAAA,kCACU;AAAK,YAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,kBADV,eAEU;AAAG,YAAA,SAAS,EAAC,qBAAb;AAAA,4BAAqCH,KAAK,CAACI,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,WAAtB;AAAA,gBAAmCJ,KAAK,CAACK;AAAzC;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,SAAS,EAAC,aAAxB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEL,KAAK,CAACM,QAA3C;AAAqD,QAAA,SAAS,EAAC,uBAA/D;AAAA,kBACGN,KAAK,CAACO;AADT;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAEP,KAAK,CAACQ,QAAzC;AAAmD,QAAA,SAAS,EAAC,uBAA7D;AAAA,kBACGR,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3CH;;GAAMV,K;;KAAAA,K;AA6CJ,eAAeA,KAAf","sourcesContent":["import {React , useContext, useEffect} from 'react';\nimport { Button } from 'react-bootstrap';\nimport Modal from \"react-bootstrap/Modal\";\nimport { UserContext } from '../../context/provider';\nimport './alert.scss'\n// import'../layout/styles.scss'\nconst PopUp = (props) => {\n  const contextData = useContext(UserContext);\n\n    // useEffect(() => {\n    //   window.addEventListener('beforeunload', alertUser)\n    // //   window.addEventListener('unload', handleEndConcert)\n    //   return () => {\n    //     window.removeEventListener('beforeunload', alertUser)\n    //     // window.removeEventListener('unload', handleEndConcert)\n    //     // handleEndConcert()\n    //   }\n    // }, [])\n    // const alertUser = e => {\n    //   e.preventDefault()\n    //   e.returnValue = ''\n    // }\n    // const handleEndConcert = async () => {\n    //   await fetch({\n    //     url: endConcert(concert.id),\n    //     method: 'PUT'\n    //   })\n    // }\n    return (\n      <Modal show={contextData.showAlert} onHide={() => contextData.setShowAlert(false)} >\n        <Modal.Header className=\"popUpHeader\" closeButton closeLabel=\"\">\n          <Modal.Title className=\"small\">\n          <div className=\" d-flex align-items-center w-auto mx-auto flex-row-reverse\">\n                    <img src=\"/assests/drawer/Polygon.svg\" />\n                    <p className=\"me-1 m-0 text-white\"> {props.popUpHead} </p>\n                </div>\n            </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"popUpBody\">{props.popUpBody}</Modal.Body>\n        <Modal.Footer className=\"popUpFooter\">\n          <Button variant=\"secondary\" onClick={props.onCancel} className=\"popUpBody popUpButton\">\n            {props.onCancelText}\n          </Button>\n          <Button variant=\"primary\" onClick={props.onAccept} className=\"popUpBody popUpButton\">\n            {props.onAcceptText}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n\n  export default PopUp;"]},"metadata":{},"sourceType":"module"}